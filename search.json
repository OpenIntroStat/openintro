[{"path":"https://openintrostat.github.io/openintro/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant, version 1.0.0, available .","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://openintrostat.github.io/openintro/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Mine Çetinkaya-Rundel  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. openintro Copyright (C) 2019 Mine Çetinkaya-Rundel This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://openintrostat.github.io/openintro/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mine Çetinkaya-Rundel. Author, maintainer. David Diez. Author. Andrew Bray. Author. Albert Y. Kim. Author. Ben Baumer. Author. Chester Ismay. Author. Nick Paterno. Author. Christopher Barr. Author.","code":""},{"path":"https://openintrostat.github.io/openintro/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Çetinkaya-Rundel M, Diez D, Bray , Kim , Baumer B, Ismay C, Paterno N, Barr C (2024). openintro: Datasets Supplemental Functions 'OpenIntro' Textbooks Labs. R package version 2.5.0, https://github.com/OpenIntroStat/openintro/, http://openintrostat.github.io/openintro/.","code":"@Manual{,   title = {openintro: Datasets and Supplemental Functions from 'OpenIntro' Textbooks and Labs},   author = {Mine Çetinkaya-Rundel and David Diez and Andrew Bray and Albert Y. Kim and Ben Baumer and Chester Ismay and Nick Paterno and Christopher Barr},   year = {2024},   note = {R package version 2.5.0, https://github.com/OpenIntroStat/openintro/},   url = {http://openintrostat.github.io/openintro/}, }"},{"path":"https://openintrostat.github.io/openintro/index.html","id":"openintro-","dir":"","previous_headings":"","what":"Data sets and supplemental functions from OpenIntro textbooks and labs","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"Supplemental functions data OpenIntro resources, includes open-source textbooks resources introductory statistics openintro.org. package contains datasets used open-source textbooks along custom plotting functions reproducing book figures. package also contains datasets used OpenIntro labs. Note many functions examples include color transparency; plotting elements may show properly () run versions Windows operating system.","code":""},{"path":"https://openintrostat.github.io/openintro/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"can install released version openintro CRAN : can install development version openintro GitHub : package produced part OpenIntro project. accompanying textbook, visit openintro.org. PDF textbook free paperbacks can purchased online (royalty-free).","code":"install.packages(\"openintro\") # install.packages(\"devtools\") library(devtools) install_github(\"OpenIntroStat/openintro\")"},{"path":"https://openintrostat.github.io/openintro/index.html","id":"questions-bugs-feature-requests","dir":"","previous_headings":"","what":"Questions, bugs, feature requests","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"can file issue get help, report bug, make feature request. filing issue get help report bug, please make minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://openintrostat.github.io/openintro/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"Process adding new data package following steps use devtools usethis packages various steps. recommend using process suggesting new datasets added package. dataset large (>500MB) ’d like add function, please open issue first discussion making pull request. Note: write access repo, can skip step. Start new pull request usethis::pr_init(\"BRANCH-NAME\"), BRANCH-NAME informative branch name. adding file .rda file begin (Excel, csv, etc.), create folder data-raw folder name dataset (’d like show package). Please use snake_case naming, e.g. name_of_dataset. Place dataset raw form folder. Also data-raw folder, create new R script called name_of_dataset-dataprep.R write code needed read file, make modifications data needed (), end usethis::use_data() save data package .rda file ideal compression. See examples folders data-raw sample code. contents folder end package (entire folder ignored .Rbuildignore) don’t need worry adding package dependencies etc. R folder, create R script called data-name_of_dataset add documentation using Roxygen style. See documentation files help style. examples, use tidyverse syntax use library(tidyverse) use relevant packages, e.g. library(dplyr), library(ggplot2). Restart R run devtools::load_all() make sure data loads run examples confirm work. Run devtools::document(), restart R, devtools::load_all(). , check ?name_of_dataset make sure documentation looks expected. Run devtools::check(). NOTE see result check package size. ERRORs, NOTEs, WARNINGs generated, resolve open issue help. pkgdown.yml file, add name dataset reference, correct alphabetical order. Add note NEWS.md new dataset ’ve added link GitHub username can acknowledge contribution, e.g. “added @mine-cetinkaya-rundel”.","code":""},{"path":"https://openintrostat.github.io/openintro/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"Please note openintro project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ArrowLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Line That may have Arrows on the Ends — ArrowLines","title":"Create a Line That may have Arrows on the Ends — ArrowLines","text":"Similar lines, function include endpoints solid points, open points, arrows (mix--match ready).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ArrowLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Line That may have Arrows on the Ends — ArrowLines","text":"","code":"ArrowLines(   x,   y,   lty = 1,   lwd = 2.5,   col = 1,   length = 0.1,   af = 3,   cex.pch = 1.2,   ends = c(\"a\", \"a\"),   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/ArrowLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Line That may have Arrows on the Ends — ArrowLines","text":"x vector x-coordinates line drawn. y vector y-coordinates line drawn. vector length x. lty line type. lwd line width. col line endpoint color. length end point arrow, specifies sizing arrow. See length argument arrows help file additional details. af tuning parameter creating arrow. Usually default (3) work. arrow shown, make value larger. arrow appears extend line, specify smaller value. cex.pch Plotting character size (open closed point end). ends character vector length 2, first value corresponds start line second end line. value \"\" corresponds arrow shown, \"o\" open circle, \"c\" closed point. ... additional arguments passed lines function.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/ArrowLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Line That may have Arrows on the Ends — ArrowLines","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ArrowLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Line That may have Arrows on the Ends — ArrowLines","text":"","code":"CCP(xlim = c(-6, 6), ylim = c(-6, 6), ticklabs = 2) x <- c(-2, 0, 2, 4) y <- c(0, 3, 0, 3) ArrowLines(x, y, col = COL[1], ends = c(\"c\", \"c\")) points(x, y, col = COL[1], pch = 19, cex = 1.2)   CCP(xlim = c(-6, 6), ylim = c(-6, 6), ticklabs = 2) x <- c(-3, 0, 1, 3) y <- c(2, 1, -2, 1) ArrowLines(x, y, col = COL[1], ends = c(\"c\", \"c\")) points(x, y, col = COL[1], pch = 19, cex = 1.2)   CCP(xlim = c(-6, 6), ylim = c(-6, 6), ticklabs = 2) x <- seq(-2, 2, 0.01) y <- x^2 - 3 ArrowLines(x, y, col = COL[1], ends = c(\"c\", \"c\")) x <- seq(-2, 2, 1) y <- x^2 - 3 points(x, y, col = COL[1], pch = 19, cex = 1.2)"},{"path":"https://openintrostat.github.io/openintro/reference/AxisInDollars.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","title":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","text":"Convert simplify axis labels US Dollars.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/AxisInDollars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","text":"","code":"AxisInDollars(side, at, include.symbol = TRUE, simplify = TRUE, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/AxisInDollars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","text":"side integer specifying side plot axis drawn . axis place follows: 1 = , 2 = left, 3 = 4 = right. points tick-marks drawn. include.symbol Whether include dollar percent symbol, symbol chosen depends function. simplify dollars, simplify amount use abbreviations \"k\", \"m\", \"b\", \"t\" numbers tend thousands, millions, billions, trillions, respectively. ... Arguments passed axis","code":""},{"path":"https://openintrostat.github.io/openintro/reference/AxisInDollars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","text":"numeric locations axis scale tick marks drawn plot first drawn.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/AxisInDollars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/AxisInDollars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Better Looking Axis Labels for US Dollars — AxisInDollars","text":"","code":"x <- sample(50e6, 100) hist(x, axes = FALSE) AxisInDollars(1, pretty(x))"},{"path":"https://openintrostat.github.io/openintro/reference/AxisInPercent.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Better Looking Axis Labels for Percentages — AxisInPercent","title":"Build Better Looking Axis Labels for Percentages — AxisInPercent","text":"Convert simplify axis labels percentages.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/AxisInPercent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Better Looking Axis Labels for Percentages — AxisInPercent","text":"","code":"AxisInPercent(side, at, include.symbol = TRUE, simplify = TRUE, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/AxisInPercent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Better Looking Axis Labels for Percentages — AxisInPercent","text":"side integer specifying side plot axis drawn . axis place follows: 1 = , 2 = left, 3 = 4 = right. points tick-marks drawn. include.symbol Whether include dollar percent symbol, symbol chosen depends function. simplify dollars, simplify amount use abbreviations \"k\", \"m\", \"b\", \"t\" numbers tend thousands, millions, billions, trillions, respectively. ... Arguments passed axis","code":""},{"path":"https://openintrostat.github.io/openintro/reference/AxisInPercent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Better Looking Axis Labels for Percentages — AxisInPercent","text":"numeric locations axis scale tick marks drawn plot first drawn.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/AxisInPercent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build Better Looking Axis Labels for Percentages — AxisInPercent","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/AxisInPercent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Better Looking Axis Labels for Percentages — AxisInPercent","text":"","code":"x <- sample(50e6, 100) hist(x, axes = FALSE) AxisInDollars(1, pretty(x))"},{"path":"https://openintrostat.github.io/openintro/reference/BG.html","id":null,"dir":"Reference","previous_headings":"","what":"Add background color to a plot — BG","title":"Add background color to a plot — BG","text":"Overlays colored rectangle entire plotting region.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/BG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add background color to a plot — BG","text":"","code":"BG(col = openintro::COL[5, 9])"},{"path":"https://openintrostat.github.io/openintro/reference/BG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add background color to a plot — BG","text":"col Color overlay.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/BG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add background color to a plot — BG","text":"","code":"Test <- function(col) {   plot(1:7,     col = COL[1:7], pch = 19, cex = 5,     xlim = c(0, 8),     ylim = c(0, 9)   )   BG(col)   points(2:8, col = COL[1:7], pch = 19, cex = 5)   text(2, 6, \"Correct Color\")   text(6, 2, \"Affected Color\") }  # Works well since black color almost fully transparent Test(COL[5, 9])   # Works less well since transparency isn't as significant Test(COL[5, 6])   # Pretty ugly due to overlay Test(COL[5, 3])   # Basically useless due to heavy color gradient Test(COL[4, 2])"},{"path":"https://openintrostat.github.io/openintro/reference/Braces.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Braces Symbol — Braces","title":"Plot a Braces Symbol — Braces","text":"function yet flexible.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/Braces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Braces Symbol — Braces","text":"","code":"Braces(x, y, face.radians = 0, long = 1, short = 0.2, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/Braces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Braces Symbol — Braces","text":"x x-coordinate center braces. y y-coordinate center braces. face.radians Radians braces face.  example, default face.radians = 0 braces facing right. Setting pi / 2 result braces facing . long units long dimension braces. short units short dimension braces.  must less equal half long dimension. ... Arguments passed lines.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/Braces.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a Braces Symbol — Braces","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/Braces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Braces Symbol — Braces","text":"","code":"plot(0:1, 0:1, type = \"n\") Braces(0.5, 0.5, face.radians = 3 * pi / 2)"},{"path":"https://openintrostat.github.io/openintro/reference/CCP.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Cartesian Coordinate Plane — CCP","title":"Plot a Cartesian Coordinate Plane — CCP","text":"Create Cartesian Coordinate Plane.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/CCP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Cartesian Coordinate Plane — CCP","text":"","code":"CCP(   xlim = c(-4, 4),   ylim = c(-4, 4),   mar = rep(0, 4),   length = 0.1,   tcl = 0.007,   xylab = FALSE,   ticks = 1,   ticklabs = 1,   xpos = 1,   ypos = 2,   cex.coord = 1,   cex.xylab = 1.5,   add = FALSE )"},{"path":"https://openintrostat.github.io/openintro/reference/CCP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Cartesian Coordinate Plane — CCP","text":"xlim x-limits plane (vector length 2). ylim y-limits plane (vector length 2). mar Plotting margins. length length argument passed arrows function used control size arrow. tcl Tick size. xylab Whether x y shown next labels. ticks frequently tick marks shown axes. vector length 2, first argument correspond x-axis second y-axis. ticklabs frequently tick labels shown axes. vector length 2, first argument correspond x-axis second y-axis. xpos position labels x-axis. See pos argument text function additional details. ypos position labels y-axis. See pos argument text function additional details. cex.coord Inflation factor font size coordinates, value larger zero acceptable 1 corresponds default. cex.xylab Inflation factor font size x y labels, value larger zero acceptable 1 corresponds default. add Indicate whether new plot created (FALSE, default) Cartesian Coordinate Plane added existing plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/CCP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a Cartesian Coordinate Plane — CCP","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/CCP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Cartesian Coordinate Plane — CCP","text":"","code":"CCP()   CCP(xylab = TRUE, ylim = c(-3.5, 2), xpos = 3, cex.coord = 1)   CCP(xlim = c(-8, 8), ylim = c(-10, 6), ticklabs = c(2, 2), cex.xylab = 0.8)"},{"path":"https://openintrostat.github.io/openintro/reference/COL.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenIntro Statistics colors — COL","title":"OpenIntro Statistics colors — COL","text":"core colors used OpenIntro Statistics textbook. blue, green, yellow, red colors also gray-scaled, meaning changes required printing black white copies.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/COL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenIntro Statistics colors — COL","text":"","code":"COL"},{"path":"https://openintrostat.github.io/openintro/reference/COL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenIntro Statistics colors — COL","text":"7--13 matrix 7 colors thirteen fading scales: blue, green, yellow, red, black, gray, light gray.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/COL.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OpenIntro Statistics colors — COL","text":"Colors selected OpenIntro's -house graphic designer, Meenal Patel.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/COL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenIntro Statistics colors — COL","text":"","code":"plot(1:7, 7:1,   col = COL, pch = 19, cex = 6, xlab = \"\", ylab = \"\",   xlim = c(0.5, 7.5), ylim = c(-2.5, 8), axes = FALSE ) text(1:7, 7:1 + 0.7, paste(\"COL[\", 1:7, \"]\", sep = \"\"), cex = 0.9) points(1:7, 7:1 - 0.7, col = COL[, 2], pch = 19, cex = 6) points(1:7, 7:1 - 1.4, col = COL[, 3], pch = 19, cex = 6) points(1:7, 7:1 - 2.1, col = COL[, 4], pch = 19, cex = 6)"},{"path":"https://openintrostat.github.io/openintro/reference/CT2DF.html","id":null,"dir":"Reference","previous_headings":"","what":"Contingency Table to Data Frame — CT2DF","title":"Contingency Table to Data Frame — CT2DF","text":"Take 2D contingency table create data frame representing individual cases.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/CT2DF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contingency Table to Data Frame — CT2DF","text":"","code":"CT2DF(x, rn = row.names(x), cn = colnames(x), dfn = c(\"row.var\", \"col.var\"))"},{"path":"https://openintrostat.github.io/openintro/reference/CT2DF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contingency Table to Data Frame — CT2DF","text":"x Contingency table matrix. rn Character vector row names. cn Character vector column names. dfn Character vector 2 values variable representing rows columns.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/CT2DF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contingency Table to Data Frame — CT2DF","text":"data frame two columns.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/CT2DF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Contingency Table to Data Frame — CT2DF","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/CT2DF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contingency Table to Data Frame — CT2DF","text":"","code":"a <- matrix(   c(459, 727, 854, 385, 99, 4198, 6245, 4821, 1634, 578),   2,   byrow = TRUE ) b <-   CT2DF(     a,     c(\"No\", \"Yes\"),     c(\"Excellent\", \"Very good\", \"Good\", \"Fair\", \"Poor\"),     c(\"coverage\", \"health_status\")   ) table(b) #>         health_status #> coverage Excellent Fair Good Poor Very good #>      No        459  385  854   99       727 #>      Yes      4198 1634 4821  578      6245"},{"path":"https://openintrostat.github.io/openintro/reference/ChiSquareTail.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot upper tail in chi-square distribution — ChiSquareTail","title":"Plot upper tail in chi-square distribution — ChiSquareTail","text":"Plot chi-square distribution shade upper tail.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ChiSquareTail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot upper tail in chi-square distribution — ChiSquareTail","text":"","code":"ChiSquareTail(   U,   df,   xlim = c(0, 10),   col = fadeColor(\"black\", \"22\"),   axes = TRUE,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/ChiSquareTail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot upper tail in chi-square distribution — ChiSquareTail","text":"U Cut upper tail. df Degrees freedom. xlim Limits plot. col Color shading. axes Whether plot x-axis. ... Currently ignored.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ChiSquareTail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot upper tail in chi-square distribution — ChiSquareTail","text":"Nothing returned function.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/ChiSquareTail.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot upper tail in chi-square distribution — ChiSquareTail","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ChiSquareTail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot upper tail in chi-square distribution — ChiSquareTail","text":"","code":"data(COL) ChiSquareTail(11.7,   7,   c(0, 25),   col = COL[1] )"},{"path":"https://openintrostat.github.io/openintro/reference/IMSCOL.html","id":null,"dir":"Reference","previous_headings":"","what":"Introduction to Modern Statistics (IMS) Colors — IMSCOL","title":"Introduction to Modern Statistics (IMS) Colors — IMSCOL","text":"core colors used Introduction Modern Statistics textbook. blue, green, pink, yellow, red colors also gray-scaled, meaning changes required printing black white copies.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/IMSCOL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Introduction to Modern Statistics (IMS) Colors — IMSCOL","text":"","code":"IMSCOL"},{"path":"https://openintrostat.github.io/openintro/reference/IMSCOL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Introduction to Modern Statistics (IMS) Colors — IMSCOL","text":"8--13 matrix 7 colors four fading scales: blue, green, pink, yellow, red, black, gray, light gray.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/IMSCOL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Introduction to Modern Statistics (IMS) Colors — IMSCOL","text":"","code":"plot(1:7, 7:1,   col = IMSCOL, pch = 19, cex = 6, xlab = \"\", ylab = \"\",   xlim = c(0.5, 7.5), ylim = c(-2.5, 8), axes = FALSE ) text(1:7, 7:1 + 0.7, paste(\"IMSCOL[\", 1:7, \"]\", sep = \"\"), cex = 0.9) points(1:7, 7:1 - 0.7, col = IMSCOL[, 2], pch = 19, cex = 6) points(1:7, 7:1 - 1.4, col = IMSCOL[, 3], pch = 19, cex = 6) points(1:7, 7:1 - 2.1, col = IMSCOL[, 4], pch = 19, cex = 6)"},{"path":"https://openintrostat.github.io/openintro/reference/LAhomes.html","id":null,"dir":"Reference","previous_headings":"","what":"LAhomes — LAhomes","title":"LAhomes — LAhomes","text":"Data collected Andrew Bray Reed College characteristics LA Homes 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/LAhomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LAhomes — LAhomes","text":"","code":"LAhomes"},{"path":"https://openintrostat.github.io/openintro/reference/LAhomes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LAhomes — LAhomes","text":"data frame 1594 observations following 8 variables. city City home located. type Type home levels Condo/Twh - condo townhouse, SFR - single family residence, NA bed Number bedrooms home. bath Number bathrooms home. garage Number cars can parked garage. Note value 4 refers 4 garage spaces. sqft Squarefootage home. pool Indicates home pool. price Listing price home.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/LAhomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LAhomes — LAhomes","text":"","code":"library(ggplot2)  ggplot(LAhomes, aes(sqft, price)) +   geom_point(alpha = 0.2) +   theme_minimal() +   labs(     title = \"Can we predict list price from squarefootage?\",     subtitle = \"Homes in the Los Angeles area\",     x = \"Square feet\",     y = \"List price\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/MosaicPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Mosaic Plot — MosaicPlot","title":"Custom Mosaic Plot — MosaicPlot","text":"Plot mosaic plot custom built particular figure.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/MosaicPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Mosaic Plot — MosaicPlot","text":"","code":"MosaicPlot(   formula,   data,   col = \"#00000022\",   border = 1,   dir = c(\"v\", \"h\"),   off = 0.01,   cex.axis = 0.7,   col.dir = \"v\",   flip = c(\"v\"),   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/MosaicPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Mosaic Plot — MosaicPlot","text":"formula Formula describing variable relationship. data Data frame variables, optional. col Colors plotting. border Ignored. dir Ignored. Fraction white space box plot. cex.axis Axis label size. col.dir Direction lay colors. flip Whether flip ordering vertical (\"v\") /horizontal (\"h\") ordering plot. ... Ignored.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/MosaicPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Custom Mosaic Plot — MosaicPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/MosaicPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Mosaic Plot — MosaicPlot","text":"","code":"data(email) data(COL) email$spam <- ifelse(email$spam == 0, \"not\\nspam\", \"spam\") MosaicPlot(number ~ spam, email, col = COL[1:3], off = 0.02)"},{"path":"https://openintrostat.github.io/openintro/reference/PlotWLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data and add a regression line — PlotWLine","title":"Plot data and add a regression line — PlotWLine","text":"Plot data add regression line.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/PlotWLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data and add a regression line — PlotWLine","text":"","code":"PlotWLine(   x,   y,   xlab = \"\",   ylab = \"\",   col = fadeColor(4, \"88\"),   cex = 1.2,   pch = 20,   n = 4,   nMax = 4,   yR = 0.1,   axes = TRUE,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/PlotWLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data and add a regression line — PlotWLine","text":"x Predictor variable. y Outcome variable. xlab x-axis label. ylab y-axis label. col Color points. cex Size points. pch Plotting character. n preferred number axis labels. nMax maximum number axis labels. yR y-limit buffer factor. axes Boolean indicate whether include axes. ... Passed plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/PlotWLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot data and add a regression line — PlotWLine","text":"","code":"PlotWLine(1:10, seq(-5, -2, length.out = 10) + rnorm(10))"},{"path":"https://openintrostat.github.io/openintro/reference/absenteeism.html","id":null,"dir":"Reference","previous_headings":"","what":"Absenteeism from school in New South Wales — absenteeism","title":"Absenteeism from school in New South Wales — absenteeism","text":"Researchers interested relationship absenteeism school certain demographic characteristics children collected data 146 randomly sampled students rural New South Wales, Australia, particular school year.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/absenteeism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absenteeism from school in New South Wales — absenteeism","text":"","code":"absenteeism"},{"path":"https://openintrostat.github.io/openintro/reference/absenteeism.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Absenteeism from school in New South Wales — absenteeism","text":"data frame 146 observations following 5 variables. eth Ethnicity, representing Aboriginal () (N). sex Gender. age Age bucket. lrn Learner status, average learner (AL) slow learner (SL). days Number days absent.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/absenteeism.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Absenteeism from school in New South Wales — absenteeism","text":"Venables WN, Ripley BD. 2002. Modern Applied Statistics S. Fourth Edition. New York: Springer. Data can also found R MASS package dataset name quine.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/absenteeism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absenteeism from school in New South Wales — absenteeism","text":"","code":"library(ggplot2)  ggplot(absenteeism, aes(x = eth, y = days)) +   geom_boxplot() +   coord_flip()"},{"path":"https://openintrostat.github.io/openintro/reference/acs12.html","id":null,"dir":"Reference","previous_headings":"","what":"American Community Survey, 2012 — acs12","title":"American Community Survey, 2012 — acs12","text":"Results US Census American Community Survey, 2012.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/acs12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"American Community Survey, 2012 — acs12","text":"","code":"acs12"},{"path":"https://openintrostat.github.io/openintro/reference/acs12.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"American Community Survey, 2012 — acs12","text":"data frame 2000 observations following 13 variables. income Annual income. employment Employment status. hrs_work Hours worked per week. race Race. age Age, years. gender Gender. citizen Whether person U.S. citizen. time_to_work Travel time work, minutes. lang Language spoken home. married Whether person married. edu Education level. disability Whether person disabled. birth_qrtr quarter year person born, e.g. Jan thru Mar.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/acs12.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"American Community Survey, 2012 — acs12","text":"https://www.census.gov/programs-surveys/acs","code":""},{"path":"https://openintrostat.github.io/openintro/reference/acs12.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"American Community Survey, 2012 — acs12","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(broom)  # employed only acs12_emp <- acs12 |>   filter(     age >= 30, age <= 60,     employment == \"employed\",     income > 0   )  # linear model ggplot(acs12_emp, mapping = aes(x = age, y = income)) +   geom_point() +   geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x'   lm(income ~ age, data = acs12_emp) |>   tidy() #> # A tibble: 2 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)   46579.    13600.     3.43  0.000664 #> 2 age             156.      297.     0.524 0.600     # log-transormed model ggplot(acs12_emp, mapping = aes(x = age, y = log(income))) +   geom_point() +   geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x'   lm(log(income) ~ age, data = acs12_emp) |>   tidy() #> # A tibble: 2 × 5 #>   term        estimate std.error statistic   p.value #>   <chr>          <dbl>     <dbl>     <dbl>     <dbl> #> 1 (Intercept)   9.81     0.256       38.3  2.47e-152 #> 2 age           0.0138   0.00559      2.46 1.41e-  2"},{"path":"https://openintrostat.github.io/openintro/reference/age_at_mar.html","id":null,"dir":"Reference","previous_headings":"","what":"Age at first marriage of 5,534 US women. — age_at_mar","title":"Age at first marriage of 5,534 US women. — age_at_mar","text":"Age first marriage 5,534 US women responded National Survey Family Growth (NSFG) conducted CDC 2006 2010 cycle.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/age_at_mar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age at first marriage of 5,534 US women. — age_at_mar","text":"","code":"age_at_mar"},{"path":"https://openintrostat.github.io/openintro/reference/age_at_mar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Age at first marriage of 5,534 US women. — age_at_mar","text":"data frame 5,534 observations 1 variable. age Age first marriage.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/age_at_mar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Age at first marriage of 5,534 US women. — age_at_mar","text":"National Survey Family Growth, 2006-2010 cycle, https://www.cdc.gov/nchs/nsfg/nsfg_2006_2010_puf.htm.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/age_at_mar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age at first marriage of 5,534 US women. — age_at_mar","text":"","code":"library(ggplot2)  ggplot(age_at_mar, mapping = aes(x = age)) +   geom_histogram(binwidth = 3) +   labs(     x = \"Age\", y = \"Count\", title = \"Age at first marriage, US Women\",     subtitle = \"Source: National Survey of Family Growth Survey, 2006 - 2010\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/ames.html","id":null,"dir":"Reference","previous_headings":"","what":"Housing prices in Ames, Iowa — ames","title":"Housing prices in Ames, Iowa — ames","text":"Data set contains information Ames Assessor's Office used computing assessed values individual residential properties sold Ames, IA 2006 2010. See detailed variable descriptions.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Housing prices in Ames, Iowa — ames","text":"","code":"ames"},{"path":"https://openintrostat.github.io/openintro/reference/ames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Housing prices in Ames, Iowa — ames","text":"tbl_df 2930 rows 82 variables: Order Observation number. PID Parcel identification number  - can used city web site parcel review. area grade (ground) living area square feet. price Sale price USD. MS.SubClass Identifies type dwelling involved sale. MS.Zoning Identifies general zoning classification sale. Lot.Frontage Linear feet street connected property. Lot.Area Lot size square feet. Street Type road access property. Alley Type alley access property. Lot.Shape General shape property. Land.Contour Flatness property. Utilities Type utilities available. Lot.Config Lot configuration. Land.Slope Slope property. Neighborhood Physical locations within Ames city limits (map available). Condition.1 Proximity various conditions. Condition.2 Proximity various conditions (one present). Bldg.Type Type dwelling. House.Style Style dwelling. Overall.Qual Rates overall material finish house. Overall.Cond Rates overall condition house. Year.Built Original construction date. Year.Remod.Add Remodel date (construction date remodeling additions). Roof.Style Type roof. Roof.Matl Roof material. Exterior.1st Exterior covering house. Exterior.2nd Exterior covering house (one material). Mas.Vnr.Type Masonry veneer type. Mas.Vnr.Area Masonry veneer area square feet. Exter.Qual Evaluates quality material exterior. Exter.Cond Evaluates present condition material exterior. Foundation Type foundation. Bsmt.Qual Evaluates height basement. Bsmt.Cond Evaluates general condition basement. Bsmt.Exposure Refers walkout garden level walls. BsmtFin.Type.1 Rating basement finished area. BsmtFin.SF.1 Type 1 finished square feet. BsmtFin.Type.2 Rating basement finished area (multiple types). BsmtFin.SF.2 Type 2 finished square feet. Bsmt.Unf.SF Unfinished square feet basement area. Total.Bsmt.SF Total square feet basement area. Heating Type heating. Heating.QC Heating quality condition. Central.Air Central air conditioning. Electrical Electrical system. X1st.Flr.SF First Floor square feet. X2nd.Flr.SF Second floor square feet. Low.Qual.Fin.SF Low quality finished square feet (floors). Bsmt.Full.Bath Basement full bathrooms. Bsmt.Half.Bath Basement half bathrooms. Full.Bath Full bathrooms grade. Half.Bath Half baths grade. Bedroom.AbvGr Bedrooms grade (include basement bedrooms). Kitchen.AbvGr Kitchens grade. Kitchen.Qual Kitchen quality. TotRms.AbvGrd Total rooms grade (include bathrooms). Functional Home functionality (Assume typical unless deductions warranted). Fireplaces Number fireplaces. Fireplace.Qu Fireplace quality. Garage.Type Garage location. Garage.Yr.Blt Year garage built. Garage.Finish Interior finish garage. Garage.Cars Size garage car capacity. Garage.Area Size garage square feet. Garage.Qual Garage quality. Garage.Cond Garage condition. Paved.Drive Paved driveway. Wood.Deck.SF Wood deck area square feet. Open.Porch.SF Open porch area square feet. Enclosed.Porch Enclosed porch area square feet. X3Ssn.Porch Three season porch area square feet. Screen.Porch Screen porch area square feet. Pool.Area Pool area square feet. Pool.QC Pool quality. Fence Fence quality. Misc.Feature Miscellaneous feature covered categories. Misc.Val Dollar value miscellaneous feature. Mo.Sold Month Sold (MM). Yr.Sold Year Sold (YYYY). Sale.Type Type sale. Sale.Condition Condition sale.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ames.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Housing prices in Ames, Iowa — ames","text":"De Cock, Dean. \"Ames, Iowa: Alternative Boston housing data end semester regression project.\" Journal Statistics Education 19.3 (2011).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ami_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Acute Myocardial Infarction (Heart Attack) Events — ami_occurrences","title":"Acute Myocardial Infarction (Heart Attack) Events — ami_occurrences","text":"dataset simulated contains realistic occurrences AMI NY City.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ami_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acute Myocardial Infarction (Heart Attack) Events — ami_occurrences","text":"","code":"ami_occurrences"},{"path":"https://openintrostat.github.io/openintro/reference/ami_occurrences.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Acute Myocardial Infarction (Heart Attack) Events — ami_occurrences","text":"data frame 365 observations following variable. ami Number daily occurrences heart attacks NY City.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ami_occurrences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Acute Myocardial Infarction (Heart Attack) Events — ami_occurrences","text":"","code":"library(ggplot2)  ggplot(ami_occurrences, mapping = aes(x = ami)) +   geom_bar() +   labs(     x = \"Acute Myocardial Infarction events\",     y = \"Count\",     title = \"Acute Myocardial Infarction events in NYC\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/antibiotics.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-existing conditions in 92 children — antibiotics","title":"Pre-existing conditions in 92 children — antibiotics","text":"Pre-existing medical conditions 92 children involved study optimal duration antibiotic use treatment tracheitis, upper respiratory infection.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/antibiotics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-existing conditions in 92 children — antibiotics","text":"","code":"antibiotics"},{"path":"https://openintrostat.github.io/openintro/reference/antibiotics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pre-existing conditions in 92 children — antibiotics","text":"data frame 92 observations, representing child, following variable. condition Pre-existing medical condition.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/antibiotics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-existing conditions in 92 children — antibiotics","text":"","code":"library(ggplot2)  ggplot(antibiotics, aes(x = condition)) +   geom_bar() +   labs(     x = \"Conidition\", y = \"Count\",     title = \"Pre-existing coniditions of children\",     subtitle = \"in antibiotic use study\"   ) +   coord_flip()"},{"path":"https://openintrostat.github.io/openintro/reference/arbuthnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Male and female births in London — arbuthnot","title":"Male and female births in London — arbuthnot","text":"Arbuthnot's data describes male female christenings (births) London 1629-1710.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/arbuthnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Male and female births in London — arbuthnot","text":"","code":"arbuthnot"},{"path":"https://openintrostat.github.io/openintro/reference/arbuthnot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Male and female births in London — arbuthnot","text":"tbl_df 82 rows 3 variables: year year, ranging 1629 1710 boys number male christenings (births) girls number female christenings (births)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/arbuthnot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Male and female births in London — arbuthnot","text":"data excerpted Arbuthnot dataset HistData package.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/arbuthnot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Male and female births in London — arbuthnot","text":"John Arbuthnot (1710) used time series data carry first known significance test. every one 82 years, male christenings female christenings. Arbuthnot wondered, might also wonder due chance, whether meant birth ratio actually 1:1.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/arbuthnot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Male and female births in London — arbuthnot","text":"","code":"library(ggplot2) library(tidyr)  # All births ggplot(arbuthnot, aes(x = year, y = boys + girls, group = 1)) +   geom_line()   # Boys and girls arbuthnot |>   pivot_longer(cols = -year, names_to = \"sex\", values_to = \"n\") |>   ggplot(aes(x = year, y = n, color = sex, group = sex)) +   geom_line()"},{"path":"https://openintrostat.github.io/openintro/reference/ask.html","id":null,"dir":"Reference","previous_headings":"","what":"How important is it to ask pointed questions? — ask","title":"How important is it to ask pointed questions? — ask","text":"experiment, individual asked seller iPod (product commonly used store music smart phones...).  participant received $10 + 5% sale price participating.  iPod selling frozen twice past inexplicably otherwise worked fine. prospective buyer starts asks one three final questions, depending seller's treatment group.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How important is it to ask pointed questions? — ask","text":"","code":"ask"},{"path":"https://openintrostat.github.io/openintro/reference/ask.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"How important is it to ask pointed questions? — ask","text":"data frame 219 observations following 3 variables. question_class type question: general, pos_assumption, neg_assumption. question question corresponding question.class response classified response seller, either disclose hide.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ask.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"How important is it to ask pointed questions? — ask","text":"Minson JA, Ruedy NE, Schweitzer . thing stupid question: Question disclosure strategic communication.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"How important is it to ask pointed questions? — ask","text":"three possible questions: General: can tell ? Positive Assumption: problems, ? Negative Assumption: problems ? outcome variable whether participant discloses hides problem iPod.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How important is it to ask pointed questions? — ask","text":"","code":"library(dplyr) library(ggplot2)  # Distribution of responses based on question type ask |>   count(question_class, response) #> # A tibble: 6 × 3 #>   question_class response     n #>   <chr>          <chr>    <int> #> 1 general        disclose     2 #> 2 general        hide        71 #> 3 neg_assumption disclose    36 #> 4 neg_assumption hide        37 #> 5 pos_assumption disclose    23 #> 6 pos_assumption hide        50  # Visualize relative frequencies of responses based on question type ggplot(ask, aes(x = question_class, fill = response)) +   geom_bar(position = \"fill\")   # Perform chi-square test (test <- chisq.test(table(ask$question_class, ask$response))) #>  #> \tPearson's Chi-squared test #>  #> data:  table(ask$question_class, ask$response) #> X-squared = 40.128, df = 2, p-value = 1.933e-09 #>   # Check the test's assumption around sufficient expected observations # per table cell. test$expected #>                  #>                  disclose     hide #>   general        20.33333 52.66667 #>   neg_assumption 20.33333 52.66667 #>   pos_assumption 20.33333 52.66667"},{"path":"https://openintrostat.github.io/openintro/reference/association.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for association plots — association","title":"Simulated data for association plots — association","text":"Simulated dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for association plots — association","text":"","code":"association"},{"path":"https://openintrostat.github.io/openintro/reference/association.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for association plots — association","text":"data frame 121 observations following 4 variables. x1 numeric vector x2 numeric vector x3 numeric vector y1 numeric vector y2 numeric vector y3 numeric vector y4 numeric vector y5 numeric vector y6 numeric vector y7 numeric vector y8 numeric vector y9 numeric vector y10 numeric vector y11 numeric vector y12 numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated data for association plots — association","text":"","code":"library(ggplot2)  ggplot(association, aes(x = x1, y = y1)) +   geom_point()   ggplot(association, aes(x = x2, y = y4)) +   geom_point()   ggplot(association, aes(x = x3, y = y7)) +   geom_point()"},{"path":"https://openintrostat.github.io/openintro/reference/assortive_mating.html","id":null,"dir":"Reference","previous_headings":"","what":"Eye color of couples — assortive_mating","title":"Eye color of couples — assortive_mating","text":"Colors eye colors male female partners.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/assortive_mating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eye color of couples — assortive_mating","text":"","code":"assortative_mating"},{"path":"https://openintrostat.github.io/openintro/reference/assortive_mating.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eye color of couples — assortive_mating","text":"data frame 204 observations following 2 variables. self_male factor levels blue, brown, green partner_female factor blue, brown, green","code":""},{"path":"https://openintrostat.github.io/openintro/reference/assortive_mating.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Eye color of couples — assortive_mating","text":"B. Laeng et al. blue-eyed men prefer women eye color? : Behavioral Ecology Sociobiology 61.3 (2007), pp. 371-384.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/assortive_mating.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eye color of couples — assortive_mating","text":"","code":"data(assortive_mating) table(assortive_mating) #>          partner_female #> self_male blue brown green #>     blue    78    23    13 #>     brown   19    23    12 #>     green   11     9    16"},{"path":"https://openintrostat.github.io/openintro/reference/avandia.html","id":null,"dir":"Reference","previous_headings":"","what":"Cardiovascular problems for two types of Diabetes medicines — avandia","title":"Cardiovascular problems for two types of Diabetes medicines — avandia","text":"comparison cardiovascular problems Rosiglitazone Pioglitazone.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/avandia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cardiovascular problems for two types of Diabetes medicines — avandia","text":"","code":"avandia"},{"path":"https://openintrostat.github.io/openintro/reference/avandia.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cardiovascular problems for two types of Diabetes medicines — avandia","text":"data frame 227571 observations following 2 variables. treatment factor levels Pioglitazone Rosiglitazone cardiovascular_problems factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/avandia.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cardiovascular problems for two types of Diabetes medicines — avandia","text":"D.J. Graham et al. Risk acute myocardial infarction, stroke, heart failure, death elderly Medicare patients treated rosiglitazone pioglitazone. : JAMA 304.4 (2010), p. 411. issn: 0098-7484.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/avandia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cardiovascular problems for two types of Diabetes medicines — avandia","text":"","code":"table(avandia) #>                cardiovascular_problems #> treatment           no    yes #>   Pioglitazone  154592   5386 #>   Rosiglitazone  65000   2593"},{"path":"https://openintrostat.github.io/openintro/reference/babies.html","id":null,"dir":"Reference","previous_headings":"","what":"The Child Health and Development Studies — babies","title":"The Child Health and Development Studies — babies","text":"Child Health Development Studies investigate range topics. One study, particular, considered pregnancies 1960 1967 among women Kaiser Foundation Health Plan San Francisco East Bay area. ideal provenance data. better documented recent dataset similar topic similar variables, see births14. Additionally, Gestation dataset mosaicData package also contains similar data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/babies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Child Health and Development Studies — babies","text":"","code":"babies"},{"path":"https://openintrostat.github.io/openintro/reference/babies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Child Health and Development Studies — babies","text":"data frame 1236 rows 8 variables: case id number bwt birthweight, ounces gestation length gestation, days parity binary indicator first pregnancy (0 = first pregnancy) age mother's age years height mother's height inches weight mother's weight pounds smoke binary indicator whether mother smokes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/babies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The Child Health and Development Studies — babies","text":"data come Child Health Development Studies.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/babies_crawl.html","id":null,"dir":"Reference","previous_headings":"","what":"Crawling age — babies_crawl","title":"Crawling age — babies_crawl","text":"Crawling age babies along average outdoor temperature 6 months age.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/babies_crawl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crawling age — babies_crawl","text":"","code":"babies_crawl"},{"path":"https://openintrostat.github.io/openintro/reference/babies_crawl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Crawling age — babies_crawl","text":"data frame 12 observations following 5 variables. birth_month factor levels corresponding months avg_crawling_age numeric vector sd numeric vector n numeric vector temperature numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/babies_crawl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Crawling age — babies_crawl","text":"J.B. Benson. Season birth onset locomotion: Theoretical methodological implications. : Infant behavior development 16.1 (1993), pp. 69-81. issn: 0163-6383.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/babies_crawl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crawling age — babies_crawl","text":"","code":"library(ggplot2)  ggplot(babies_crawl, aes(x = temperature, y = avg_crawling_age)) +   geom_point() +   labs(x = \"Temperature\", y = \"Average crawling age\")"},{"path":"https://openintrostat.github.io/openintro/reference/bac.html","id":null,"dir":"Reference","previous_headings":"","what":"Beer and blood alcohol content — bac","title":"Beer and blood alcohol content — bac","text":"examine data sixteen student volunteers Ohio State University drank randomly assigned number cans beer.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/bac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beer and blood alcohol content — bac","text":"","code":"bac"},{"path":"https://openintrostat.github.io/openintro/reference/bac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Beer and blood alcohol content — bac","text":"data frame 16 observations following 3 variables. student numeric vector beers numeric vector bac numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/bac.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Beer and blood alcohol content — bac","text":"J. Malkevitch L.M. Lesser. Practical Purposes: Mathematical Literacy Today's World. WH Freeman & Co, 2008.  data origin given Electronic Encyclopedia Statistical Examples Exercises, 1992.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/bac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beer and blood alcohol content — bac","text":"","code":"library(ggplot2)  ggplot(bac, aes(x = beers, y = bac)) +   geom_point() +   labs(x = \"Number of beers\", y = \"Blood alcohol content\")"},{"path":"https://openintrostat.github.io/openintro/reference/ball_bearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Lifespan of ball bearings — ball_bearing","title":"Lifespan of ball bearings — ball_bearing","text":"simulated dataset lifespan ball bearings.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ball_bearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lifespan of ball bearings — ball_bearing","text":"","code":"ball_bearing"},{"path":"https://openintrostat.github.io/openintro/reference/ball_bearing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lifespan of ball bearings — ball_bearing","text":"data frame 75 observations following variable. life_span Lifespan ball bearings (hours).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ball_bearing.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lifespan of ball bearings — ball_bearing","text":"Simulated data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ball_bearing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lifespan of ball bearings — ball_bearing","text":"","code":"library(ggplot2)  ggplot(ball_bearing, aes(x = life_span)) +   geom_histogram(binwidth = 1)   qqnorm(ball_bearing$life_span)"},{"path":"https://openintrostat.github.io/openintro/reference/bdims.html","id":null,"dir":"Reference","previous_headings":"","what":"Body measurements of 507 physically active individuals. — bdims","title":"Body measurements of 507 physically active individuals. — bdims","text":"Body girth measurements skeletal diameter measurements, well age, weight, height gender, given 507 physically active individuals - 247 men 260 women. data can used provide statistics students practice art data analysis. analyses range simple descriptive displays complicated multivariate analyses multiple regression discriminant analysis.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/bdims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Body measurements of 507 physically active individuals. — bdims","text":"","code":"bdims"},{"path":"https://openintrostat.github.io/openintro/reference/bdims.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Body measurements of 507 physically active individuals. — bdims","text":"data frame 507 observations following 25 variables. bia_di numerical vector, respondent's biacromial diameter centimeters. bii_di numerical vector, respondent's biiliac diameter (pelvic breadth) centimeters. bit_di numerical vector, respondent's bitrochanteric diameter centimeters. che_de numerical vector, respondent's chest depth centimeters, measured spine sternum nipple level, mid-expiration. che_di numerical vector, respondent's chest diameter centimeters, measured nipple level, mid-expiration. elb_di numerical vector, respondent's elbow diameter centimeters, measured sum two elbows. wri_di numerical vector, respondent's wrist diameter centimeters, measured sum two wrists. kne_di numerical vector, respondent's knee diameter centimeters, measured sum two knees. ank_di numerical vector, respondent's ankle diameter centimeters, measured sum two ankles. sho_gi numerical vector, respondent's shoulder girth centimeters, measured deltoid muscles. che_gi numerical vector, respondent's chest girth centimeters, measured nipple line males just breast tissue females, mid-expiration. wai_gi numerical vector, respondent's waist girth centimeters, measured narrowest part torso rib cage average contracted relaxed position. nav_gi numerical vector, respondent's navel (abdominal) girth centimeters, measured umbilicus iliac crest using iliac crest landmark. hip_gi numerical vector, respondent's hip girth centimeters, measured level bitrochanteric diameter. thi_gi numerical vector, respondent's thigh girth centimeters, measured gluteal fold average right left girths. bic_gi numerical vector, respondent's bicep girth centimeters, measured flexed average right left girths. for_gi numerical vector, respondent's forearm girth centimeters, measured extended, palm average right left girths. kne_gi numerical vector, respondent's knee diameter centimeters, measured sum two knees. cal_gi numerical vector, respondent's calf maximum girth centimeters, measured average right left girths. ank_gi numerical vector, respondent's ankle minimum girth centimeters, measured average right left girths. wri_gi numerical vector, respondent's wrist minimum girth centimeters, measured average right left girths. age numerical vector, respondent's age years. wgt numerical vector, respondent's weight kilograms. hgt numerical vector, respondent's height centimeters. sex categorical vector, 1 respondent male, 0 female.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/bdims.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Body measurements of 507 physically active individuals. — bdims","text":"Heinz G, Peterson LJ, Johnson RW, Kerk CJ. 2003. Exploring Relationships Body Dimensions. Journal Statistics Education 11(2).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/bdims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Body measurements of 507 physically active individuals. — bdims","text":"","code":"library(ggplot2) ggplot(bdims, aes(x = hgt)) +   geom_histogram(binwidth = 5)   ggplot(bdims, aes(x = hgt, y = wgt)) +   geom_point() +   labs(x = \"Height\", y = \"Weight\")   ggplot(bdims, aes(x = hgt, y = sho_gi)) +   geom_point() +   labs(x = \"Height\", y = \"Shoulder girth\")   ggplot(bdims, aes(x = hgt, y = hip_gi)) +   geom_point() +   labs(x = \"Height\", y = \"Hip girth\")"},{"path":"https://openintrostat.github.io/openintro/reference/biontech_adolescents.html","id":null,"dir":"Reference","previous_headings":"","what":"Efficacy of Pfizer-BioNTech COVID-19 vaccine on adolescents — biontech_adolescents","title":"Efficacy of Pfizer-BioNTech COVID-19 vaccine on adolescents — biontech_adolescents","text":"March 31, 2021, Pfizer BioNTech announced \"Phase 3 trial adolescents 12 15 years age without prior evidence SARS-CoV-2 infection, Pfizer-BioNTech COVID-19 vaccine BNT162b2 demonstrated 100% efficacy robust antibody responses, exceeding recorded earlier vaccinated participants aged 16 25 years old, well tolerated.\" results Phase 3 trial 2,260 adolescents 12 15 years age United States. trial, 18 cases COVID-19 observed placebo group (n = 1,129) versus none vaccinated group (n = 1,131).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/biontech_adolescents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efficacy of Pfizer-BioNTech COVID-19 vaccine on adolescents — biontech_adolescents","text":"","code":"biontech_adolescents"},{"path":"https://openintrostat.github.io/openintro/reference/biontech_adolescents.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Efficacy of Pfizer-BioNTech COVID-19 vaccine on adolescents — biontech_adolescents","text":"data frame 2260 observations following 2 variables. group Study group: vaccine (Pfizer-BioNTech COVID-19 vaccine administered) placebo. outcome Study outcome: COVID-19 COVID-19.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/biontech_adolescents.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Efficacy of Pfizer-BioNTech COVID-19 vaccine on adolescents — biontech_adolescents","text":"\"Pfizer-Biontech Announce Positive Topline Results Pivotal Covid-19 Vaccine Study Adolescents\". March 21, 2021. (Retrieved April 25, 2021.)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/biontech_adolescents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Efficacy of Pfizer-BioNTech COVID-19 vaccine on adolescents — biontech_adolescents","text":"","code":"library(dplyr) library(ggplot2)  biontech_adolescents |>   count(group, outcome) #> # A tibble: 3 × 3 #>   group   outcome         n #>   <fct>   <fct>       <int> #> 1 vaccine no COVID-19  1131 #> 2 placebo COVID-19       18 #> 3 placebo no COVID-19  1111  ggplot(biontech_adolescents, aes(y = group, fill = outcome)) +   geom_bar()"},{"path":"https://openintrostat.github.io/openintro/reference/birds.html","id":null,"dir":"Reference","previous_headings":"","what":"Aircraft-Wildlife Collisions — birds","title":"Aircraft-Wildlife Collisions — birds","text":"collection collisions aircraft wildlife reported US Federal Aviation Administration 1990 1997, details circumstances collision.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/birds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aircraft-Wildlife Collisions — birds","text":"","code":"birds"},{"path":"https://openintrostat.github.io/openintro/reference/birds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aircraft-Wildlife Collisions — birds","text":"data frame 19302 observations following 17 variables. opid Three letter identification code operator (carrier) aircraft. operator Name aircraft operator. atype Make model aircraft. remarks Verbal remarks regarding collision. phase_of_flt Phase flight collision occurred: Approach, Climb, Descent, En Route, Landing Roll, Parked, Take-run, Taxi. ac_mass Mass aircraft classified 2250 kg less (1), 2251-5700 kg (2), 5701-27000 kg (3), 27001-272000 kg (4), 272000 kg (5). num_engs Number engines aircraft. date Date collision (MM/DD/YYYY). time_of_day Light conditions: Dawn, Day, Dusk, Night. state Two letter abbreviation US state collision occurred. height Feet ground level. speed Knots (indicated air speed). effect Effect flight: Aborted Take-, Engine Shut , None, , Precautionary Landing. sky Type cloud cover, : Cloud, Overcast, Cloud. species Common name bird wildlife. birds_seen Number birds/wildlife seen pilot: 1, 2-10, 11-100, 100. birds_struck Number birds/wildlife struck: 0, 1, 2-10, 11-100, 100.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/birds.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Aircraft-Wildlife Collisions — birds","text":"Aircraft Wildlife Strike Data: Search Tool - FAA Wildlife Strike Database. Available https://datahub.transportation.gov/Aviation/Aircraft-Wildlife-Strike-Data-Search-Tool-FAA-Wild/jhay-dgxy. Retrieval date: Feb 4, 2012.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/birds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aircraft-Wildlife Collisions — birds","text":"FAA National Wildlife Strike Database contains strike reports voluntarily reported FAA pilots, airlines, airports others. Current research indicates 20\\ Wildlife strike reporting uniform organizations robust voluntary reporting procedures. variations reporting, users cautioned comparisons individual airports airlines may misleading.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/birds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aircraft-Wildlife Collisions — birds","text":"","code":"library(dplyr) library(ggplot2) library(forcats) library(tidyr)  # Phase of the flight during which the collision occurred, tabular birds |>   count(phase_of_flt, sort = TRUE) #> # A tibble: 9 × 2 #>   phase_of_flt     n #>   <fct>        <int> #> 1 Approach      6470 #> 2 Take-off run  3506 #> 3 Climb         3222 #> 4 Landing Roll  3047 #> 5 NA            1783 #> 6 Descent        599 #> 7 En Route       585 #> 8 Taxi            79 #> 9 Parked          11  # Phase of the flight during which the collision occurred, barplot ggplot(birds, aes(y = fct_infreq(phase_of_flt))) +   geom_bar() +   labs(x = \"Phase of flight\")   # Height summary statistics summary(birds$height) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>     0.0     0.0    40.0   754.7   500.0 32500.0    3193   # Phase of flight vs. effect of crash birds |>   drop_na(phase_of_flt, effect) |>   ggplot(aes(y = phase_of_flt, fill = effect)) +   geom_bar(position = \"fill\") +   labs(x = \"Proportion\", y = \"Phase of flight\", fill = \"Effect\")"},{"path":"https://openintrostat.github.io/openintro/reference/births.html","id":null,"dir":"Reference","previous_headings":"","what":"North Carolina births, 100 cases — births","title":"North Carolina births, 100 cases — births","text":"Data random sample 100 births babies North Carolina mother smoker another 50 mother smoker.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/births.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"North Carolina births, 100 cases — births","text":"","code":"births"},{"path":"https://openintrostat.github.io/openintro/reference/births.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"North Carolina births, 100 cases — births","text":"data frame 150 observations following 14 variables. f_age Father's age. m_age Mother's age. weeks Weeks mother gave birth. premature Indicates whether baby premature . visits Number hospital visits. gained Weight gained mother. weight Birth weight baby. sex_baby Gender baby. smoke Whether mother smoker.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/births.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"North Carolina births, 100 cases — births","text":"Birth records released North Carolina 2004.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/births.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"North Carolina births, 100 cases — births","text":"","code":"library(ggplot2)  ggplot(births, aes(x = smoke, y = weight)) +   geom_boxplot()"},{"path":"https://openintrostat.github.io/openintro/reference/births14.html","id":null,"dir":"Reference","previous_headings":"","what":"US births — births14","title":"US births — births14","text":"Every year, US releases public large dataset containing information births recorded country. dataset interest medical researchers studying relation habits practices expectant mothers birth children. random sample 1,000 cases dataset released 2014.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/births14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US births — births14","text":"","code":"births14"},{"path":"https://openintrostat.github.io/openintro/reference/births14.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US births — births14","text":"data frame 1,000 observations following 13 variables. fage Father's age years. mage Mother's age years. mature Maturity status mother. weeks Length pregnancy weeks. premie Whether birth classified premature (premie) full-term. visits Number hospital visits pregnancy. gained Weight gained mother pregnancy pounds. weight Weight baby birth pounds. lowbirthweight Whether baby classified low birthweight (low) (low). sex Sex baby, female male. habit Status mother nonsmoker smoker. marital Whether mother married married birth. whitemom Whether mom white white.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/births14.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US births — births14","text":"United States Department Health Human Services. Centers Disease Control Prevention. National Center Health Statistics. Natality Detail File, 2014 United States. Inter-university Consortium Political Social Research, 2016-10-07. doi:10.3886/ICPSR36461.v1 .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/births14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US births — births14","text":"","code":"library(ggplot2)  ggplot(births14, aes(x = habit, y = weight)) +   geom_boxplot() +   labs(x = \"Smoking status of mother\", y = \"Birth weight of baby (in lbs)\")   ggplot(births14, aes(x = whitemom, y = visits)) +   geom_boxplot() +   labs(x = \"Mother's race\", y = \"Number of doctor visits during pregnancy\") #> Warning: Removed 56 rows containing non-finite outside the scale range #> (`stat_boxplot()`).   ggplot(births14, aes(x = mature, y = gained)) +   geom_boxplot() +   labs(x = \"Mother's age category\", y = \"Weight gained during pregnancy\") #> Warning: Removed 42 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":"https://openintrostat.github.io/openintro/reference/blizzard_salary.html","id":null,"dir":"Reference","previous_headings":"","what":"Blizzard Employee Voluntary Salary Info. — blizzard_salary","title":"Blizzard Employee Voluntary Salary Info. — blizzard_salary","text":"Employee generated anonymous survey salary information.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/blizzard_salary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blizzard Employee Voluntary Salary Info. — blizzard_salary","text":"","code":"blizzard_salary"},{"path":"https://openintrostat.github.io/openintro/reference/blizzard_salary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Blizzard Employee Voluntary Salary Info. — blizzard_salary","text":"data frame 466 rows 9 variables. timestamp Time data entered status Specifies employment status. current_title Current job title. current_salary Current salary (USD). salary_type Frequency levels year, hour, week. percent_incr Raise given July 2020. other_info information submitted employee. location Current office employment. performance_rating recent review performance rating.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/blizzard_salary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Blizzard Employee Voluntary Salary Info. — blizzard_salary","text":"Bloomberg - Blizzard workers share salaries revolt wage disparities.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/blizzard_salary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blizzard Employee Voluntary Salary Info. — blizzard_salary","text":"","code":"library(ggplot2) library(dplyr)  plot_data <- blizzard_salary |>   mutate(annual_salary = case_when(     salary_type == \"week\" ~ current_salary * 52,     salary_type == \"hour\" ~ current_salary * 40 * 52,     TRUE ~ current_salary   ))  ggplot(plot_data, aes(annual_salary)) +   geom_histogram(binwidth = 25000, color = \"white\") +   labs(     title = \"Current Salary of Blizzard Employees\",     x = \"Salary\",     y = \"Number of Employees\"   ) #> Warning: Removed 56 rows containing non-finite outside the scale range (`stat_bin()`)."},{"path":"https://openintrostat.github.io/openintro/reference/books.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of books on a shelf — books","title":"Sample of books on a shelf — books","text":"Simulated dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/books.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of books on a shelf — books","text":"","code":"books"},{"path":"https://openintrostat.github.io/openintro/reference/books.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of books on a shelf — books","text":"data frame 95 observations following 2 variables. type factor levels fiction nonfiction format factor levels hardcover paperback","code":""},{"path":"https://openintrostat.github.io/openintro/reference/books.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of books on a shelf — books","text":"","code":"table(books) #>             format #> type         hardcover paperback #>   fiction           13        59 #>   nonfiction        15         8"},{"path":"https://openintrostat.github.io/openintro/reference/boxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Box plot — boxPlot","title":"Box plot — boxPlot","text":"alternative boxplot. Equations accepted. Instead, second argument, fact, used split data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/boxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box plot — boxPlot","text":"","code":"boxPlot(   x,   fact = NULL,   horiz = FALSE,   width = 2/3,   lwd = 1,   lcol = \"black\",   medianLwd = 2,   pch = 20,   pchCex = 1.8,   col = grDevices::rgb(0, 0, 0, 0.25),   add = FALSE,   key = NULL,   axes = TRUE,   xlab = \"\",   ylab = \"\",   xlim = NULL,   ylim = NULL,   na.rm = TRUE,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/boxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box plot — boxPlot","text":"x numerical vector. fact character factor vector defining grouping side--side box plots. horiz TRUE, box plot oriented horizontally. width width boxes plot. Value 0 1. lwd Width lines used box whiskers. lcol Color box, median, whiskers. medianLwd Width line marking median. pch Plotting character outliers. pchCex Size outlier character. col Color outliers. add FALSE, new plot created. Otherwise, boxplots added current plot values TRUE numerical vector specifying locations boxes. key order display side--side boxplots. locations specified add, elements add correspond elements key. axes Whether plot axes. xlab Label x axis. ylab Label y axis. xlim Limits x axis. ylim Limits y axis. na.rm Indicate whether NA values removed. ... Additional arguments plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/boxPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Box plot — boxPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/boxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box plot — boxPlot","text":"","code":"# univariarate boxPlot(email$num_char, ylab = \"Number of characters in emails\")   # bivariate boxPlot(email$num_char, email$spam,   xlab = \"Spam\",   ylab = \"Number of characters in emails\" )   # faded outliers boxPlot(email$num_char, email$spam,   xlab = \"Spam\",   ylab = \"Number of characters in emails\",   col = fadeColor(\"black\", 18) )   # horizontal plots boxPlot(email$num_char, email$spam,   horiz = TRUE,   xlab = \"Spam\",   ylab = \"Number of characters in emails\",   col = fadeColor(\"black\", 18) )   # bivariate relationships where categorical data have more than 2 levels boxPlot(email$num_char, email$image,   horiz = TRUE,   xlab = \"Number of attached images\",   ylab = \"Number of characters in emails\",   col = fadeColor(\"black\", 18) )   # key can be used to restrict to only the desired groups boxPlot(email$num_char, email$image,   horiz = TRUE, key = c(0, 1, 2),   xlab = \"Number of attached images (limited to 0, 1, 2)\",   ylab = \"Number of characters in emails\",   col = fadeColor(\"black\", 18) )   # combine boxPlot and dotPlot boxPlot(tips$tip, tips$day,   horiz = TRUE, key = c(\"Tuesday\", \"Friday\") ) dotPlot(tips$tip, tips$day,   add = TRUE, at = 1:2 + 0.05,   key = c(\"Tuesday\", \"Friday\") )   # adding a box boxPlot(email$num_char[email$spam == 0], xlim = c(0, 3)) boxPlot(email$num_char[email$spam == 1], add = 2, axes = FALSE) axis(1, at = 1:2, labels = c(0, 1))  boxPlot(email$num_char[email$spam == 0], ylim = c(0, 3), horiz = TRUE) boxPlot(email$num_char[email$spam == 1], add = 2, horiz = TRUE, axes = FALSE) axis(2, at = 1:2, labels = c(0, 1))"},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis function substitute — buildAxis","title":"Axis function substitute — buildAxis","text":"function buildAxis built provide control number labels axis. function still development.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis function substitute — buildAxis","text":"","code":"buildAxis(side, limits, n, nMin = 2, nMax = 10, extend = 2, eps = 10^-12, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis function substitute — buildAxis","text":"side side plot add axis. limits Either lower upper limits axis dataset. n preferred number axis labels. nMin minimum number axis labels. nMax maximum number axis labels. extend far axis may extend beyond range(limits). eps smallest increment allowed. ... Arguments passed axis","code":""},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis function substitute — buildAxis","text":"vector axis plotted.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Axis function substitute — buildAxis","text":"primary reason behind building function allow plot created similar features different datasets. instance, set code written one dataset function axis utilized pre-specified values, axis may match plot new set data. function buildAxis addresses problem allowing number axis labels specified controlled. axis built assigning penalties variety potential axis setups, ranking based penalties selecting axis best score.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Axis function substitute — buildAxis","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/buildAxis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis function substitute — buildAxis","text":"","code":"# ===> 0 <===# limits <- rnorm(100, 605490, 10) hist(limits, axes = FALSE) buildAxis(1, limits, 2, nMax = 4)   # ===> 1 <===# x <- seq(0, 500, 10) y <- 8 * x + rnorm(length(x), mean = 6000, sd = 200) plot(x, y, axes = FALSE) buildAxis(1, limits = x, n = 5) buildAxis(2, limits = y, n = 3)   # ===> 2 <===# x <- 9528412 + seq(0, 200, 10) y <- 8 * x + rnorm(length(x), mean = 6000, sd = 200) plot(x, y, axes = FALSE) temp <- buildAxis(1, limits = x, n = 4) buildAxis(2, y, 3)   # ===> 3 <===# x <- seq(367, 1251, 10) y <- 7.5 * x + rnorm(length(x), mean = 6000, sd = 800) plot(x, y, axes = FALSE) buildAxis(1, limits = x, n = 4, nMin = 3, nMax = 3) buildAxis(2, limits = y, n = 4, nMin = 3, nMax = 5)   # ===> 4 <===# x <- seq(367, 367.1, 0.001) y <- 7.5 * x + rnorm(length(x), mean = 6000, sd = 0.01) plot(x, y, axes = FALSE) buildAxis(1, limits = x, n = 4, nMin = 5, nMax = 6) buildAxis(2, limits = y, n = 2, nMin = 3, nMax = 4)   # ===> 5 <===# x <- seq(-0.05, -0.003, 0.0001) y <- 50 + 20 * x + rnorm(length(x), sd = 0.1) plot(x, y, axes = FALSE) buildAxis(1, limits = x, n = 4, nMin = 5, nMax = 6) buildAxis(2, limits = y, n = 4, nMax = 5) abline(lm(y ~ x))   # ===> 6 <===# x <- seq(-0.0097, -0.008, 0.0001) y <- 50 + 20 * x + rnorm(length(x), sd = 0.1) plot(x, y, axes = FALSE) buildAxis(1, limits = x, n = 4, nMin = 2, nMax = 5) buildAxis(2, limits = y, n = 4, nMax = 5) abline(lm(y ~ x))   # ===> 7 <===# x <- seq(0.03, -0.003099, -0.00001) y <- 50 + 20 * x + rnorm(length(x), sd = 0.1) plot(x, y, axes = FALSE) buildAxis(1, limits = x, n = 4, nMin = 2, nMax = 5) buildAxis(2, limits = y, n = 4, nMax = 6) abline(lm(y ~ x))   # ===> 8 - repeat <===# m <- runif(1) / runif(1) +   rgamma(1, runif(1) / runif(1), runif(1) / runif(1)) s <- rgamma(1, runif(1) / runif(1), runif(1) / runif(1)) x <- rnorm(50, m, s) hist(x, axes = FALSE) buildAxis(1, limits = x, n = 5, nMin = 4, nMax = 6, eps = 10^-12)  if (diff(range(x)) < 10^-12) {   cat(\"too small\\n\") }"},{"path":"https://openintrostat.github.io/openintro/reference/burger.html","id":null,"dir":"Reference","previous_headings":"","what":"Burger preferences — burger","title":"Burger preferences — burger","text":"Sample burger place preferences versus gender.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/burger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Burger preferences — burger","text":"","code":"burger"},{"path":"https://openintrostat.github.io/openintro/reference/burger.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Burger preferences — burger","text":"data frame 500 observations following 2 variables. best_burger_place Burger place. gender factor levels Female Male","code":""},{"path":"https://openintrostat.github.io/openintro/reference/burger.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Burger preferences — burger","text":"SurveyUSA, Results SurveyUSA News Poll #17718, data collected December 2, 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/burger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Burger preferences — burger","text":"","code":"table(burger) #>                     gender #> best_burger_place    Female Male #>   Fat Burger             12   10 #>   Five Guys Burgers       6    5 #>   In-N-Out Burger       181  162 #>   Not Sure                5   13 #>   Other                  20   26 #>   Tommy's Hamburgers     27   27 #>   Umami Burger            1    5"},{"path":"https://openintrostat.github.io/openintro/reference/calc_streak.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hit streaks — calc_streak","title":"Calculate hit streaks — calc_streak","text":"Calculate hit streaks","code":""},{"path":"https://openintrostat.github.io/openintro/reference/calc_streak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hit streaks — calc_streak","text":"","code":"calc_streak(x)"},{"path":"https://openintrostat.github.io/openintro/reference/calc_streak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hit streaks — calc_streak","text":"x character vector hits (\"H\") misses (\"M\").","code":""},{"path":"https://openintrostat.github.io/openintro/reference/calc_streak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hit streaks — calc_streak","text":"data frame one column, length, containing length hit streak.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/calc_streak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate hit streaks — calc_streak","text":"","code":"data(kobe_basket) calc_streak(kobe_basket$shot) #>    length #> 1       1 #> 2       0 #> 3       2 #> 4       0 #> 5       0 #> 6       0 #> 7       3 #> 8       2 #> 9       0 #> 10      3 #> 11      0 #> 12      1 #> 13      3 #> 14      0 #> 15      0 #> 16      0 #> 17      0 #> 18      0 #> 19      1 #> 20      1 #> 21      0 #> 22      4 #> 23      1 #> 24      0 #> 25      1 #> 26      0 #> 27      1 #> 28      0 #> 29      1 #> 30      2 #> 31      0 #> 32      1 #> 33      2 #> 34      1 #> 35      0 #> 36      0 #> 37      1 #> 38      0 #> 39      0 #> 40      0 #> 41      1 #> 42      1 #> 43      0 #> 44      1 #> 45      0 #> 46      2 #> 47      0 #> 48      0 #> 49      0 #> 50      3 #> 51      0 #> 52      1 #> 53      0 #> 54      1 #> 55      2 #> 56      1 #> 57      0 #> 58      1 #> 59      0 #> 60      0 #> 61      1 #> 62      3 #> 63      3 #> 64      1 #> 65      1 #> 66      0 #> 67      0 #> 68      0 #> 69      0 #> 70      0 #> 71      1 #> 72      1 #> 73      0 #> 74      0 #> 75      0 #> 76      1"},{"path":"https://openintrostat.github.io/openintro/reference/cancer_in_dogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancer in dogs — cancer_in_dogs","title":"Cancer in dogs — cancer_in_dogs","text":"study 1994 examined 491 dogs developed cancer 945 dogs control group determine whether increased risk cancer dogs exposed herbicide 2,4-Dichlorophenoxyacetic acid (2,4-D).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cancer_in_dogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancer in dogs — cancer_in_dogs","text":"","code":"cancer_in_dogs"},{"path":"https://openintrostat.github.io/openintro/reference/cancer_in_dogs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cancer in dogs — cancer_in_dogs","text":"data frame 1436 observations following 2 variables. order factor levels 2,4-D 2,4-D response factor levels cancer cancer","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cancer_in_dogs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cancer in dogs — cancer_in_dogs","text":"Hayes HM, Tarone RE, Cantor KP, Jessen CR, McCurnin DM, Richardson RC. 1991. Case- Control Study Canine Malignant Lymphoma: Positive Association Dog Owner's Use 2, 4- Dichlorophenoxyacetic Acid Herbicides. Journal National Cancer Institute 83(17):1226-1231.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cancer_in_dogs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancer in dogs — cancer_in_dogs","text":"","code":"table(cancer_in_dogs) #>           response #> order      cancer no cancer #>   2,4-D       191       304 #>   no 2,4-D    300       641"},{"path":"https://openintrostat.github.io/openintro/reference/cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Deck of cards — cards","title":"Deck of cards — cards","text":"cards standard deck.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deck of cards — cards","text":"","code":"cards"},{"path":"https://openintrostat.github.io/openintro/reference/cards.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Deck of cards — cards","text":"data frame 52 observations following 4 variables. value factor levels 10 2 3 4 5 6 7 8 9 J K Q color factor levels black red suit factor levels Club Diamond Heart Spade face logical vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deck of cards — cards","text":"","code":"table(cards$value) #>  #> 10  2  3  4  5  6  7  8  9  A  J  K  Q  #>  4  4  4  4  4  4  4  4  4  4  4  4  4  table(cards$color) #>  #> black   red  #>    26    26  table(cards$suit) #>  #>    Club Diamond   Heart   Spade  #>      13      13      13      13  table(cards$face) #>  #> FALSE  TRUE  #>    36    16  table(cards$suit, cards$face) #>           #>           FALSE TRUE #>   Club        9    4 #>   Diamond     9    4 #>   Heart       9    4 #>   Spade       9    4"},{"path":"https://openintrostat.github.io/openintro/reference/cars04.html","id":null,"dir":"Reference","previous_headings":"","what":"cars04 — cars04","title":"cars04 — cars04","text":"data frame 428 rows 19 columns. record characteristics new models cars sale US year 2004.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cars04.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cars04 — cars04","text":"","code":"cars04"},{"path":"https://openintrostat.github.io/openintro/reference/cars04.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cars04 — cars04","text":"data frame 428 observations following 19 variables. name name vehicle including manufacturer model. sports_car Logical variable indicating vehicle sports car. suv Logical variable indicating vehicle suv. wagon Logical variable indicating vehicle wagon. minivan Logical variable indicating vehicle minivan. pickup Logical variable indicating vehicle pickup. all_wheel Logical variable indicating vehicle -wheel drive. rear_wheel Logical variable indicating vehicle rear-wheel drive. msrp Manufacturer suggested retail price vehicle. dealer_cost Amount money dealer paid vehicle. eng_size Displacement engine - total volume cylinders, measured liters. ncyl Number cylinders engine. horsepwr Amount horsepower produced engine. city_mpg Gas mileage city driving, measured miles per gallon. hwy_mpg Gas mileage highway driving, measured miles per gallon. weight Total weight vehicle, measured pounds. wheel_base Distance center front wheels center rear wheels, measured inches. length Total length vehicle, measured inches. width Total width vehicle, measured inches.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cars04.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cars04 — cars04","text":"","code":"library(ggplot2)  # Highway gas mileage ggplot(cars04, aes(x = hwy_mpg)) +   geom_histogram(     bins = 15, color = \"white\",     fill = openintro::IMSCOL[\"green\", \"full\"]   ) +   theme_minimal() +   labs(     title = \"Highway gas milage for cars from 2004\",     x = \"Gas Mileage (miles per gallon)\",     y = \"Number of cars\"   ) #> Warning: Removed 14 rows containing non-finite outside the scale range (`stat_bin()`)."},{"path":"https://openintrostat.github.io/openintro/reference/cars93.html","id":null,"dir":"Reference","previous_headings":"","what":"cars93 — cars93","title":"cars93 — cars93","text":"data frame 54 rows 6 columns. data subset Cars93 dataset MASS package.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cars93.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cars93 — cars93","text":"","code":"cars93"},{"path":"https://openintrostat.github.io/openintro/reference/cars93.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cars93 — cars93","text":"data frame 54 observations following 6 variables. type vehicle type levels large, midsize, small. price Vehicle price (USD). mpg_city Vehicle mileage city (miles per gallon). drive_train Vehicle drive train levels 4WD, front, rear. passengers vehicle passenger capacity. weight Vehicle weight (lbs).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cars93.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"cars93 — cars93","text":"Lock, R. H. (1993) 1993 New Car Data. Journal Statistics Education 1(1).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cars93.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cars93 — cars93","text":"cars represent random sample 1993 models Consumer Reports PACE Buying Guide. vehicles type small, midsize, large include. description can found Lock (1993). Use URL http://jse.amstat.org/v1n1/datasets.lock.html.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cars93.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cars93 — cars93","text":"","code":"library(ggplot2)  # Vehicle price by type ggplot(cars93, aes(x = price)) +   geom_histogram(binwidth = 5) +   facet_wrap(~type)   # Vehicle price vs. weight ggplot(cars93, aes(x = weight, y = price)) +   geom_point()   # Milleage vs. weight ggplot(cars93, aes(x = weight, y = mpg_city)) +   geom_point() +   geom_smooth() #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"https://openintrostat.github.io/openintro/reference/cchousing.html","id":null,"dir":"Reference","previous_headings":"","what":"Community college housing (simulated data) — cchousing","title":"Community college housing (simulated data) — cchousing","text":"simulated data intended represent housing prices students community college.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cchousing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community college housing (simulated data) — cchousing","text":"","code":"cchousing"},{"path":"https://openintrostat.github.io/openintro/reference/cchousing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Community college housing (simulated data) — cchousing","text":"data frame 75 observations following variable. price Monthly housing price, simulated.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cchousing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Community college housing (simulated data) — cchousing","text":"","code":"hist(cchousing$price)"},{"path":"https://openintrostat.github.io/openintro/reference/census.html","id":null,"dir":"Reference","previous_headings":"","what":"Random sample of 2000 U.S. Census Data — census","title":"Random sample of 2000 U.S. Census Data — census","text":"random sample 500 observations 2000 U.S. Census Data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random sample of 2000 U.S. Census Data — census","text":"","code":"census"},{"path":"https://openintrostat.github.io/openintro/reference/census.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random sample of 2000 U.S. Census Data — census","text":"data frame 500 observations following 8 variables. census_year Census Year. state_fips_code Name state. total_family_income Total family income (U.S. dollars). age Age. sex Sex levels Female Male. race_general Race levels American Indian Alaska Native, Black, Chinese, Japanese, Asian Pacific Islander, Two major races, White . marital_status Marital status levels Divorced, Married/spouse absent, Married/spouse present, Never married/single, Separated Widowed. total_personal_income Total personal income (U.S. dollars).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/census.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Random sample of 2000 U.S. Census Data — census","text":"https://data.census.gov/cedsci","code":""},{"path":"https://openintrostat.github.io/openintro/reference/census.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random sample of 2000 U.S. Census Data — census","text":"","code":"library(dplyr) library(ggplot2)  census |>   filter(total_family_income > 0) |>   ggplot(aes(x = total_family_income)) +   geom_histogram(binwidth = 25000)"},{"path":"https://openintrostat.github.io/openintro/reference/cherry.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary information for 31 cherry trees — cherry","title":"Summary information for 31 cherry trees — cherry","text":"Researchers wanting understand relationship variables black cherry trees collected data 31 trees Allegheny National Forest, Pennsylvania.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cherry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary information for 31 cherry trees — cherry","text":"","code":"cherry"},{"path":"https://openintrostat.github.io/openintro/reference/cherry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary information for 31 cherry trees — cherry","text":"data frame 31 observations following 3 variables. diam diameter inches (54 inches ground) height height measured feet volume volume cubic feet","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cherry.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary information for 31 cherry trees — cherry","text":"D.J. Hand. handbook small data sets. Chapman & Hall/CRC, 1994.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cherry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary information for 31 cherry trees — cherry","text":"","code":"library(ggplot2) library(broom)  ggplot(cherry, aes(x = diam, y = volume)) +   geom_point() +   geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x'   mod <- lm(volume ~ diam + height, cherry) tidy(mod) #> # A tibble: 3 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)  -58.0       8.64      -6.71 2.75e- 7 #> 2 diam           4.71      0.264     17.8  8.22e-17 #> 3 height         0.339     0.130      2.61 1.45e- 2"},{"path":"https://openintrostat.github.io/openintro/reference/children_gender_stereo.html","id":null,"dir":"Reference","previous_headings":"","what":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","title":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","text":"Stereotypes common, age start? study investigates stereotypes young children aged 5-7 years old. four studies reported paper, four datasets provided .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/children_gender_stereo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","text":"","code":"children_gender_stereo"},{"path":"https://openintrostat.github.io/openintro/reference/children_gender_stereo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","text":"data object unusual . list 4 data frames. four data frames correspond data used Studies 1-4 referenced paper, data frames variables (columns) among following: subject Subject ID. Note Subject 1 first data frame (dataset) correspond Subject 1 second data frame. gender Gender subject. age Age subject, years. trait trait children making judgement , either nice smart. target age group people children making judgements (either nice smart): children adults. stereotype proportion trials child picked gender target matched trait gender child. example, suppose 18 pictures, picture showed 2 men 2 women (different set people photo). asked boy pick person picture believed really smart, stereotype variable report fraction pictures boy picked man. girl reviews photos, stereotype variable reports fraction photos picked woman. , variable differs meaning depending gender child. (variable design little confusing, useful analyzing data.) high_achieve_caution proportion trials child said children gender high-achieving school. interest Average score measured interest child game. difference difference score interest child “smart” game interest “try-hard” game.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/children_gender_stereo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","text":"Bian L, Leslie SJ, Cimpian . 2017. \"Gender stereotypes intellectual ability emerge early influence children's interests\". Science 355:6323 (389-391). https://www.science.org/doi/10.1126/science.aah6524. original data may found .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/children_gender_stereo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","text":"structure data object little unusual, recommend reviewing Examples section starting analysis. Thank Nicholas Horton pointing us study data! results paper can reproduced using data provided . % TODO(David) - Add short descriptions study.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/children_gender_stereo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gender Stereotypes in 5-7 year old Children — children_gender_stereo","text":"","code":"# This dataset is a little funny to work with. # If wanting to review the data for a study, we # recommend first assigning the corresponding # data frame to a new variable. For instance, # below we assign the second study's data to an # object called `d` (d is for data!). d <- children_gender_stereo[[2]]"},{"path":"https://openintrostat.github.io/openintro/reference/china.html","id":null,"dir":"Reference","previous_headings":"","what":"Child care hours — china","title":"Child care hours — china","text":"China Health Nutrition Survey aims examine effects health, nutrition, family planning policies programs implemented national local governments.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/china.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Child care hours — china","text":"","code":"china"},{"path":"https://openintrostat.github.io/openintro/reference/china.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Child care hours — china","text":"data frame 9788 observations following 3 variables. gender numeric vector edu numeric vector child_care numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/china.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Child care hours — china","text":"UNC Carolina Population Center, China Health Nutrition Survey, 2006.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/china.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Child care hours — china","text":"","code":"summary(china) #>      gender           edu          child_care      #>  Min.   :1.000   Min.   :1.000   Min.   :-99.000   #>  1st Qu.:1.000   1st Qu.:1.000   1st Qu.:  2.000   #>  Median :2.000   Median :2.000   Median : 10.000   #>  Mean   :1.524   Mean   :2.373   Mean   :  2.759   #>  3rd Qu.:2.000   3rd Qu.:3.000   3rd Qu.: 27.000   #>  Max.   :2.000   Max.   :9.000   Max.   :168.000   #>                  NA's   :2434    NA's   :8549"},{"path":"https://openintrostat.github.io/openintro/reference/cia_factbook.html","id":null,"dir":"Reference","previous_headings":"","what":"CIA Factbook Details on Countries — cia_factbook","title":"CIA Factbook Details on Countries — cia_factbook","text":"Country-level statistics US Central Intelligence Agency (CIA).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cia_factbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CIA Factbook Details on Countries — cia_factbook","text":"","code":"cia_factbook"},{"path":"https://openintrostat.github.io/openintro/reference/cia_factbook.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CIA Factbook Details on Countries — cia_factbook","text":"data frame 259 observations following 11 variables. country Country name. area Land area, square kilometers. (1 square kilometer 0.386 square miles birth_rate Birth rate, births per 1,000 people. death_rate Death rate, deaths per 1,000 people. infant_mortality_rate Infant mortality, deaths per 1,000 live births. internet_users Total number internet users. life_exp_at_birth Live expectancy birth, years. maternal_mortality_rate Number female deaths per 100,000 live births death related pregnancy birth. net_migration_rate Net migration rate. population Total population. population_growth_rate Population growth rate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cia_factbook.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CIA Factbook Details on Countries — cia_factbook","text":"CIA Factbook, Country Comparisons, 2014. https://www.cia.gov/-world-factbook/references/guide--country-comparisons/","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cia_factbook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CIA Factbook Details on Countries — cia_factbook","text":"","code":"library(dplyr) library(ggplot2)  cia_factbook_iup <- cia_factbook |>   mutate(internet_users_percent = 100 * internet_users / population)  ggplot(cia_factbook_iup, aes(x = internet_users_percent, y = life_exp_at_birth)) +   geom_point() +   labs(x = \"Percentage of internet users\", y = \"Life expectancy at birth\") #> Warning: Removed 51 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/openintro/reference/classdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated class data — classdata","title":"Simulated class data — classdata","text":"data simulated meant represent students scores three different lectures given exam.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/classdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated class data — classdata","text":"","code":"classdata"},{"path":"https://openintrostat.github.io/openintro/reference/classdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated class data — classdata","text":"data frame 164 observations following 2 variables. m1 Represents first midterm score. lecture Three classes: , b, c.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/classdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated class data — classdata","text":"OpenIntro Statistics, Chapter 8.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/classdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated class data — classdata","text":"","code":"anova(lm(m1 ~ lecture, classdata)) #> Analysis of Variance Table #>  #> Response: m1 #>            Df  Sum Sq Mean Sq F value  Pr(>F)   #> lecture     2  1290.1  645.06  3.4839 0.03302 * #> Residuals 161 29810.1  185.16                   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://openintrostat.github.io/openintro/reference/cle_sac.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleveland and Sacramento — cle_sac","title":"Cleveland and Sacramento — cle_sac","text":"Data sample 500 people Cleveland, OH Sacramento, CA metro areas.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cle_sac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleveland and Sacramento — cle_sac","text":"","code":"cle_sac"},{"path":"https://openintrostat.github.io/openintro/reference/cle_sac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cleveland and Sacramento — cle_sac","text":"data frame 500 observations representing people following 8 variables. year Year data collected. state State person resides. city City. age Age. sex Sex. race Race. marital_status Marital status. personal_income Personal income.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cle_sac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleveland and Sacramento — cle_sac","text":"","code":"library(ggplot2)  ggplot(cle_sac, aes(x = personal_income)) +   geom_histogram(binwidth = 20000) +   facet_wrap(~city) #> Warning: Removed 113 rows containing non-finite outside the scale range (`stat_bin()`)."},{"path":"https://openintrostat.github.io/openintro/reference/climate70.html","id":null,"dir":"Reference","previous_headings":"","what":"Temperature Summary Data, Geography Limited — climate70","title":"Temperature Summary Data, Geography Limited — climate70","text":"random set monitoring locations taken NOAA data years interest (1948 2018) well data summary metrics interest (dx70 dx90, described ).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climate70.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temperature Summary Data, Geography Limited — climate70","text":"","code":"climate70"},{"path":"https://openintrostat.github.io/openintro/reference/climate70.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Temperature Summary Data, Geography Limited — climate70","text":"data frame 197 observations following 7 variables. station Station ID. latitude Latitude station. longitude Longitude station. dx70_1948 Number days 70 degrees 1948. dx70_2018 Number days 70 degrees 2018. dx90_1948 Number days 90 degrees 1948. dx90_2018 Number days 90 degrees 2018.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climate70.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Temperature Summary Data, Geography Limited — climate70","text":"https://www.ncdc.noaa.gov/cdo-web, retrieved 2019-04-24.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climate70.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temperature Summary Data, Geography Limited — climate70","text":"Please keep mind two annual snapshots, complete analysis consider much two years data much additional information years.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climate70.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temperature Summary Data, Geography Limited — climate70","text":"","code":"# Data sampled are from the US, Europe, and Australia. # This geographic limitation may be due to the particular # years considered, since locations without both 1948 and # 2018 were discarded for this (simple) dataset. plot(climate70$longitude, climate70$latitude)   plot(climate70$dx70_1948, climate70$dx70_2018) abline(0, 1, lty = 2)  plot(climate70$dx90_1948, climate70$dx90_2018) abline(0, 1, lty = 2)  hist(climate70$dx70_2018 - climate70$dx70_1948)  hist(climate70$dx90_2018 - climate70$dx90_1948)   t.test(climate70$dx70_2018 - climate70$dx70_1948) #>  #> \tOne Sample t-test #>  #> data:  climate70$dx70_2018 - climate70$dx70_1948 #> t = 2.0558, df = 196, p-value = 0.04113 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  0.1663027 8.0062861 #> sample estimates: #> mean of x  #>  4.086294  #>  t.test(climate70$dx90_2018 - climate70$dx90_1948) #>  #> \tOne Sample t-test #>  #> data:  climate70$dx90_2018 - climate70$dx90_1948 #> t = 2.3702, df = 196, p-value = 0.01875 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  0.4868224 5.3101319 #> sample estimates: #> mean of x  #>  2.898477  #>"},{"path":"https://openintrostat.github.io/openintro/reference/climber_drugs.html","id":null,"dir":"Reference","previous_headings":"","what":"Climber Drugs Data. — climber_drugs","title":"Climber Drugs Data. — climber_drugs","text":"Anonymous data collected urine samples huts along climb Mont Blanc. Several types drugs tested, proportions reported.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climber_drugs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climber Drugs Data. — climber_drugs","text":"","code":"climber_drugs"},{"path":"https://openintrostat.github.io/openintro/reference/climber_drugs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climber Drugs Data. — climber_drugs","text":"data frame 211 rows 6 variables. positive_sample Idendification number specific urine sample. hut Location sample taken. substance Substance detected present urine sample. concentration Amount substance found measured ng/ml. screening_analysis Indicates concentration determined screening analysis. concomitant Indicates substance always detected concomitantly previous one, within urine sample.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climber_drugs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climber Drugs Data. — climber_drugs","text":"PLOS One - Drug Use Mont Blanc: Study Using Automated Urine Collection","code":""},{"path":"https://openintrostat.github.io/openintro/reference/climber_drugs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Climber Drugs Data. — climber_drugs","text":"","code":"library(dplyr)  # Calculate the average concentration of each substance and number of occurrences. climber_drugs |>   group_by(substance) |>   summarize(count = n(), mean_con = mean(concentration)) #> # A tibble: 33 × 3 #>    substance       count mean_con #>    <chr>           <int>    <dbl> #>  1 Acetazolamide      78   30385. #>  2 Anastrozole         1     250  #>  3 Benzoylecgonine     3     181. #>  4 Betamethasone       3      25  #>  5 Betaxolol           2     201  #>  6 Bisoprolol          1      64  #>  7 Bromazepam          1      23  #>  8 Brotizolam          1       1  #>  9 Budesonide          2      15  #> 10 Caffeine            4    7725  #> # ℹ 23 more rows  # Proportion samples in which each substance was detected. climber_drugs |>   group_by(substance) |>   summarize(prop = n() / 154) #> # A tibble: 33 × 2 #>    substance          prop #>    <chr>             <dbl> #>  1 Acetazolamide   0.506   #>  2 Anastrozole     0.00649 #>  3 Benzoylecgonine 0.0195  #>  4 Betamethasone   0.0195  #>  5 Betaxolol       0.0130  #>  6 Bisoprolol      0.00649 #>  7 Bromazepam      0.00649 #>  8 Brotizolam      0.00649 #>  9 Budesonide      0.0130  #> 10 Caffeine        0.0260  #> # ℹ 23 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/coast_starlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Coast Starlight Amtrak train — coast_starlight","title":"Coast Starlight Amtrak train — coast_starlight","text":"Travel times distances.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/coast_starlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coast Starlight Amtrak train — coast_starlight","text":"","code":"coast_starlight"},{"path":"https://openintrostat.github.io/openintro/reference/coast_starlight.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coast Starlight Amtrak train — coast_starlight","text":"data frame 16 observations following 3 variables. station Station. dist Distance. travel_time Travel time.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/coast_starlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coast Starlight Amtrak train — coast_starlight","text":"","code":"library(ggplot2)  ggplot(coast_starlight, aes(x = dist, y = travel_time)) +   geom_point()"},{"path":"https://openintrostat.github.io/openintro/reference/comics.html","id":null,"dir":"Reference","previous_headings":"","what":"comics — comics","title":"comics — comics","text":"data frame containing information comic book characters Marvel Comics DC Comics.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/comics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"comics — comics","text":"","code":"comics"},{"path":"https://openintrostat.github.io/openintro/reference/comics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"comics — comics","text":"data frame 21821 observations following 11 variables. name Name character. May include: Real name, hero villain name,  alias(es) /universe live (.e. Earth-616 Marvel's multiverse). id Status characters identity levels Secret, Publie, Dual Unknown. align Character's alignment levels Good, Bad, Neutral Reformed Criminals. eye Character's eye color. hair Character's hair color. gender Character's gender. gsm Character's classification gender sexual minority. alive character dead alive? appearances Number comic boooks character appears . first_appear Date publication comic book character first appeared . publisher Publisher comic levels Marvel DC.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/comics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"comics — comics","text":"","code":"library(ggplot2) library(dplyr)  # Good v Bad  plot_data <- comics |>   filter(align == \"Good\" | align == \"Bad\")  ggplot(plot_data, aes(x = align, fill = align)) +   geom_bar() +   facet_wrap(~publisher) +   scale_fill_manual(values = c(IMSCOL[\"red\", \"full\"], IMSCOL[\"blue\", \"full\"])) +   theme_minimal() +   labs(     title = \"Is there a balance of power\",     x = \"\",     y = \"Number of characters\",     fill = \"\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/contTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Contingency Tables for LaTeX — contTable","title":"Generate Contingency Tables for LaTeX — contTable","text":"Input data frame table, LaTeX output returned. Options exist row column proportions well showing work.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/contTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Contingency Tables for LaTeX — contTable","text":"","code":"contTable(   x,   prop = c(\"none\", \"row\", \"col\"),   show = FALSE,   digits = 3,   caption = NULL,   label = NULL )"},{"path":"https://openintrostat.github.io/openintro/reference/contTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Contingency Tables for LaTeX — contTable","text":"x data frame (two columns) table. prop Indicate whether row (\"r\", \"R\", \"row\") column (\"c\", \"C\", \"col\") proportions used. default simply print contingency table. show row column proportions specified, indicate whether work shown. digits number digits decimal shown row column proportions. caption string contains table caption. default value NULL. x data frame caption=NULL, contTable creates sensible caption data frame's column names. x table caption=NULL, caption empty string. label latex table label. default value NULL. x data frame label=NULL, contTable creates sensible label data frame's column names. x table label=NULL, label empty string.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/contTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Contingency Tables for LaTeX — contTable","text":"contTable function makes substantial use cat function.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/contTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Contingency Tables for LaTeX — contTable","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/contTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Contingency Tables for LaTeX — contTable","text":"","code":"data(email) table(email[, c(\"spam\", \"sent_email\")]) #>     sent_email #> spam    0    1 #>    0 2464 1090 #>    1  367    0 contTable(email[, c(\"spam\", \"sent_email\")]) #> \\begin{table} #> \\begin{center} #> \\begin{tabular}{lrrr} #> \\hline #>  & 0 & 1 & Total \\\\ #> \\hline #> 0 & 2464 & 1090 & 3554 \\\\ #> 1 &  367 &    0 &  367 \\\\ #> \\hline #> Total & 2831 & 1090 & 3921 \\\\ #> \\hline #> \\end{tabular} #> \\end{center} #> \\caption{Contingency table for spam and sent\\_email} #> \\label{spam-and-sentemail} #> \\end{table}"},{"path":"https://openintrostat.github.io/openintro/reference/corr_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample datasets for correlation problems — corr_match","title":"Sample datasets for correlation problems — corr_match","text":"Simulated data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/corr_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample datasets for correlation problems — corr_match","text":"","code":"corr_match"},{"path":"https://openintrostat.github.io/openintro/reference/corr_match.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample datasets for correlation problems — corr_match","text":"data frame 121 observations following 9 variables. x numeric vector y1 numeric vector y2 numeric vector y3 numeric vector y4 numeric vector y5 numeric vector y6 numeric vector y7 numeric vector y8 numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/corr_match.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample datasets for correlation problems — corr_match","text":"Simulated dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/corr_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample datasets for correlation problems — corr_match","text":"","code":"library(ggplot2)  ggplot(corr_match, aes(x = x, y = y1)) +   geom_point()   cor(corr_match$x, corr_match$y1) #> [1] 0.06388054"},{"path":"https://openintrostat.github.io/openintro/reference/country_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Country ISO information — country_iso","title":"Country ISO information — country_iso","text":"Country International Organization Standardization (ISO) information.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/country_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country ISO information — country_iso","text":"","code":"country_iso"},{"path":"https://openintrostat.github.io/openintro/reference/country_iso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country ISO information — country_iso","text":"data frame 249 observations following 4 variables. country_code Two-letter ISO country code. country_name Country name. year Year two-letter ISO country code assigned. top_level_domain op-level domain name.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/country_iso.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Country ISO information — country_iso","text":"Wikipedia, retrieved 2018-11-18. https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2","code":""},{"path":"https://openintrostat.github.io/openintro/reference/country_iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Country ISO information — country_iso","text":"","code":"country_iso #> # A tibble: 249 × 4 #>    country_code country_name          year top_level_domain #>    <fct>        <fct>                <int> <fct>            #>  1 AD           Andorra               1974 .ad              #>  2 AE           United Arab Emirates  1974 .ae              #>  3 AF           Afghanistan           1974 .af              #>  4 AG           Antigua and Barbuda   1974 .ag              #>  5 AI           Anguilla              1985 .ai              #>  6 AL           Albania               1974 .al              #>  7 AM           Armenia               1992 .am              #>  8 AO           Angola                1974 .ao              #>  9 AQ           Antarctica            1974 .aq              #> 10 AR           Argentina             1974 .ar              #> # ℹ 239 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/cpr.html","id":null,"dir":"Reference","previous_headings":"","what":"CPR dataset — cpr","title":"CPR dataset — cpr","text":"patients randomly divided treatment group received blood thinner control group receive blood thinner. outcome variable interest whether patients survived least 24 hours.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CPR dataset — cpr","text":"","code":"cpr"},{"path":"https://openintrostat.github.io/openintro/reference/cpr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CPR dataset — cpr","text":"data frame 90 observations following 2 variables. group factor levels control treatment outcome factor levels died survived","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cpr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CPR dataset — cpr","text":"Efficacy safety thrombolytic therapy initially unsuccessful cardiopulmonary resuscitation: prospective clinical trial, Bottiger et al., Lancet, 2001.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CPR dataset — cpr","text":"","code":"table(cpr) #>            outcome #> group       died survived #>   control     39       11 #>   treatment   26       14"},{"path":"https://openintrostat.github.io/openintro/reference/cpu.html","id":null,"dir":"Reference","previous_headings":"","what":"CPU's Released between 2010 and 2020. — cpu","title":"CPU's Released between 2010 and 2020. — cpu","text":"Data computer processors released 2010 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cpu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CPU's Released between 2010 and 2020. — cpu","text":"","code":"cpu"},{"path":"https://openintrostat.github.io/openintro/reference/cpu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CPU's Released between 2010 and 2020. — cpu","text":"data frame 875 rows 12 variables. company Manufacturer CPU. name Model name processor. codename Name given manufacturer chips architecture. cores Number compute cores per processor. threads number threads represents number simultaneous calculations can ongoing processor. base_clock Base speed CPU GHz. boost_clock Single-core max speed CPU GHz. socket Specifies type connection motherboard. process Size process node used production nm. l3_cache Size level 3 cache processor MB. tdp Total draw power processor. released Date processor released public.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cpu.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CPU's Released between 2010 and 2020. — cpu","text":"TechPowerUp CPU Database.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/cpu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CPU's Released between 2010 and 2020. — cpu","text":"","code":"library(ggplot2)  # CPU base speed ggplot(cpu, aes(x = company, y = base_clock)) +   geom_boxplot() +   labs(     x = \"Company\",     y = \"Base Clock (GHz)\",     title = \"CPU base speed\"   )   # Process node size vs. boost speed ggplot(cpu, aes(x = process, y = boost_clock)) +   geom_point() +   labs(     x = \"Process node size (nm)\",     y = \"Boost Clock (GHz)\",     title = \"Process node size vs. boost speed\"   ) #> Warning: Removed 318 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/openintro/reference/credits.html","id":null,"dir":"Reference","previous_headings":"","what":"College credits. — credits","title":"College credits. — credits","text":"simulated dataset number credits taken college students semester.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/credits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"College credits. — credits","text":"","code":"credits"},{"path":"https://openintrostat.github.io/openintro/reference/credits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"College credits. — credits","text":"data frame 100 observations following variable. credits Number credits.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/credits.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"College credits. — credits","text":"Simulated data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/credits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"College credits. — credits","text":"","code":"library(ggplot2)  ggplot(credits, aes(x = credits)) +   geom_histogram(binwidth = 1)"},{"path":"https://openintrostat.github.io/openintro/reference/daycare_fines.html","id":null,"dir":"Reference","previous_headings":"","what":"Daycare fines — daycare_fines","title":"Daycare fines — daycare_fines","text":"Researchers tested deterrence hypothesis predicts introduction penalty reduce occurrence behavior subject fine, condition fine leaves everything else unchanged instituting fine late pickup daycare centers. study, worked 10 volunteer daycare centers originally impose fine parents picking kids late. randomly selected 6 daycare centers instituted monetary fine (considerable amount) picking children late removed . remaining 4 daycare centers fine introduced. study period divided four: fine (weeks 1–4), first 4 weeks fine (weeks 5-8), entire period fine (weeks 5–16), fine period (weeks 17-20). Throughout study, number kids picked late recorded week daycare. study found number late-coming parents increased significantly fine introduced, reduction occurred fine removed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/daycare_fines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daycare fines — daycare_fines","text":"","code":"daycare_fines"},{"path":"https://openintrostat.github.io/openintro/reference/daycare_fines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daycare fines — daycare_fines","text":"data frame 200 observations following 7 variables. center Daycare center id. group Study group: test (fine instituted) control (fine). children Number children daycare center. week Week study. late_pickups Number late pickups given week daycare center. study_period_4 Period study, divided 4 periods: fine, first 4 weeks fine, last 8 weeks fine, fine study_period_3 Period study, divided 4 periods: fine, fine, fine","code":""},{"path":"https://openintrostat.github.io/openintro/reference/daycare_fines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daycare fines — daycare_fines","text":"Gneezy, Uri, Aldo Rustichini. \"fine price.\" Journal Legal Studies 29, . 1 (2000): 1-17.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/daycare_fines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daycare fines — daycare_fines","text":"","code":"library(dplyr) library(tidyr) library(ggplot2)  # The following tables roughly match results presented in Table 2 of the source article # The results are only off by rounding for some of the weeks daycare_fines |>   group_by(center, study_period_4) |>   summarise(avg_late_pickups = mean(late_pickups), .groups = \"drop\") |>   pivot_wider(names_from = study_period_4, values_from = avg_late_pickups) #> # A tibble: 10 × 5 #>    center `before fine` `first 4 weeks with fine` `last 8 weeks with fine` #>     <int>         <dbl>                     <dbl>                    <dbl> #>  1      1          7.25                       9.5                    14.1  #>  2      2          5.25                       9                      13.9  #>  3      3          8.5                       10.2                    20.1  #>  4      4          9                         15                      21.2  #>  5      5         11.8                       20                      27    #>  6      6          6.25                      10                      14.8  #>  7      7          8.75                       8                       6.88 #>  8      8         13.2                       10.5                    11.1  #>  9      9          4.75                       5.5                     5.62 #> 10     10         13.2                       12.2                    13.6  #> # ℹ 1 more variable: `after fine` <dbl>  daycare_fines |>   group_by(center, study_period_3) |>   summarise(avg_late_pickups = mean(late_pickups), .groups = \"drop\") |>   pivot_wider(names_from = study_period_3, values_from = avg_late_pickups) #> # A tibble: 10 × 4 #>    center `before fine` `with fine` `after fine` #>     <int>         <dbl>       <dbl>        <dbl> #>  1      1          7.25       12.6         15.2  #>  2      2          5.25       12.2         13.2  #>  3      3          8.5        16.8         22    #>  4      4          9          19.2         20.2  #>  5      5         11.8        24.7         29.5  #>  6      6          6.25       13.2         12    #>  7      7          8.75        7.25         6.75 #>  8      8         13.2        10.9          9.25 #>  9      9          4.75        5.58         4.75 #> 10     10         13.2        13.2         12.2   # The following plot matches Figure 1 of the source article daycare_fines |>   group_by(week, group) |>   summarise(avg_late_pickups = mean(late_pickups), .groups = \"drop\") |>   ggplot(aes(x = week, y = avg_late_pickups, group = group, color = group)) +   geom_point() +   geom_line()"},{"path":"https://openintrostat.github.io/openintro/reference/densityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plot — densityPlot","title":"Density plot — densityPlot","text":"Compute kernel density plots, written structure boxPlot. Histograms can automatically added teaching purposes.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/densityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plot — densityPlot","text":"","code":"densityPlot(   x,   fact = NULL,   bw = \"nrd0\",   histo = c(\"none\", \"faded\", \"hollow\"),   breaks = \"Sturges\",   fading = \"0E\",   fadingBorder = \"25\",   lty = NULL,   lwd = 1,   col = c(\"black\", \"red\", \"blue\"),   key = NULL,   add = FALSE,   adjust = 1,   kernel = c(\"gaussian\", \"epanechnikov\", \"rectangular\", \"triangular\", \"biweight\",     \"cosine\", \"optcosine\"),   weights = NULL,   n = 512,   from,   to,   na.rm = FALSE,   xlim = NULL,   ylim = NULL,   main = \"\",   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/densityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plot — densityPlot","text":"x numerical vector. fact character factor vector defining grouping data x. bw Bandwidth. See density. histo Whether plot faded histogram ('faded') hollow histogram ('hollow') background. default, histogram plotted. breaks breaks argument histPlot histo 'faded' 'hollow'. fading Character value hexadecimal, e.g. '22' '5D', describing amount fading inside rectangles histogram histo='faded'. fadingBorder Character value hexadecimal, e.g. '22' '5D', describing amount fading rectangle borders histogram histo 'faded' 'hollow'. lty Numerical vector describing line type density curve(s). element corresponds different level argumentfact. lwd Numerical vector describing line width density curve(s). element corresponds different level argumentfact. col Numerical vector describing line color density curve(s). element corresponds different level argumentfact. key argument specify ordering factor levels. add TRUE, density curve added plot. adjust Argument passed density adjust bandwidth. kernel Argument passed density select kernel used. weights Argument passed density weight observations. n Argument passed density specify detail density estimate. Argument passed density specifying lowest value include density estimate. Argument passed density specifying largest value include density estimate. na.rm Argument passed density specifying handling NA values. xlim x-axis limits. ylim y-axis limits. main Title plot. ... add=FALSE, additional arguments plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/densityPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density plot — densityPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/densityPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plot — densityPlot","text":"","code":"# hollow histograms histPlot(tips$tip[tips$day == \"Tuesday\"],   hollow = TRUE, xlim = c(0, 30),   lty = 1, main = \"Tips by day\" ) histPlot(tips$tip[tips$day == \"Friday\"],   hollow = TRUE, border = \"red\",   add = TRUE, main = \"Tips by day\" ) legend(\"topright\",   col = c(\"black\", \"red\"),   lty = 1:2, legend = c(\"Tuesday\", \"Friday\") )   # density plots densityPlot(tips$tip, tips$day,   col = c(\"black\", \"red\"), main = \"Tips by day\" ) legend(\"topright\",   col = c(\"black\", \"red\"),   lty = 1:2, legend = c(\"Tuesday\", \"Friday\") )   densityPlot(tips$tip,   histo = \"faded\",   breaks = 15, main = \"Tips by day\" )   densityPlot(tips$tip,   histo = \"hollow\",   breaks = 30, fadingBorder = \"66\",   lty = 1, main = \"Tips by day\" )"},{"path":"https://openintrostat.github.io/openintro/reference/diabetes2.html","id":null,"dir":"Reference","previous_headings":"","what":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","title":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","text":"Three treatments compared test relative efficacy (effectiveness) treating Type 2 Diabetes patients aged 10-17 treated metformin. primary outcome lack glycemic control (); lacking glycemic control means patient still needed insulin, preferred outcome patient.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/diabetes2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","text":"","code":"diabetes2"},{"path":"https://openintrostat.github.io/openintro/reference/diabetes2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","text":"data frame 699 observations following 2 variables. treatment treatment patient received. outcome Whether patient still needs insulin (failure) met basic positive outcome bar (success).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/diabetes2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","text":"Zeitler P, et al. 2012. Clinical Trial Maintain Glycemic Control Youth Type 2 Diabetes. N Engl J Med.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/diabetes2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","text":"699 patients experiment randomized one following treatments: (1) continued treatment metformin (coded met), (2) formin combined rosiglitazone (coded rosi), (3) lifestyle-intervention program (coded lifestyle).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/diabetes2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Type 2 Diabetes Clinical Trial for Patients 10-17 Years Old — diabetes2","text":"","code":"lapply(diabetes2, table) #> $treatment #>  #> lifestyle       met      rosi  #>       234       232       233  #>  #> $outcome #>  #> failure success  #>     319     380  #>  (cont.table <- table(diabetes2)) #>            outcome #> treatment   failure success #>   lifestyle     109     125 #>   met           120     112 #>   rosi           90     143 (m <- chisq.test(cont.table)) #>  #> \tPearson's Chi-squared test #>  #> data:  cont.table #> X-squared = 8.1645, df = 2, p-value = 0.01687 #>  m$expected #>            outcome #> treatment    failure  success #>   lifestyle 106.7897 127.2103 #>   met       105.8770 126.1230 #>   rosi      106.3333 126.6667"},{"path":"https://openintrostat.github.io/openintro/reference/dlsegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Double Line Segment Plot — dlsegments","title":"Create a Double Line Segment Plot — dlsegments","text":"Creae plot showing two line segments. union intersection line segments can also generated utilizing type argument.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dlsegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Double Line Segment Plot — dlsegments","text":"","code":"dlsegments(   x1 = c(3, 7),   x2 = c(5, 9),   l = c(\"o\", \"o\"),   r = c(\"c\", \"c\"),   type = c(\"n\", \"u\", \"i\"),   COL = 2,   lwd = 2.224,   ylim = c(-0.35, 2),   mar = rep(0, 4),   hideOrig = FALSE )"},{"path":"https://openintrostat.github.io/openintro/reference/dlsegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Double Line Segment Plot — dlsegments","text":"x1 endpoints first interval. Values larger (smaller) 999 (-999) interpreted (negative) infinity. x2 endpoints second interval. Values larger (smaller) 999 (-999) interpreted (negative) infinity. l vector length 2, values correspond left end point interval. value \"o\" indicates interval open left \"c\" indicates interval closed end. r vector length 2, values correspond right end point interval. value \"o\" indicates interval open right \"c\" indicates interval closed end. type default, intersection union two lines shown (value \"n\"). show union line segments, specify \"u\". indicate intersection shown, specify \"\". COL union intersection shown (see type argument), parameter controls color shown. lwd union intersection shown (see type argument), parameter controls width corresponding lines open points union intersection. ylim vector length 2 specifying vertical plotting limits, may useful fine-tuning plots. default c(-0.35,2). mar vector length 4 represent plotting margins. hideOrig optional argument specify two line segments shown (hideOrig takes value FALSE, default) hidden (hideOrig takes value TRUE.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/dlsegments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Double Line Segment Plot — dlsegments","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dlsegments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Double Line Segment Plot — dlsegments","text":"","code":"dlsegments(c(-3, 3), c(1, 1000),   r = c(\"o\", \"o\"), l = c(\"c\", \"o\"), COL = COL[4] )  dlsegments(c(-3, 3), c(1, 1000),   r = c(\"o\", \"o\"), l = c(\"c\", \"o\"), type = \"un\", COL = COL[4] )   dlsegments(c(-3, 3), c(1, 1000),   r = c(\"o\", \"o\"), l = c(\"c\", \"o\"), type = \"in\", COL = COL[4] )"},{"path":"https://openintrostat.github.io/openintro/reference/dotPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot — dotPlot","title":"Dot plot — dotPlot","text":"Plot observations dots.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dotPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot — dotPlot","text":"","code":"dotPlot(   x,   fact = NULL,   vertical = FALSE,   at = 1,   key = NULL,   pch = 20,   col = fadeColor(\"black\", \"66\"),   cex = 1.5,   add = FALSE,   axes = TRUE,   xlim = NULL,   ylim = NULL,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/dotPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot — dotPlot","text":"x numerical vector. fact character factor vector defining grouping data x. vertical TRUE, plot oriented vertically. vertical coordinate points, horizontal coordinate vertical=TRUE. fact provided, locations can specified group. key factor levels corresponding , pch, col, cex. pch Plotting character. fact given, different plotting characters can specified factor level. key specified, elements pch correspond elements key. col Plotting character color. fact given, different colors can specified factor level. key specified, elements col correspond elements key. cex Plotting character size. fact given, different character sizes can specified factor level. key specified, elements cex correspond elements key. add TRUE, points added plot. axes FALSE, axes plotted. xlim Limits x axis. ylim Limits y axis. ... Additional arguments passed plot add=FALSE points add=TRUE.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/dotPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dot plot — dotPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dotPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dot plot — dotPlot","text":"","code":"library(dplyr)  # Price by type dotPlot(cars93$price,   cars93$type,   key = c(\"large\", \"midsize\", \"small\"),   cex = 1:3 )   # Hours worked by educational attainment or degree gss2010_nona <- gss2010 |>   filter(!is.na(hrs1) & !is.na(degree))  dotPlot(gss2010_nona$hrs1,   gss2010_nona$degree,   col = fadeColor(\"black\", \"11\") )   # levels reordered dotPlot(gss2010_nona$hrs1,   gss2010_nona$degree,   col = fadeColor(\"black\", \"11\"),   key = c(\"LT HIGH SCHOOL\", \"HIGH SCHOOL\", \"BACHELOR\", \"JUNIOR COLLEGE\", \"GRADUATE\") )   # with boxPlot() overlaid dotPlot(mariokart$total_pr,   mariokart$cond,   ylim = c(0.5, 2.5), xlim = c(25, 80), cex = 1 ) boxPlot(mariokart$total_pr,   mariokart$cond,   add = 1:2 + 0.1,   key = c(\"new\", \"used\"), horiz = TRUE, axes = FALSE )"},{"path":"https://openintrostat.github.io/openintro/reference/dotPlotStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","title":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","text":"Add stacked dot plot existing plot. locations points dot plot returned function list.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dotPlotStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","text":"","code":"dotPlotStack(x, radius = 1, seed = 1, addDots = TRUE, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/dotPlotStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","text":"x vector numerical observations dot plot. radius approximate distance separate point. seed random seed (integer). Different values produce different variations. addDots Indicate whether points added plot. ... Additional arguments passed points.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dotPlotStack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","text":"Returns list height can used upper bound ylim plot, also x- y-coordinates points stacked dot plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/dotPlotStack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dotPlotStack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Stacked Dot Plot to an Existing Plot — dotPlotStack","text":"","code":"#"},{"path":"https://openintrostat.github.io/openintro/reference/dream.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey on views of the DREAM Act — dream","title":"Survey on views of the DREAM Act — dream","text":"SurveyUSA poll.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey on views of the DREAM Act — dream","text":"","code":"dream"},{"path":"https://openintrostat.github.io/openintro/reference/dream.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey on views of the DREAM Act — dream","text":"data frame 910 observations following 2 variables. ideology factor levels Conservative Liberal Moderate stance factor levels sure Yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dream.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey on views of the DREAM Act — dream","text":"SurveyUSA, News Poll #18927, data collected Jan 27-29, 2012.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/dream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey on views of the DREAM Act — dream","text":"","code":"table(dream) #>               stance #> ideology        No Not sure Yes #>   Conservative 151       35 186 #>   Liberal       52        9 114 #>   Moderate     161       28 174"},{"path":"https://openintrostat.github.io/openintro/reference/drone_blades.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadcopter Drone Blades — drone_blades","title":"Quadcopter Drone Blades — drone_blades","text":"Quality control dataset quadcopter drone blades, data made example.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/drone_blades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadcopter Drone Blades — drone_blades","text":"","code":"drone_blades"},{"path":"https://openintrostat.github.io/openintro/reference/drone_blades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Quadcopter Drone Blades — drone_blades","text":"data frame 2000 observations following 2 variables. supplier supplier blade. inspection inspection conclusion.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/drone_blades.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadcopter Drone Blades — drone_blades","text":"OpenIntro Statistics, Third Edition Fourth Edition.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/drone_blades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quadcopter Drone Blades — drone_blades","text":"","code":"library(dplyr)  drone_blades |>   count(supplier, inspection) #> # A tibble: 4 × 3 #>   supplier             inspection     n #>   <fct>                <fct>      <int> #> 1 current_supplier     fail         101 #> 2 current_supplier     pass         899 #> 3 prospective_supplier fail          42 #> 4 prospective_supplier pass         958"},{"path":"https://openintrostat.github.io/openintro/reference/drug_use.html","id":null,"dir":"Reference","previous_headings":"","what":"Drug use of students and parents — drug_use","title":"Drug use of students and parents — drug_use","text":"Summary 445 student-parent pairs.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/drug_use.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drug use of students and parents — drug_use","text":"","code":"drug_use"},{"path":"https://openintrostat.github.io/openintro/reference/drug_use.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Drug use of students and parents — drug_use","text":"data frame 445 observations following 2 variables. student factor levels uses parents factor levels used","code":""},{"path":"https://openintrostat.github.io/openintro/reference/drug_use.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Drug use of students and parents — drug_use","text":"Ellis GJ Stone LH. 1979. Marijuana Use College: Evaluation Modeling Explanation. Youth Society 10:323-334.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/drug_use.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drug use of students and parents — drug_use","text":"","code":"table(drug_use) #>        parents #> student not used #>    not  141   85 #>    uses  94  125"},{"path":"https://openintrostat.github.io/openintro/reference/duke_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Sale prices of houses in Duke Forest, Durham, NC — duke_forest","title":"Sale prices of houses in Duke Forest, Durham, NC — duke_forest","text":"Data houses recently sold Duke Forest neighborhood Durham, NC November 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/duke_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sale prices of houses in Duke Forest, Durham, NC — duke_forest","text":"","code":"duke_forest"},{"path":"https://openintrostat.github.io/openintro/reference/duke_forest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sale prices of houses in Duke Forest, Durham, NC — duke_forest","text":"data frame 98 rows 13 variables. address Address house. price Sale price, USD. bed Number bedrooms. bath Number bathrooms. area Area home, square feet. type Type home (Single Family). year_built Year home built. heating Heating sytem. cooling Cooling system (central). parking Type parking available number parking spaces. lot Area entire property, acres. hoa home belongs Home Owners Association, associted fee (NA otherwise). url URL listing.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/duke_forest.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sale prices of houses in Duke Forest, Durham, NC — duke_forest","text":"Data collected Zillow November 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/duke_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sale prices of houses in Duke Forest, Durham, NC — duke_forest","text":"","code":"library(ggplot2)  # Number of bedrooms and price ggplot(duke_forest, aes(x = as.factor(bed), y = price)) +   geom_boxplot() +   labs(     x = \"Number of bedrooms\",     y = \"Sale price (USD)\",     title = \"Homes for sale in Duke Forest, Durham, NC\",     subtitle = \"Data are from November 2020\"   )   # Area and price ggplot(duke_forest, aes(x = area, y = price)) +   geom_point() +   labs(     x = \"Area (square feet)\",     y = \"Sale price (USD)\",     title = \"Homes for sale in Duke Forest, Durham, NC\",     subtitle = \"Data are from November 2020\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/earthquakes.html","id":null,"dir":"Reference","previous_headings":"","what":"Earthquakes — earthquakes","title":"Earthquakes — earthquakes","text":"Select set notable earthquakes 1900 1999.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/earthquakes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earthquakes — earthquakes","text":"","code":"earthquakes"},{"path":"https://openintrostat.github.io/openintro/reference/earthquakes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Earthquakes — earthquakes","text":"data frame 123 rows 7 variables. year Year earthquake took place. month Month earthquake took place. day Day earthquake took place richter Magnitude earthquake using Richter Scale. area City geographic location earthquakes. region Country countries earthquake occurred border. deaths Approximate number deaths caused earthquake","code":""},{"path":"https://openintrostat.github.io/openintro/reference/earthquakes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Earthquakes — earthquakes","text":"World Almanac Book Facts: 2011.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/earthquakes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Earthquakes — earthquakes","text":"","code":"library(ggplot2)  ggplot(earthquakes, aes(x = richter, y = deaths)) +   geom_point() #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_point()`).   ggplot(earthquakes, aes(x = log(deaths))) +   geom_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Removed 2 rows containing non-finite outside the scale range (`stat_bin()`)."},{"path":"https://openintrostat.github.io/openintro/reference/ebola_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey on Ebola quarantine — ebola_survey","title":"Survey on Ebola quarantine — ebola_survey","text":"New York City October 23rd, 2014, doctor recently treating Ebola patients Guinea went hospital slight fever subsequently diagnosed Ebola. Soon thereafter, NBC 4 New York/Wall Street Journal/Marist Poll asked New Yorkers whether favored \"mandatory 21-day quarantine anyone come contact Ebola patient\". poll included responses 1,042 New York adults October 26th 28th, 2014.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ebola_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey on Ebola quarantine — ebola_survey","text":"","code":"ebola_survey"},{"path":"https://openintrostat.github.io/openintro/reference/ebola_survey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey on Ebola quarantine — ebola_survey","text":"data frame 1042 observations following variable. quarantine Indicates whether respondent favor mandatory quarantine.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ebola_survey.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey on Ebola quarantine — ebola_survey","text":"Poll ID NY141026 maristpoll.marist.edu.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ebola_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey on Ebola quarantine — ebola_survey","text":"","code":"table(ebola_survey) #> quarantine #> against   favor  #>     188     854"},{"path":"https://openintrostat.github.io/openintro/reference/edaPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory data analysis plot — edaPlot","title":"Exploratory data analysis plot — edaPlot","text":"Explore different plotting methods using click interface.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/edaPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory data analysis plot — edaPlot","text":"","code":"edaPlot(   dataFrame,   Col = c(\"#888888\", \"#FF0000\", \"#222222\", \"#FFFFFF\", \"#CCCCCC\", \"#3377AA\") )"},{"path":"https://openintrostat.github.io/openintro/reference/edaPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory data analysis plot — edaPlot","text":"dataFrame data frame. Col vector containing six colors. colors may given form.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/edaPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exploratory data analysis plot — edaPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/edaPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exploratory data analysis plot — edaPlot","text":"","code":"data(mlbbat10) bat <- mlbbat10[mlbbat10$at_bat > 200, ] # edaPlot(bat)  data(mariokart) mk <- mariokart[mariokart$total_pr < 100, ] # edaPlot(mk)"},{"path":"https://openintrostat.github.io/openintro/reference/elmhurst.html","id":null,"dir":"Reference","previous_headings":"","what":"Elmhurst College gift aid — elmhurst","title":"Elmhurst College gift aid — elmhurst","text":"random sample 50 students gift aid students Elmhurst College.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/elmhurst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elmhurst College gift aid — elmhurst","text":"","code":"elmhurst"},{"path":"https://openintrostat.github.io/openintro/reference/elmhurst.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Elmhurst College gift aid — elmhurst","text":"data frame 50 observations following 3 variables. family_income Family income student. gift_aid Gift aid, $1000s. price_paid Price paid student (tuition - gift aid).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/elmhurst.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Elmhurst College gift aid — elmhurst","text":"data sampled table data freshman 2011 class Elmhurst College accompanied article titled Students Really Pay Go College published online Chronicle Higher Education: https://www.chronicle.com/article/-students-really-pay--go--college/?sra=true.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/elmhurst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elmhurst College gift aid — elmhurst","text":"","code":"library(ggplot2) library(broom)  ggplot(elmhurst, aes(x = family_income, y = gift_aid)) +   geom_point() +   geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x'   mod <- lm(gift_aid ~ family_income, data = elmhurst) tidy(mod) #> # A tibble: 2 × 5 #>   term          estimate std.error statistic  p.value #>   <chr>            <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)    24.3       1.29       18.8  8.28e-24 #> 2 family_income  -0.0431    0.0108     -3.98 2.29e- 4"},{"path":"https://openintrostat.github.io/openintro/reference/email.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame representing information about a collection of emails — email","title":"Data frame representing information about a collection of emails — email","text":"data represent incoming emails first three months 2012 email account (see Source).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame representing information about a collection of emails — email","text":"","code":"email"},{"path":"https://openintrostat.github.io/openintro/reference/email.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame representing information about a collection of emails — email","text":"email (email_sent) data frame 3921 (1252) observations following 21 variables. spam Indicator whether email spam. to_multiple Indicator whether email addressed one recipient. Whether message listed anyone (usually set default regular outgoing email). cc Number people cc'ed. sent_email Indicator whether sender sent email last 30 days. time Time email sent. image number images attached. attach number attached files. dollar number times dollar sign word “dollar” appeared email. winner Indicates whether “winner” appeared email. inherit number times “inherit” (extension, “inheritance”) appeared email. viagra number times “viagra” appeared email. password number times “password” appeared email. num_char number characters email, thousands. line_breaks number line breaks email (count text wrapping). format Indicates whether email written using HTML (e.g. may included bolding active links). re_subj Whether subject started “Re:”, “RE:”, “re:”, “rE:” exclaim_subj Whether exclamation point subject. urgent_subj Whether word “urgent” email subject. exclaim_mess number exclamation points email message. number Factor variable saying whether number, small number (1 million), big number.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/email.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data frame representing information about a collection of emails — email","text":"David Diez's Gmail Account, early months 2012. personally identifiable information removed.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data frame representing information about a collection of emails — email","text":"","code":"e <- email  # ______ Variables For Logistic Regression ______# # Variables are modified to match #   OpenIntro Statistics, Second Edition # As Is (7): spam, to_multiple, winner, format, #            re_subj, exclaim_subj # Omitted (6): from, sent_email, time, image, #              viagra, urgent_subj, number # Become Indicators (5): cc, attach, dollar, #                        inherit, password e$cc <- ifelse(email$cc > 0, 1, 0) e$attach <- ifelse(email$attach > 0, 1, 0) e$dollar <- ifelse(email$dollar > 0, 1, 0) e$inherit <- ifelse(email$inherit > 0, 1, 0) e$password <- ifelse(email$password > 0, 1, 0) # Transform (3): num_char, line_breaks, exclaim_mess # e$num_char     <- cut(email$num_char, c(0,1,5,10,20,1000)) # e$line_breaks  <- cut(email$line_breaks, c(0,10,100,500,10000)) # e$exclaim_mess <- cut(email$exclaim_mess, c(-1,0,1,5,10000)) g <- glm(   spam ~ to_multiple + winner + format +     re_subj + exclaim_subj +     cc + attach + dollar +     inherit + password, # +   # num_char + line_breaks + exclaim_mess,   data = e, family = binomial ) summary(g) #>  #> Call: #> glm(formula = spam ~ to_multiple + winner + format + re_subj +  #>     exclaim_subj + cc + attach + dollar + inherit + password,  #>     family = binomial, data = e) #>  #> Coefficients: #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  -0.83623    0.09620  -8.692  < 2e-16 *** #> to_multiple1 -2.88364    0.31211  -9.239  < 2e-16 *** #> winneryes     1.70380    0.32539   5.236 1.64e-07 *** #> format1      -1.59018    0.12387 -12.838  < 2e-16 *** #> re_subj1     -2.90816    0.37077  -7.844 4.38e-15 *** #> exclaim_subj  0.13549    0.22682   0.597  0.55028     #> cc           -0.48628    0.30542  -1.592  0.11135     #> attach        0.97903    0.21696   4.512 6.41e-06 *** #> dollar       -0.05816    0.15891  -0.366  0.71435     #> inherit       0.20926    0.31969   0.655  0.51275     #> password     -1.49295    0.52947  -2.820  0.00481 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 2437.2  on 3920  degrees of freedom #> Residual deviance: 1948.3  on 3910  degrees of freedom #> AIC: 1970.3 #>  #> Number of Fisher Scoring iterations: 7 #>    # ______ Variable Selection Via AIC ______# g. <- step(g) #> Start:  AIC=1970.26 #> spam ~ to_multiple + winner + format + re_subj + exclaim_subj +  #>     cc + attach + dollar + inherit + password #>  #>                Df Deviance    AIC #> - dollar        1   1948.4 1968.4 #> - exclaim_subj  1   1948.6 1968.6 #> - inherit       1   1948.7 1968.7 #> <none>              1948.3 1970.3 #> - cc            1   1951.0 1971.0 #> - password      1   1960.2 1980.2 #> - attach        1   1967.2 1987.2 #> - winner        1   1972.4 1992.4 #> - re_subj       1   2089.6 2109.6 #> - format        1   2115.9 2135.9 #> - to_multiple   1   2118.7 2138.7 #>  #> Step:  AIC=1968.39 #> spam ~ to_multiple + winner + format + re_subj + exclaim_subj +  #>     cc + attach + inherit + password #>  #>                Df Deviance    AIC #> - exclaim_subj  1   1948.7 1966.7 #> - inherit       1   1948.7 1966.7 #> <none>              1948.4 1968.4 #> - cc            1   1951.1 1969.1 #> - password      1   1960.3 1978.3 #> - attach        1   1967.7 1985.7 #> - winner        1   1972.4 1990.4 #> - re_subj       1   2089.7 2107.7 #> - format        1   2116.5 2134.5 #> - to_multiple   1   2119.7 2137.7 #>  #> Step:  AIC=1966.66 #> spam ~ to_multiple + winner + format + re_subj + cc + attach +  #>     inherit + password #>  #>               Df Deviance    AIC #> - inherit      1   1948.9 1964.9 #> <none>             1948.7 1966.7 #> - cc           1   1951.3 1967.3 #> - password     1   1960.5 1976.5 #> - attach       1   1967.8 1983.8 #> - winner       1   1973.2 1989.2 #> - re_subj      1   2091.8 2107.8 #> - format       1   2117.2 2133.2 #> - to_multiple  1   2119.9 2135.9 #>  #> Step:  AIC=1964.93 #> spam ~ to_multiple + winner + format + re_subj + cc + attach +  #>     password #>  #>               Df Deviance    AIC #> <none>             1948.9 1964.9 #> - cc           1   1951.5 1965.5 #> - password     1   1961.0 1975.0 #> - attach       1   1968.0 1982.0 #> - winner       1   1973.9 1987.9 #> - re_subj      1   2094.1 2108.1 #> - format       1   2118.6 2132.6 #> - to_multiple  1   2120.4 2134.4 plot(predict(g., type = \"response\"), e$spam)    # ______ Splitting num_char by html ______# x <- log(email$num_char) bw <- 0.004 R <- range(x) + c(-1, 1) wt <- sum(email$format == 1) / nrow(email) htmlAll <- density(x, bw = 0.4, from = R[1], to = R[2]) htmlNo <- density(x[email$format != 1],   bw = 0.4,   from = R[1], to = R[2] ) htmlYes <- density(x[email$format == 1],   bw = 0.4,   from = R[1], to = R[2] ) htmlNo$y <- htmlNo$y #* (1-wt) htmlYes$y <- htmlYes$y #* wt + htmlNo$y plot(htmlAll, xlim = c(-4, 6), ylim = c(0, 0.4)) lines(htmlNo, col = 4) lines(htmlYes, lwd = 2, col = 2)"},{"path":"https://openintrostat.github.io/openintro/reference/email50.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of 50 emails — email50","title":"Sample of 50 emails — email50","text":"subsample email dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/email50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of 50 emails — email50","text":"","code":"email50"},{"path":"https://openintrostat.github.io/openintro/reference/email50.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of 50 emails — email50","text":"data frame 50 observations following 21 variables. spam Indicator whether email spam. to_multiple Indicator whether email addressed one recipient. Whether message listed anyone (usually set default regular outgoing email). cc Number people cc'ed. sent_email Indicator whether sender sent email last 30 days. time Time email sent. image number images attached. attach number attached files. dollar number times dollar sign word “dollar” appeared email. winner Indicates whether “winner” appeared email. inherit number times “inherit” (extension, “inheritance”) appeared email. viagra number times “viagra” appeared email. password number times “password” appeared email. num_char number characters email, thousands. line_breaks number line breaks email (count text wrapping). format Indicates whether email written using HTML (e.g. may included bolding active links). re_subj Whether subject started “Re:”, “RE:”, “re:”, “rE:” exclaim_subj Whether exclamation point subject. urgent_subj Whether word “urgent” email subject. exclaim_mess number exclamation points email message. number Factor variable saying whether number, small number (1 million), big number.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/email50.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample of 50 emails — email50","text":"David Diez's Gmail Account, early months 2012. personally identifiable information removed.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/email50.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of 50 emails — email50","text":"","code":"index <- c(   101, 105, 116, 162, 194, 211, 263, 308, 361, 374,   375, 465, 509, 513, 571, 691, 785, 842, 966, 968,   1051, 1201, 1251, 1433, 1519, 1727, 1760, 1777, 1899, 1920,   1943, 2013, 2052, 2252, 2515, 2629, 2634, 2710, 2823, 2835,   2944, 3098, 3227, 3360, 3452, 3496, 3530, 3665, 3786, 3877 ) order <- c(   3, 33, 12, 1, 21, 15, 43, 49, 8, 6,   34, 25, 24, 35, 41, 9, 22, 50, 4, 48,   7, 14, 46, 10, 38, 32, 26, 18, 23, 45,   30, 16, 17, 20, 40, 47, 31, 37, 27, 11,   5, 44, 29, 19, 13, 36, 39, 42, 28, 2 ) d <- email[index, ][order, ] identical(d, email50) #> [1] TRUE"},{"path":"https://openintrostat.github.io/openintro/reference/env_regulation.html","id":null,"dir":"Reference","previous_headings":"","what":"American Adults on Regulation and Renewable Energy — env_regulation","title":"American Adults on Regulation and Renewable Energy — env_regulation","text":"Pew Research conducted poll find whether American adults support regulation believe private market move American economy towards renewable energy.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/env_regulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"American Adults on Regulation and Renewable Energy — env_regulation","text":"","code":"env_regulation"},{"path":"https://openintrostat.github.io/openintro/reference/env_regulation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"American Adults on Regulation and Renewable Energy — env_regulation","text":"data frame 705 observations following variable. statement three possible outcomes person: \"Regulations necessary\", \"Private marketplace ensure\", \"know\".","code":""},{"path":"https://openintrostat.github.io/openintro/reference/env_regulation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"American Adults on Regulation and Renewable Energy — env_regulation","text":"https://www.pewresearch.org/science/2017/05/16/public-divides--environmental-regulation--energy-policy-2/","code":""},{"path":"https://openintrostat.github.io/openintro/reference/env_regulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"American Adults on Regulation and Renewable Energy — env_regulation","text":"exact statements selected : (1) Government regulations necessary encourage businesses consumers rely renewable energy sources. (2) private marketplace ensure businesses consumers rely renewable energy sources, even without government regulations. actual sample size 1012. However, original data simple random sample; accounting design, equivalent sample size 705, used dataset keep things simpler intro stat analyses.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/env_regulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"American Adults on Regulation and Renewable Energy — env_regulation","text":"","code":"table(env_regulation) #> statement #>                      Don't know Private marketplace will ensure  #>                              56                             268  #>           Regulations necessary  #>                             381"},{"path":"https://openintrostat.github.io/openintro/reference/epa2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Vehicle info from the EPA for 2012 — epa2012","title":"Vehicle info from the EPA for 2012 — epa2012","text":"Details EPA.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/epa2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vehicle info from the EPA for 2012 — epa2012","text":"","code":"epa2012"},{"path":"https://openintrostat.github.io/openintro/reference/epa2012.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vehicle info from the EPA for 2012 — epa2012","text":"data frame 1129 observations following 28 variables. model_yr numeric vector mfr_name Manufacturer name. division Vehicle division. carline Vehicle line. mfr_code Manufacturer code. model_type_index Model type index. engine_displacement Engine displacement. no_cylinders Number cylinders. transmission_speed Transmission speed. city_mpg City mileage. hwy_mpg Highway mileage. comb_mpg Combined mileage. guzzler Whether car considered \"guzzler\" , factor levels N Y. air_aspir_method Air aspiration method. air_aspir_method_desc Air aspiration method description. transmission Transmission type. transmission_desc Transmission type description. no_gears Number gears. trans_lockup Whether transmission locks , factor levels N Y. trans_creeper_gear factor level N . drive_sys Drive system, factor levels. drive_desc Drive system description. fuel_usage Fuel usage, factor levels. fuel_usage_desc Fuel usage description. class Class car. car_truck Car truck, factor levels car, 1, 2. release_date Date vehicle release. fuel_cell Whether car fuel cell , factor levels N, Y.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/epa2012.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Vehicle info from the EPA for 2012 — epa2012","text":"Fueleconomy.gov, Shared MPG Estimates: Toyota Prius 2012.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/epa2012.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vehicle info from the EPA for 2012 — epa2012","text":"","code":"library(ggplot2) library(dplyr)  # Variable descriptions distinct(epa2012, air_aspir_method_desc, air_aspir_method) #> # A tibble: 4 × 2 #>   air_aspir_method_desc air_aspir_method #>   <fct>                 <fct>            #> 1 Naturally Aspirated   NA               #> 2 Turbocharged          TC               #> 3 Supercharged          SC               #> 4 NA                    NA               distinct(epa2012, transmission_desc, transmission) #> # A tibble: 7 × 2 #>   transmission_desc                                        transmission #>   <fct>                                                    <fct>        #> 1 Manual                                                   M            #> 2 Automated Manual                                         AM           #> 3 Semi-Automatic                                           SA           #> 4 Automatic                                                A            #> 5 Selectable Continuously Variable (e.g. CVT with paddles) SCV          #> 6 Continuously Variable                                    CVT          #> 7 Other                                                    OT           distinct(epa2012, drive_desc, drive_sys) #> # A tibble: 5 × 2 #>   drive_desc              drive_sys #>   <fct>                   <fct>     #> 1 2-Wheel Drive, Rear     R         #> 2 All Wheel Drive         A         #> 3 2-Wheel Drive, Front    F         #> 4 4-Wheel Drive           4         #> 5 Part-time 4-Wheel Drive P         distinct(epa2012, fuel_usage_desc, fuel_usage) #> # A tibble: 7 × 2 #>   fuel_usage_desc                           fuel_usage #>   <fct>                                     <fct>      #> 1 Gasoline (Premium Unleaded Recommended)   GP         #> 2 Gasoline (Premium Unleaded Required)      GPR        #> 3 Gasoline (Regular Unleaded Recommended)   G          #> 4 Electricity                               EL         #> 5 Diesel                                    DU         #> 6 Gasoline (Mid Grade Unleaded Recommended) GM         #> 7 Hydrogen                                  H           # Guzzlers and their mileages ggplot(epa2012, aes(x = city_mpg, y = hwy_mpg, color = guzzler)) +   geom_point() +   facet_wrap(~guzzler, ncol = 1)"},{"path":"https://openintrostat.github.io/openintro/reference/epa2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Vehicle info from the EPA for 2021 — epa2021","title":"Vehicle info from the EPA for 2021 — epa2021","text":"Details EPA.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/epa2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vehicle info from the EPA for 2021 — epa2021","text":"","code":"epa2021"},{"path":"https://openintrostat.github.io/openintro/reference/epa2021.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vehicle info from the EPA for 2021 — epa2021","text":"data frame 1108 observations following 28 variables. model_yr numeric vector mfr_name Manufacturer name. division Vehicle division. carline Vehicle line. mfr_code Manufacturer code. model_type_index Model type index. engine_displacement Engine displacement. no_cylinders Number cylinders. transmission_speed Transmission speed. city_mpg City mileage. hwy_mpg Highway mileage. comb_mpg Combined mileage. guzzler Whether car considered \"guzzler\" , factor levels N Y. air_aspir_method Air aspiration method. air_aspir_method_desc Air aspiration method description. transmission Transmission type. transmission_desc Transmission type description. no_gears Number gears. trans_lockup Whether transmission locks , factor levels N Y. trans_creeper_gear factor level N . drive_sys Drive system, factor levels. drive_desc Drive system description. fuel_usage Fuel usage, factor levels. fuel_usage_desc Fuel usage description. class Class car. car_truck Car truck, factor levels car, 1, ??, 1. release_date Date vehicle release. fuel_cell Whether car fuel cell , factor levels N, NA.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/epa2021.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Vehicle info from the EPA for 2021 — epa2021","text":"Fuel Economy Data fueleconomy.gov. Retrieved 6 May, 2021.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/epa2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vehicle info from the EPA for 2021 — epa2021","text":"","code":"library(ggplot2) library(dplyr)  # Variable descriptions distinct(epa2021, air_aspir_method_desc, air_aspir_method) #> # A tibble: 5 × 2 #>   air_aspir_method_desc     air_aspir_method #>   <fct>                     <fct>            #> 1 Turbocharged              TC               #> 2 Naturally Aspirated       NA               #> 3 Supercharged              SC               #> 4 Other                     OT               #> 5 Turbocharged+Supercharged TS               distinct(epa2021, transmission_desc, transmission) #> # A tibble: 7 × 2 #>   transmission_desc                                                 transmission #>   <fct>                                                             <fct>        #> 1 Automated Manual- Selectable (e.g. Automated Manual with paddles) AMS          #> 2 Manual                                                            M            #> 3 Semi-Automatic                                                    SA           #> 4 Automated Manual                                                  AM           #> 5 Continuously Variable                                             CVT          #> 6 Automatic                                                         A            #> 7 Selectable Continuously Variable (e.g. CVT with paddles)          SCV          distinct(epa2021, drive_desc, drive_sys) #> # A tibble: 5 × 2 #>   drive_desc              drive_sys #>   <fct>                   <fct>     #> 1 All Wheel Drive         A         #> 2 2-Wheel Drive, Rear     R         #> 3 2-Wheel Drive, Front    F         #> 4 4-Wheel Drive           4         #> 5 Part-time 4-Wheel Drive P         distinct(epa2021, fuel_usage_desc, fuel_usage) #> # A tibble: 6 × 2 #>   fuel_usage_desc                            fuel_usage #>   <fct>                                      <fct>      #> 1 Gasoline (Premium Unleaded Required)       GPR        #> 2 Gasoline (Premium Unleaded Recommended)    GP         #> 3 Gasoline (Regular Unleaded Recommended)    G          #> 4 Gasoline (Mid Grade Unleaded Recommended)  GM         #> 5 Diesel, ultra low sulfur (15 ppm, maximum) DU         #> 6 Diesel, low sulfur (500 ppm)               D           # Guzzlers and their mileages ggplot(epa2021, aes(x = city_mpg, y = hwy_mpg, color = guzzler)) +   geom_point() +   facet_wrap(~guzzler, ncol = 1)   # Compare to 2012 epa2021 |>   bind_rows(epa2012) |>   group_by(model_yr) |>   summarise(     mean_city = mean(city_mpg),     mean_hwy  = mean(hwy_mpg)   ) #> # A tibble: 2 × 3 #>   model_yr mean_city mean_hwy #>      <dbl>     <dbl>    <dbl> #> 1     2012      19.4     26.4 #> 2     2021      20.9     27.3"},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental Sustainability Index 2005 — esi","title":"Environmental Sustainability Index 2005 — esi","text":"dataset comes 2005 Environmental Sustainability Index: Benchmarking National Environmental Stewardship.  Countries given overall sustainability score well scores several different environmental areas.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental Sustainability Index 2005 — esi","text":"","code":"esi"},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Environmental Sustainability Index 2005 — esi","text":"data frame 146 observations following 29 variables. code ISO3 country code. country Country. esi Environmental Sustainability Index. system ESI core component: systems stress ESI core component: stresses vulner ESI core component: vulnerability cap ESI core component: capacity global ESI core component: global stewardship sys_air Air quality. sys_bio Biodiversity. sys_lan Land. sys_wql Water quality. sys_wqn Water quantity. str_air Reducing air pollution. str_eco Reducing ecosystem stress. str_pop Reducing population pressure. str_was Reducing waste consumption pressures. str_wat Reducing water stress. str_nrm Natural resource management. vul_hea Environmental health. vul_sus Basic human sustenance. vul_dis Exposure natural disasters. cap_gov Environmental governance. cap_eff Eco-efficiency. cap_pri Private sector responsiveness. cap_st Science technology. glo_col Participation international collaboration efforts. glo_ghg Greenhouse gas emissions. glo_tbp Reducing transboundary environmental pressures.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Environmental Sustainability Index 2005 — esi","text":"ESI Component Indicators. 2005 Environmental Sustainability Index: Benchmarking National Environmental Stewardship, Yale Center Environmental Law Policy, Yale University & Center International Earth Science Information Network (CIESIN), Columbia University collaboration : World Economic Forum, Geneva, Switzerland Joint Research Centre European Commission, Ispra, Italy. Available https://www.earth.columbia.edu/news/2005/images/ESI2005_policysummary.pdf.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environmental Sustainability Index 2005 — esi","text":"ESI Component scores presented standard normal percentiles. Indicator scores form z-scores. See Appendix report information methodology Appendix C detail original data sources. information indices calculated, see documentation linked .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Environmental Sustainability Index 2005 — esi","text":"Esty, Daniel C., Marc Levy, Tanja Srebotnjak, Alexander de Sherbinin (2005). 2005 Environmental Sustainability Index: Benchmarking National Environmental Stewardship. New Haven: Yale Center Environmental Law Policy","code":""},{"path":"https://openintrostat.github.io/openintro/reference/esi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environmental Sustainability Index 2005 — esi","text":"","code":"library(ggplot2)  ggplot(esi, aes(x = cap_st, y = glo_col)) +   geom_point(color = ifelse(esi$code == \"USA\", \"red\", \"black\")) +   geom_text(     aes(label = ifelse(code == \"USA\", as.character(code), \"\")),     hjust = 1.2, color = \"red\"   ) +   labs(x = \"Science and technology\", y = \"Participation in international collaboration efforts\")   ggplot(esi, aes(x = vulner, y = cap)) +   geom_point(color = ifelse(esi$code == \"USA\", \"red\", \"black\")) +   geom_text(     aes(label = ifelse(code == \"USA\", as.character(code), \"\")),     hjust = 1.2, color = \"red\"   ) +   labs(x = \"Vulnerability\", y = \"Capacity\")"},{"path":"https://openintrostat.github.io/openintro/reference/ethanol.html","id":null,"dir":"Reference","previous_headings":"","what":"Ethanol Treatment for Tumors Experiment — ethanol","title":"Ethanol Treatment for Tumors Experiment — ethanol","text":"Experiment 3 different treatments ethanol tested treatment oral cancer tumors hamsters.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ethanol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ethanol Treatment for Tumors Experiment — ethanol","text":"","code":"ethanol"},{"path":"https://openintrostat.github.io/openintro/reference/ethanol.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ethanol Treatment for Tumors Experiment — ethanol","text":"data frame 24 observations, representing one hamster, following 2 variables. regress factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ethanol.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ethanol Treatment for Tumors Experiment — ethanol","text":"Morhard R, et al. 2017. Development enhanced ethanol ablation alternative surgery treatment superficial solid tumors. Scientific Reports 7:8750.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ethanol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ethanol Treatment for Tumors Experiment — ethanol","text":"ethyl_cellulose pure_ethanol treatments consisted quarter volume tumors, pure_ethanol_16x treatment 16x , 4 times size tumors.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ethanol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ethanol Treatment for Tumors Experiment — ethanol","text":"","code":"table(ethanol) #>                   regress #> treatment          no yes #>   ethyl_cellulose   1   6 #>   pure_ethanol      5   0 #>   pure_ethanol_16x  8   4 fisher.test(table(ethanol)) #>  #> \tFisher's Exact Test for Count Data #>  #> data:  table(ethanol) #> p-value = 0.008155 #> alternative hypothesis: two.sided #>"},{"path":"https://openintrostat.github.io/openintro/reference/evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Professor evaluations and beauty — evals","title":"Professor evaluations and beauty — evals","text":"data gathered end semester student evaluations 463 courses taught sample 94 professors University Texas Austin. addition, six students rate professors' physical appearance. result data frame row contains different course column information course professor taught course.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Professor evaluations and beauty — evals","text":"","code":"evals"},{"path":"https://openintrostat.github.io/openintro/reference/evals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Professor evaluations and beauty — evals","text":"data frame 463 observations following 23 variables. course_id Variable identifying course (463 courses). prof_id Variable identifying professor taught course (94 professors). score Average professor evaluation score: (1) unsatisfactory - (5) excellent. rank Rank professor: teaching, tenure track, tenured. ethnicity Ethnicity professor: minority, minority. gender Gender professor: female, male. language Language school professor received education: English non-English. age Age professor. cls_perc_eval Percent students class completed evaluation. cls_did_eval Number students class completed evaluation. cls_students Total number students class. cls_level Class level: lower, upper. cls_profs Number professors teaching sections course sample: single, multiple. cls_credits Number credits class: one credit (lab, PE, etc.), multi credit. bty_f1lower Beauty rating professor lower level female: (1) lowest - (10) highest. bty_f1upper Beauty rating professor upper level female: (1) lowest - (10) highest. bty_f2upper Beauty rating professor second level female: (1) lowest - (10) highest. bty_m1lower Beauty rating professor lower level male: (1) lowest - (10) highest. bty_m1upper Beauty rating professor upper level male: (1) lowest - (10) highest. bty_m2upper Beauty rating professor second upper level male: (1) lowest - (10) highest. bty_avg Average beauty rating professor. pic_outfit Outfit professor picture: formal, formal. pic_color Color professor's picture: color, black & white.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/evals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Professor evaluations and beauty — evals","text":"Daniel S. Hamermesh, Amy Parker, Beauty classroom: instructors’ pulchritude putative pedagogical productivity, Economics Education Review, Volume 24, Issue 4, 2005. doi:10.1016/j.econedurev.2004.07.013 .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/evals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Professor evaluations and beauty — evals","text":"","code":"evals #> # A tibble: 463 × 23 #>    course_id prof_id score rank    ethnicity gender language   age cls_perc_eval #>        <int>   <int> <dbl> <fct>   <fct>     <fct>  <fct>    <int>         <dbl> #>  1         1       1   4.7 tenure… minority  female english     36          55.8 #>  2         2       1   4.1 tenure… minority  female english     36          68.8 #>  3         3       1   3.9 tenure… minority  female english     36          60.8 #>  4         4       1   4.8 tenure… minority  female english     36          62.6 #>  5         5       2   4.6 tenured not mino… male   english     59          85   #>  6         6       2   4.3 tenured not mino… male   english     59          87.5 #>  7         7       2   2.8 tenured not mino… male   english     59          88.6 #>  8         8       3   4.1 tenured not mino… male   english     51         100   #>  9         9       3   3.4 tenured not mino… male   english     51          56.9 #> 10        10       4   4.5 tenured not mino… female english     40          87.0 #> # ℹ 453 more rows #> # ℹ 14 more variables: cls_did_eval <int>, cls_students <int>, cls_level <fct>, #> #   cls_profs <fct>, cls_credits <fct>, bty_f1lower <int>, bty_f1upper <int>, #> #   bty_f2upper <int>, bty_m1lower <int>, bty_m1upper <int>, bty_m2upper <int>, #> #   bty_avg <dbl>, pic_outfit <fct>, pic_color <fct>"},{"path":"https://openintrostat.github.io/openintro/reference/exam_grades.html","id":null,"dir":"Reference","previous_headings":"","what":"Exam and course grades for statistics students — exam_grades","title":"Exam and course grades for statistics students — exam_grades","text":"Grades three exams overall course grade 233 students several years statistics course university.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/exam_grades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exam and course grades for statistics students — exam_grades","text":"","code":"exam_grades"},{"path":"https://openintrostat.github.io/openintro/reference/exam_grades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exam and course grades for statistics students — exam_grades","text":"data frame 233 observations, representing student. semester Semester grades recorded. sex Sex student recorded university registration system: Man Woman. exam1 Exam 1 grade. exam2 Exam 2 grade. exam3 Exam 3 grade. course_grade Overall course grade.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/exam_grades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exam and course grades for statistics students — exam_grades","text":"","code":"library(ggplot2) library(dplyr)  # Course grade vs. each exam ggplot(exam_grades, aes(x = exam1, y = course_grade)) +   geom_point() #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`).   ggplot(exam_grades, aes(x = exam2, y = course_grade)) +   geom_point()   ggplot(exam_grades, aes(x = exam2, y = course_grade)) +   geom_point()   # Semester averages exam_grades |>   group_by(semester) |>   summarise(across(exam1:course_grade, mean, na.rm = TRUE)) #> Warning: There was 1 warning in `summarise()`. #> ℹ In argument: `across(exam1:course_grade, mean, na.rm = TRUE)`. #> ℹ In group 1: `semester = \"2000-1\"`. #> Caused by warning: #> ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0. #> Supply arguments directly to `.fns` through an anonymous function instead. #>  #>   # Previously #>   across(a:b, mean, na.rm = TRUE) #>  #>   # Now #>   across(a:b, \\(x) mean(x, na.rm = TRUE)) #> # A tibble: 6 × 5 #>   semester exam1 exam2 exam3 course_grade #>   <chr>    <dbl> <dbl> <dbl>        <dbl> #> 1 2000-1    73.8  76.2  76.8         72.3 #> 2 2000-2    75.5  71.2  68.0         70.6 #> 3 2001-1    87.0  75.1  78.1         76.7 #> 4 2001-2    82.9  67.5  67.2         69.0 #> 5 2002-1    82.1  76.3  84.9         72.3 #> 6 2003-1    85.7  67.8  77.1         72.3"},{"path":"https://openintrostat.github.io/openintro/reference/exams.html","id":null,"dir":"Reference","previous_headings":"","what":"Exam scores — exams","title":"Exam scores — exams","text":"Exam scores class 19 students.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/exams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exam scores — exams","text":"","code":"exams"},{"path":"https://openintrostat.github.io/openintro/reference/exams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exam scores — exams","text":"data frame 19 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/exams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exam scores — exams","text":"","code":"hist(exams$scores)"},{"path":"https://openintrostat.github.io/openintro/reference/exclusive_relationship.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Exclusive Relationships — exclusive_relationship","title":"Number of Exclusive Relationships — exclusive_relationship","text":"survey conducted reasonably random sample 203 undergraduates asked, among many questions, number exclusive relationships students .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/exclusive_relationship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Exclusive Relationships — exclusive_relationship","text":"","code":"exclusive_relationship"},{"path":"https://openintrostat.github.io/openintro/reference/exclusive_relationship.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of Exclusive Relationships — exclusive_relationship","text":"data frame 218 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/exclusive_relationship.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Exclusive Relationships — exclusive_relationship","text":"","code":"summary(exclusive_relationship$num) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   1.000   1.500   3.000   3.207   4.000  10.000      15  table(exclusive_relationship$num) #>  #>  1  2  3  4  5  6  7  8  9 10  #> 51 49  2 53 26 10  6  3  2  1  hist(exclusive_relationship$num)"},{"path":"https://openintrostat.github.io/openintro/reference/fact_opinion.html","id":null,"dir":"Reference","previous_headings":"","what":"Can Americans categorize facts and opinions? — fact_opinion","title":"Can Americans categorize facts and opinions? — fact_opinion","text":"Pew Research Center conducted survey 2018, asking sample U.S. adults categorize five factual five opinion statements. dataset provides data survey, information age group participant well number factual opinion statements classified correctly (5).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fact_opinion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Can Americans categorize facts and opinions? — fact_opinion","text":"","code":"fact_opinion"},{"path":"https://openintrostat.github.io/openintro/reference/fact_opinion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Can Americans categorize facts and opinions? — fact_opinion","text":"data frame 5,035 rows 3 variables. age_group Age group survey participant. fact_correct Number factual statements classified correctly (5). opinion_correct Number opinion statements classified correctly (5).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fact_opinion.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Can Americans categorize facts and opinions? — fact_opinion","text":"Younger Americans better older Americans telling factual news statements opinions, Pew Research Center, October 23, 2018.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fact_opinion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Can Americans categorize facts and opinions? — fact_opinion","text":"","code":"library(ggplot2) library(dplyr) library(tidyr) library(forcats)  # Distribution of fact_correct by age group ggplot(fact_opinion, aes(x = age_group, y = fact_correct)) +   geom_boxplot() +   labs(     x = \"Age group\",     y = \"Number correct (factual)\",     title = \"Number of factual statements classified correctly by age group\"   )   # Distribution of opinion_correct by age group ggplot(fact_opinion, aes(x = age_group, y = opinion_correct)) +   geom_boxplot() +   labs(     x = \"Age group\",     y = \"Number correct (opinion)\",     title = \"Number of opinion statements classified correctly by age group\"   )   # Replicating the figure from Pew report (see source for link) fact_opinion |>   mutate(     facts = case_when(       fact_correct <= 2 ~ \"Two or fewer\",       fact_correct %in% c(3, 4) ~ \"Three or four\",       fact_correct == 5 ~ \"All five\"     ),     facts = fct_relevel(facts, \"Two or fewer\", \"Three or four\", \"All five\"),     opinions = case_when(       opinion_correct <= 2 ~ \"Two or fewer\",       opinion_correct %in% c(3, 4) ~ \"Three or four\",       opinion_correct == 5 ~ \"All five\"     ),     opinions = fct_relevel(opinions, \"Two or fewer\", \"Three or four\", \"All five\")   ) |>   select(-fact_correct, -opinion_correct) |>   pivot_longer(cols = -age_group, names_to = \"question_type\", values_to = \"n_correct\") |>   ggplot(aes(y = fct_rev(age_group), fill = n_correct)) +   geom_bar(position = \"fill\") +   facet_wrap(~question_type, ncol = 1) +   scale_fill_viridis_d(guide = guide_legend(reverse = TRUE)) +   labs(     x = \"Proportion\",     y = \"Age group\",     fill = \"Number of\\ncorrect\\nclassifications\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/fadeColor.html","id":null,"dir":"Reference","previous_headings":"","what":"Fade colors — fadeColor","title":"Fade colors — fadeColor","text":"Fade colors transparent.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fadeColor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fade colors — fadeColor","text":"","code":"fadeColor(col, fade = \"FF\")"},{"path":"https://openintrostat.github.io/openintro/reference/fadeColor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fade colors — fadeColor","text":"col integer, color name, RGB hexadecimal. fade amount fade col. value character hexadecimal '00' 'FF'. smaller value, greater fading.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fadeColor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fade colors — fadeColor","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fadeColor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fade colors — fadeColor","text":"","code":"data(mariokart) new <- mariokart$cond == \"new\" used <- mariokart$cond == \"used\"  # ===> color numbers <===# dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80), pch = 20,   col = 2, cex = 2, main = \"using regular colors\" ) dotPlot(mariokart$total_pr[used], at = 2, add = TRUE, col = 4, pch = 20, cex = 2)  dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80),   col = fadeColor(2, \"22\"), pch = 20, cex = 2,   main = \"fading the colors first\" ) dotPlot(mariokart$total_pr[used],   at = 2, add = TRUE,   col = fadeColor(4, \"22\"), pch = 20, cex = 2 )   # ===> color names <===# dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80), pch = 20,   col = \"red\", cex = 2, main = \"using regular colors\" ) dotPlot(mariokart$total_pr[used], at = 2, add = TRUE, col = \"blue\", pch = 20, cex = 2)  dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80),   col = fadeColor(\"red\", \"22\"), pch = 20, cex = 2,   main = \"fading the colors first\" ) dotPlot(mariokart$total_pr[used],   at = 2, add = TRUE,   col = fadeColor(\"blue\", \"22\"), pch = 20, cex = 2 )   # ===> hexadecimal <===# dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80), pch = 20,   col = \"#FF0000\", cex = 2, main = \"using regular colors\" ) dotPlot(mariokart$total_pr[used],   at = 2, add = TRUE, col = \"#0000FF\", pch = 20,   cex = 2 )  dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80),   col = fadeColor(\"#FF0000\", \"22\"), pch = 20, cex = 2,   main = \"fading the colors first\" ) dotPlot(mariokart$total_pr[used],   at = 2, add = TRUE,   col = fadeColor(\"#0000FF\", \"22\"), pch = 20, cex = 2 )   # ===> alternative: rgb function <===# dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80), pch = 20,   col = rgb(1, 0, 0), cex = 2, main = \"using regular colors\" ) dotPlot(mariokart$total_pr[used],   at = 2, add = TRUE, col = rgb(0, 0, 1),   pch = 20, cex = 2 )  dotPlot(mariokart$total_pr[new],   ylim = c(0, 3), xlim = c(25, 80),   col = rgb(1, 0, 0, 1 / 8), pch = 20, cex = 2,   main = \"fading the colors first\" ) dotPlot(mariokart$total_pr[used],   at = 2, add = TRUE,   col = rgb(0, 0, 1, 1 / 8), pch = 20, cex = 2 )"},{"path":"https://openintrostat.github.io/openintro/reference/family_college.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated sample of parent / teen college attendance — family_college","title":"Simulated sample of parent / teen college attendance — family_college","text":"simulated dataset based real population summaries.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/family_college.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated sample of parent / teen college attendance — family_college","text":"","code":"family_college"},{"path":"https://openintrostat.github.io/openintro/reference/family_college.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated sample of parent / teen college attendance — family_college","text":"data frame 792 observations following 2 variables. teen Whether teen goes college . parents Whether parent holds college degree .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/family_college.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated sample of parent / teen college attendance — family_college","text":"Simulation based summary information provided https://eric.ed.gov/?id=ED460660.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/family_college.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated sample of parent / teen college attendance — family_college","text":"","code":"library(dplyr)  family_college |>   count(teen, parents) #> # A tibble: 4 × 3 #>   teen    parents     n #>   <fct>   <fct>   <int> #> 1 college degree    231 #> 2 college not       214 #> 3 not     degree     49 #> 4 not     not       298"},{"path":"https://openintrostat.github.io/openintro/reference/fastfood.html","id":null,"dir":"Reference","previous_headings":"","what":"Nutrition in fast food — fastfood","title":"Nutrition in fast food — fastfood","text":"Nutrition amounts 515 fast food items.  author data scraped entrees (sides, drinks, desserts, etc.).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fastfood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nutrition in fast food — fastfood","text":"","code":"fastfood"},{"path":"https://openintrostat.github.io/openintro/reference/fastfood.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Nutrition in fast food — fastfood","text":"data frame 515 observations following 17 variables. restaurant Name restaurant item Name item calories Number calories cal_fat Calories fat total_fat Total fat sat_fat Saturated fat trans_fat Trans fat cholesterol Cholesterol sodium Sodium total_carb Total carbs fiber Fiber sugar Suger protein Protein vit_a Vitamin vit_c Vitamin C calcium Calcium salad Salad ","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fastfood.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Nutrition in fast food — fastfood","text":"Retrieved Tidy Tuesday Fast food entree data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fcid.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of male heights from USDA Food Commodity Intake Database — fcid","title":"Summary of male heights from USDA Food Commodity Intake Database — fcid","text":"Sample heights based weighted sample survey.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of male heights from USDA Food Commodity Intake Database — fcid","text":"","code":"fcid"},{"path":"https://openintrostat.github.io/openintro/reference/fcid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary of male heights from USDA Food Commodity Intake Database — fcid","text":"data frame 100 observations following 2 variables. num_of_adults numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fcid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of male heights from USDA Food Commodity Intake Database — fcid","text":"","code":"fcid #> # A tibble: 100 × 2 #>    height num_of_adults #>     <dbl>         <int> #>  1   110.             0 #>  2   112.             0 #>  3   112.             0 #>  4   114.             0 #>  5   114.             0 #>  6   116.             0 #>  7   116.             1 #>  8   118.             2 #>  9   118.            22 #> 10   120.            86 #> # ℹ 90 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/fheights.html","id":null,"dir":"Reference","previous_headings":"","what":"Female college student heights, in inches — fheights","title":"Female college student heights, in inches — fheights","text":"24 sample observations.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fheights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female college student heights, in inches — fheights","text":"","code":"fheights"},{"path":"https://openintrostat.github.io/openintro/reference/fheights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female college student heights, in inches — fheights","text":"data frame 24 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fheights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Female college student heights, in inches — fheights","text":"","code":"hist(fheights$heights)"},{"path":"https://openintrostat.github.io/openintro/reference/fish_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Young fish in the North Sea. — fish_age","title":"Young fish in the North Sea. — fish_age","text":"Samples 50 Tobis fish, Sand Eels, collected three different locations North Sea number one-year-old fish counted.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fish_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Young fish in the North Sea. — fish_age","text":"","code":"fish_age"},{"path":"https://openintrostat.github.io/openintro/reference/fish_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Young fish in the North Sea. — fish_age","text":"data frame 300 rows 3 variables: year Year fish caught levels 1997 1998. location Site fish caught levels , B C. one_year_old fish one-year-old, yes ?","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fish_age.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Young fish in the North Sea. — fish_age","text":"Henrik Madsen, Paul Thyregod. 2011. Introduction General Generalized Linear Models CRC Press. Boca Raton, FL. ISBN: 978-1-4200-9155-7 Website","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fish_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Young fish in the North Sea. — fish_age","text":"","code":"library(dplyr) library(tidyr)  # Count the number of one-year-old fish at each location.  fish_age |>   filter(one_year_old == \"yes\") |>   count(year, location) |>   pivot_wider(names_from = location, values_from = n) #> # A tibble: 2 × 4 #>    year     A     B     C #>   <dbl> <int> <int> <int> #> 1  1997     9     9     2 #> 2  1998    38    30    15"},{"path":"https://openintrostat.github.io/openintro/reference/fish_oil_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Findings on n-3 Fatty Acid Supplement Health Benefits — fish_oil_18","title":"Findings on n-3 Fatty Acid Supplement Health Benefits — fish_oil_18","text":"results summarize health outcomes experiment 12,933 subjects received 1g fish oil supplement daily 12,938 received placebo daily.  experiment's duration 5-years.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fish_oil_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Findings on n-3 Fatty Acid Supplement Health Benefits — fish_oil_18","text":"","code":"fish_oil_18"},{"path":"https://openintrostat.github.io/openintro/reference/fish_oil_18.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Findings on n-3 Fatty Acid Supplement Health Benefits — fish_oil_18","text":"format list 24 matrices.  matrix 2x2 table, named items list, also represent outcomes. major_cardio_event Major cardiovascular event. (Primary end point.) cardio_event_expanded Cardiovascular event expanded composite endpoint. myocardioal_infarction Total myocardial infarction. (Heart attack.) stroke Total stroke. cardio_death Death cardiovascular causes. PCI Percutaneous coronary intervention. CABG Coronary artery bypass graft. total_coronary_heart_disease Total coronary heart disease. ischemic_stroke Ischemic stroke. hemorrhagic_stroke Hemorrhagic stroke. chd_death Death coronary heart disease. myocardial_infarction_death Death myocardial infraction. stroke_death Death stroke. invasive_cancer Invasive cancer type. (Primary end point.) breast_cancer Breast cancer. prostate_cancer Prostate cancer. colorectal_cancer Colorectal cancer. cancer_death Death cancer. death Death cause. major_cardio_event_after_2y Major cardiovascular event, excluding first 2 years follow-. myocardial_infarction_after_2y Total myocardial infarction, excluding first 2 years follow-. invasive_cancer_after_2y Invasive cancer type, excluding first 2 years follow-. cancer_death_after_2y Death cancer, excluding first 2 years follow-. death_after_2y Death cause, excluding first 2 years follow-.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fish_oil_18.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Findings on n-3 Fatty Acid Supplement Health Benefits — fish_oil_18","text":"Manson JE, et al. 2018. Marine n-3 Fatty Acids Prevention Cardiovascular Disease Cancer. NEJMoa1811403. doi:10.1056/NEJMoa1811403 .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/fish_oil_18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Findings on n-3 Fatty Acid Supplement Health Benefits — fish_oil_18","text":"","code":"names(fish_oil_18) #>  [1] \"major_cardio_event\"             \"cardio_event_expanded\"          #>  [3] \"myocardioal_infarction\"         \"stroke\"                         #>  [5] \"cardio_death\"                   \"PCI\"                            #>  [7] \"CABG\"                           \"total_coronary_heart_disease\"   #>  [9] \"ischemic_stroke\"                \"hemorrhagic_stroke\"             #> [11] \"chd_death\"                      \"myocardial_infarction_death\"    #> [13] \"stroke_death\"                   \"invasive_cancer\"                #> [15] \"breast_cancer\"                  \"prostate_cancer\"                #> [17] \"colorectal_cancer\"              \"cancer_death\"                   #> [19] \"death\"                          \"major_cardio_event_after_2y\"    #> [21] \"myocardial_infarction_after_2y\" \"invasive_cancer_after_2y\"       #> [23] \"cancer_death_after_2y\"          \"death_after_2y\"                 (tab <- fish_oil_18[[\"major_cardio_event\"]]) #>          major_cardio_event no_event #> fish_oil                386    12547 #> placebo                 419    12519 chisq.test(tab) #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  tab #> X-squared = 1.3002, df = 1, p-value = 0.2542 #>  fisher.test(tab) #>  #> \tFisher's Exact Test for Count Data #>  #> data:  tab #> p-value = 0.2519 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.7965891 1.0604375 #> sample estimates: #> odds ratio  #>  0.9192056  #>   (tab <- fish_oil_18[[\"myocardioal_infarction\"]]) #>          myocardioal_infarction no_event #> fish_oil                    145    12788 #> placebo                     200    12738 chisq.test(tab) #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  tab #> X-squared = 8.5453, df = 1, p-value = 0.003464 #>  fisher.test(tab) #>  #> \tFisher's Exact Test for Count Data #>  #> data:  tab #> p-value = 0.003367 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.5782874 0.9001205 #> sample estimates: #> odds ratio  #>  0.7221774  #>"},{"path":"https://openintrostat.github.io/openintro/reference/flow_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"River flow data — flow_rates","title":"River flow data — flow_rates","text":"Flow rates (mesured cubic feet per second) Clarks Creek, Leach Creek, Silver Creek, Wildwood Creek Spring collected volunteers Pierce Conservation District State Washington US.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/flow_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"River flow data — flow_rates","text":"","code":"flow_rates"},{"path":"https://openintrostat.github.io/openintro/reference/flow_rates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"River flow data — flow_rates","text":"data frame 31 rows 3 variables. site Location measurements taken. date Date measurements taken. flow Flow rate river cubic feet per second.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/flow_rates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"River flow data — flow_rates","text":"Pierce County Water Data Viewer.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/flow_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"River flow data — flow_rates","text":"","code":"library(ggplot2)  # River flow rates by site ggplot(flow_rates, aes(x = site, y = flow)) +   geom_boxplot() +   labs(     title = \"River flow rates by site\",     x = \"Site\",     y = expression(paste(\"Flow (ft\"^3 * \"/s)\"))   )   # River flow rates over time ggplot(flow_rates, aes(x = date, y = flow, color = site, shape = site)) +   geom_point(size = 2) +   labs(     title = \"River flow rates over time\",     x = \"Date\",     y = expression(paste(\"Flow (ft\"^3 * \"/s)\")),     color = \"Site\", shape = \"Site\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/friday.html","id":null,"dir":"Reference","previous_headings":"","what":"Friday the 13th — friday","title":"Friday the 13th — friday","text":"dataset addresses issues superstitions regarding Friday 13th affect human behavior, whether Friday 13th unlucky day. Scanlon, et al. collected data traffic shopping patterns accident frequency Fridays 6th 13th October 1989 November 1992.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/friday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Friday the 13th — friday","text":"","code":"friday"},{"path":"https://openintrostat.github.io/openintro/reference/friday.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Friday the 13th — friday","text":"data frame 61 observations 6 variables. type Type observation, traffic, shopping, accident. date Year month observation. sixth Counts 6th month. thirteenth Counts 13th month. diff Difference sixth thirteenth. location Location data collected.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/friday.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Friday the 13th — friday","text":"Scanlon, T.J., Luben, R.N., Scanlon, F.L., Singleton, N. (1993), \"Friday 13th Bad Health?,\" BMJ, 307, 1584-1586. https://dasl.datadescription.com/datafile/friday--13th-traffic https://dasl.datadescription.com/datafile/friday--13th-accidents.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/friday.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Friday the 13th — friday","text":"three types observations: traffic, shopping, accident. traffic, researchers obtained information British Department Transport regarding traffic flows junctions 7 8 junctions 9 10 M25 motorway. shopping, collected numbers shoppers nine different supermarkets southeast England. accidents, collected numbers emergency admissions hospitals due transport accidents.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/friday.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Friday the 13th — friday","text":"","code":"library(dplyr) library(ggplot2)  friday |>   filter(type == \"traffic\") |>   ggplot(aes(x = sixth)) +   geom_histogram(binwidth = 2000) +   xlim(110000, 140000) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_bar()`).   friday |>   filter(type == \"traffic\") |>   ggplot(aes(x = thirteenth)) +   geom_histogram(binwidth = 2000) +   xlim(110000, 140000) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_bar()`)."},{"path":"https://openintrostat.github.io/openintro/reference/full_body_scan.html","id":null,"dir":"Reference","previous_headings":"","what":"Poll about use of full-body airport scanners — full_body_scan","title":"Poll about use of full-body airport scanners — full_body_scan","text":"Poll use full-body airport scanners, 4--5 people supported use scanners.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/full_body_scan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poll about use of full-body airport scanners — full_body_scan","text":"","code":"full_body_scan"},{"path":"https://openintrostat.github.io/openintro/reference/full_body_scan.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Poll about use of full-body airport scanners — full_body_scan","text":"data frame 1137 observations following 2 variables. party.affiliation factor levels Democrat Independent Republican","code":""},{"path":"https://openintrostat.github.io/openintro/reference/full_body_scan.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Poll about use of full-body airport scanners — full_body_scan","text":"S. Condon. Poll: 4 5 Support Full-Body Airport Scanners. : CBS News (2010).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/full_body_scan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Poll about use of full-body airport scanners — full_body_scan","text":"","code":"full_body_scan #> # A tibble: 1,137 × 2 #>    answer party_affiliation #>    <fct>  <fct>             #>  1 should Republican        #>  2 should Republican        #>  3 should Republican        #>  4 should Republican        #>  5 should Republican        #>  6 should Republican        #>  7 should Republican        #>  8 should Republican        #>  9 should Republican        #> 10 should Republican        #> # ℹ 1,127 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gdp_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"GDP Countries Data. — gdp_countries","title":"GDP Countries Data. — gdp_countries","text":"World Bank, GDP current U.S. dollars 1960-2020 decade","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gdp_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDP Countries Data. — gdp_countries","text":"","code":"gdp_countries"},{"path":"https://openintrostat.github.io/openintro/reference/gdp_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GDP Countries Data. — gdp_countries","text":"data frame 659 rows 9 variables. country Name country. description description data: GDP (current US$), GDP growth (annual %), GDP per capita (current US$) year_1960 value 1960 year_1970 value 1970 year_1980 value 1980 year_1990 value 1990 year_2000 value 2000 year_2010 value 2010 year_2020 value 2020","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gdp_countries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GDP Countries Data. — gdp_countries","text":"World Bank","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gdp_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDP Countries Data. — gdp_countries","text":"","code":"library(dplyr) # don't use scientific notation options(scipen = 999) # List the top 10 countries by GDP (There is a row for World) gdp_countries |>   filter(description == \"GDP\") |>   mutate(year2020 = format(year_2020, big.mark = \",\")) |>   select(country, year2020) |>   arrange(desc(year2020)) |>   top_n(n = 11) #> Selecting by year2020 #>               country           year2020 #> 1               World 84,705,400,000,000 #> 2       United States 20,936,600,000,000 #> 3               China 14,722,700,000,000 #> 4             Germany  3,806,060,000,000 #> 5      United Kingdom  2,707,740,000,000 #> 6               India  2,622,980,000,000 #> 7              France  2,603,000,000,000 #> 8               Italy  1,886,450,000,000 #> 9              Canada  1,643,410,000,000 #> 10        Korea, Rep.  1,630,530,000,000 #> 11 Russian Federation  1,483,500,000,000  # List the 10 countries with the biggest GDP per capita change from 1960 to 2020 gdp_countries |>   filter(description == \"GDP per capita\") |>   mutate(change = format(round(year_2020 - year_1960, 0), big.mark = \",\")) |>   select(country, change, year_1960, year_2020) |>   na.omit() |>   arrange(desc(change)) |>   top_n(n = 10) #> Selecting by year_2020 #>          country  change year_1960 year_2020 #> 1     Luxembourg 113,632 2242.0158 115873.60 #> 2    Switzerland  84,814 1787.3603  86601.56 #> 3        Ireland  83,127  685.6147  83812.80 #> 4         Norway  65,853 1441.7557  67294.48 #> 5  United States  60,536 3007.1234  63543.58 #> 6      Singapore  59,370  428.0590  59797.75 #> 7        Iceland  57,846 1414.9823  59260.89 #> 8    Netherlands  51,235 1068.7846  52304.06 #> 9      Australia  50,004 1807.7857  51812.15 #> 10        Sweden  49,812 2114.0030  51925.71"},{"path":"https://openintrostat.github.io/openintro/reference/gear_company.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake data for a gear company example — gear_company","title":"Fake data for a gear company example — gear_company","text":"Made-data whether sample two gear companies' parts pass inspection.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gear_company.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake data for a gear company example — gear_company","text":"","code":"gear_company"},{"path":"https://openintrostat.github.io/openintro/reference/gear_company.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake data for a gear company example — gear_company","text":"data frame 2000 observations following 2 variables. outcome factor levels pass","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gear_company.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fake data for a gear company example — gear_company","text":"","code":"gear_company #> # A tibble: 2,000 × 2 #>    company outcome #>    <fct>   <fct>   #>  1 current pass    #>  2 current pass    #>  3 current pass    #>  4 current pass    #>  5 current pass    #>  6 current pass    #>  7 current pass    #>  8 current pass    #>  9 current pass    #> 10 current pass    #> # ℹ 1,990 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gender_discrimination.html","id":null,"dir":"Reference","previous_headings":"","what":"Bank manager recommendations based on gender — gender_discrimination","title":"Bank manager recommendations based on gender — gender_discrimination","text":"Study 1970s whether gender influences hiring recommendations.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gender_discrimination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bank manager recommendations based on gender — gender_discrimination","text":"","code":"gender_discrimination"},{"path":"https://openintrostat.github.io/openintro/reference/gender_discrimination.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bank manager recommendations based on gender — gender_discrimination","text":"data frame 48 observations following 2 variables. gender factor levels female male decision factor levels promoted promoted","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gender_discrimination.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bank manager recommendations based on gender — gender_discrimination","text":"Rosen B Jerdee T. 1974. Influence sex role stereotypes personnel decisions. Journal Applied Psychology 59(1):9-14.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gender_discrimination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bank manager recommendations based on gender — gender_discrimination","text":"","code":"library(ggplot2)  table(gender_discrimination) #>         decision #> gender   promoted not promoted #>   male         21            3 #>   female       14           10  ggplot(gender_discrimination, aes(y = gender, fill = decision)) +   geom_bar(position = \"fill\")"},{"path":"https://openintrostat.github.io/openintro/reference/get_it_dunn_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Get it Dunn Run, Race Times — get_it_dunn_run","title":"Get it Dunn Run, Race Times — get_it_dunn_run","text":"Get Dunn small regional run got extra attention runner, Nichole Porath, made Guiness Book World Records fastest time pushing double stroller half marathon. dataset contains results 2017 2018 races.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/get_it_dunn_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get it Dunn Run, Race Times — get_it_dunn_run","text":"","code":"get_it_dunn_run"},{"path":"https://openintrostat.github.io/openintro/reference/get_it_dunn_run.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get it Dunn Run, Race Times — get_it_dunn_run","text":"data frame 978 observations following 10 variables. date Date run. race Run distance. bib_num Bib number runner. first_name First name runner. last_initial Initial runner's last name. sex Sex runner. age Age runner. city City residence. state State residence. run_time_minutes Run time, minutes.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/get_it_dunn_run.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get it Dunn Run, Race Times — get_it_dunn_run","text":"Data collected GSE Timing: 2018 data, 2017 race data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/get_it_dunn_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get it Dunn Run, Race Times — get_it_dunn_run","text":"","code":"d <- subset(   get_it_dunn_run,   race == \"5k\" & date == \"2018-05-12\" &     !is.na(age) & state %in% c(\"MN\", \"WI\") ) head(d) #> # A tibble: 6 × 10 #>   date       race  bib_num first_name last_initial sex     age city      state #>   <chr>      <chr>   <int> <chr>      <chr>        <chr> <dbl> <chr>     <chr> #> 1 2018-05-12 5k          1 Jeff       A            M        59 MENOMONIE WI    #> 2 2018-05-12 5k          2 Julie      A            F        58 Menomonie WI    #> 3 2018-05-12 5k          3 Amy        A            F        31 Elmwood   WI    #> 4 2018-05-12 5k          4 Ashley     A            F        33 Cadott    WI    #> 5 2018-05-12 5k          6 Bob        A            M        60 Boyd      WI    #> 6 2018-05-12 5k          7 Eric       A            M        30 Boyd      WI    #> # ℹ 1 more variable: run_time_minutes <dbl> m <- lm(run_time_minutes ~ sex + age + state, d) summary(m) #>  #> Call: #> lm(formula = run_time_minutes ~ sex + age + state, data = d) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -18.109  -8.470  -2.064   7.760  31.646  #>  #> Coefficients: #>             Estimate Std. Error t value             Pr(>|t|)     #> (Intercept) 38.94177    2.61812  14.874 < 0.0000000000000002 *** #> sexM        -5.36736    1.13188  -4.742           0.00000298 *** #> age          0.11232    0.03148   3.569             0.000404 *** #> stateWI     -1.13071    2.33534  -0.484             0.628534     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 10.77 on 389 degrees of freedom #> Multiple R-squared:  0.09101,\tAdjusted R-squared:  0.084  #> F-statistic: 12.98 on 3 and 389 DF,  p-value: 0.00000004246 #>  plot(m$fitted, m$residuals)  boxplot(m$residuals ~ d$sex)  plot(m$residuals ~ d$age)  hist(m$residuals)"},{"path":"https://openintrostat.github.io/openintro/reference/gifted.html","id":null,"dir":"Reference","previous_headings":"","what":"Analytical skills of young gifted children — gifted","title":"Analytical skills of young gifted children — gifted","text":"investigator interested understanding relationship, , analytical skills young gifted children following variables: father's IQ, mother's IQ, age month child first said \"mummy\" \"daddy\", age month child first counted 10 successfully, average number hours per week child's mother father reads child, average number hours per week child watched educational program TV past three months, average number hours per week child watched cartoons TV past three months. analytical skills evaluated using standard testing procedure, score test used response variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gifted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analytical skills of young gifted children — gifted","text":"","code":"gifted"},{"path":"https://openintrostat.github.io/openintro/reference/gifted.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Analytical skills of young gifted children — gifted","text":"data frame 36 observations 8 variables. score Score test analytical skills. fatheriq Father's IQ. motheriq Mother's IQ. speak Age months child first said \"mummy\" \"daddy\". count Age months child first counted 10 successfully. read Average number hours per week child's mother father reads child. edutv Average number hours per week child watched educational program TV past three months. cartoons Average number hours per week child watched cartoons TV past three months.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gifted.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Analytical skills of young gifted children — gifted","text":"Graybill, F.. & Iyer, H.K., (1994) Regression Analysis: Concepts Applications, Duxbury, p. 511-6.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gifted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analytical skills of young gifted children — gifted","text":"Data collected schools large city set thirty-six children identified gifted children soon reached age four.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gifted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analytical skills of young gifted children — gifted","text":"","code":"gifted #> # A tibble: 36 × 8 #>    score fatheriq motheriq speak count  read edutv cartoons #>    <int>    <int>    <int> <int> <int> <dbl> <dbl>    <dbl> #>  1   159      115      117    18    26   1.9  3        2    #>  2   164      117      113    20    37   2.5  1.75     3.25 #>  3   154      115      118    20    32   2.2  2.75     2.5  #>  4   157      113      131    12    24   1.7  2.75     2.25 #>  5   156      110      109    17    34   2.2  2.25     2.5  #>  6   150      113      109    13    28   1.9  1.25     3.75 #>  7   155      118      119    19    24   1.8  2        3    #>  8   161      117      120    18    32   2.3  2.25     2.5  #>  9   163      111      128    22    28   2.1  1        4    #> 10   162      122      120    18    27   2.1  2.25     2.75 #> # ℹ 26 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/global_warming_pew.html","id":null,"dir":"Reference","previous_headings":"","what":"Pew survey on global warming — global_warming_pew","title":"Pew survey on global warming — global_warming_pew","text":"2010 Pew Research poll asked 1,306 Americans, \"read heard, solid evidence average temperature earth getting warmer past decades, ?\"","code":""},{"path":"https://openintrostat.github.io/openintro/reference/global_warming_pew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pew survey on global warming — global_warming_pew","text":"","code":"global_warming_pew"},{"path":"https://openintrostat.github.io/openintro/reference/global_warming_pew.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pew survey on global warming — global_warming_pew","text":"data frame 2253 observations following 2 variables. response Response.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/global_warming_pew.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pew survey on global warming — global_warming_pew","text":"Pew Research Center, Majority Republicans Longer See Evidence Global Warming, data collected October 27, 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/global_warming_pew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pew survey on global warming — global_warming_pew","text":"","code":"global_warming_pew #> # A tibble: 2,253 × 2 #>    party_or_ideology       response         #>    <fct>                   <fct>            #>  1 Conservative Republican Earth is warming #>  2 Conservative Republican Earth is warming #>  3 Conservative Republican Earth is warming #>  4 Conservative Republican Earth is warming #>  5 Conservative Republican Earth is warming #>  6 Conservative Republican Earth is warming #>  7 Conservative Republican Earth is warming #>  8 Conservative Republican Earth is warming #>  9 Conservative Republican Earth is warming #> 10 Conservative Republican Earth is warming #> # ℹ 2,243 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/goog.html","id":null,"dir":"Reference","previous_headings":"","what":"Google stock data — goog","title":"Google stock data — goog","text":"Google stock data 2006 early 2014, data first day month collected.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/goog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google stock data — goog","text":"","code":"goog"},{"path":"https://openintrostat.github.io/openintro/reference/goog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Google stock data — goog","text":"data frame 98 observations following 7 variables. date factor levels 2006-01-03, 2006-02-01, open numeric vector high numeric vector low numeric vector close numeric vector volume numeric vector adj_close numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/goog.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Google stock data — goog","text":"Yahoo! Finance.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/goog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google stock data — goog","text":"","code":"goog #> # A tibble: 98 × 7 #>    date        open  high   low close  volume adj_close #>    <fct>      <dbl> <dbl> <dbl> <dbl>   <int>     <dbl> #>  1 2014-02-03 1179. 1213. 1128. 1204. 2409900     1204. #>  2 2014-01-02 1115. 1187. 1082. 1181. 2860800     1181. #>  3 2013-12-02 1064. 1121  1049. 1121. 1675400     1121. #>  4 2013-11-01 1032. 1068  1005  1060. 1372400     1060. #>  5 2013-10-01  880. 1042.  843. 1031. 2472300     1031. #>  6 2013-09-03  854.  906.  854.  876. 1742200      876. #>  7 2013-08-01  895   910.  846.  847. 1606700      847. #>  8 2013-07-01  886.  928   876.  888. 2428100      888. #>  9 2013-06-03  873   911.  847.  880. 2546400      880. #> 10 2013-05-01  823.  921.  816.  871. 2335700      871. #> # ℹ 88 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gov_poll.html","id":null,"dir":"Reference","previous_headings":"","what":"Pew Research poll on government approval ratings — gov_poll","title":"Pew Research poll on government approval ratings — gov_poll","text":"poll's focus Obama Democrats Republicans Congress.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gov_poll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pew Research poll on government approval ratings — gov_poll","text":"","code":"gov_poll"},{"path":"https://openintrostat.github.io/openintro/reference/gov_poll.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pew Research poll on government approval ratings — gov_poll","text":"data frame 4223 observations following 2 variables. eval factor levels Democrats Obama Republicans","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gov_poll.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pew Research poll on government approval ratings — gov_poll","text":"See Pew Research website: www.people-press.org/2012/03/14/romney-leads-gop-contest-trails-- matchup--obama. counts Table 6.19 approximate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gov_poll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pew Research poll on government approval ratings — gov_poll","text":"","code":"gov_poll #> # A tibble: 4,223 × 2 #>    poll    eval  #>    <fct>   <fct> #>  1 approve Obama #>  2 approve Obama #>  3 approve Obama #>  4 approve Obama #>  5 approve Obama #>  6 approve Obama #>  7 approve Obama #>  8 approve Obama #>  9 approve Obama #> 10 approve Obama #> # ℹ 4,213 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gpa.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey of Duke students on GPA, studying, and more — gpa","title":"Survey of Duke students on GPA, studying, and more — gpa","text":"survey 55 Duke University students asked GPA, number hours study night, number nights go , gender.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey of Duke students on GPA, studying, and more — gpa","text":"","code":"gpa"},{"path":"https://openintrostat.github.io/openintro/reference/gpa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey of Duke students on GPA, studying, and more — gpa","text":"data frame 55 observations following 5 variables. studyweek numeric vector sleepnight numeric vector numeric vector gender factor levels female male","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey of Duke students on GPA, studying, and more — gpa","text":"","code":"gpa #> # A tibble: 55 × 5 #>      gpa studyweek sleepnight   out gender #>    <dbl>     <int>      <dbl> <dbl> <fct>  #>  1  3.89        50          6     3 female #>  2  3.9         15          6     1 female #>  3  3.75        15          7     1 female #>  4  3.6         10          6     4 male   #>  5  4           25          7     3 female #>  6  3.15        20          7     3 male   #>  7  3.25        15          6     1 female #>  8  3.92        10          8     3 female #>  9  3.43        12          8     2 female #> 10  3.8          2          8     4 male   #> # ℹ 45 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gpa_iq.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of students and their GPA and IQ — gpa_iq","title":"Sample of students and their GPA and IQ — gpa_iq","text":"Data 78 students including GPA, IQ, gender.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa_iq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of students and their GPA and IQ — gpa_iq","text":"","code":"gpa_iq"},{"path":"https://openintrostat.github.io/openintro/reference/gpa_iq.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of students and their GPA and IQ — gpa_iq","text":"data frame 78 observations representing students following 5 variables. gpa Grade point average (GPA). iq IQ. gender Gender. concept numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa_iq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of students and their GPA and IQ — gpa_iq","text":"","code":"gpa_iq #> # A tibble: 78 × 5 #>      obs   gpa    iq gender concept #>    <int> <dbl> <int>  <int>   <int> #>  1     1  7.94   111      2      67 #>  2     2  8.29   107      2      43 #>  3     3  4.64   100      2      52 #>  4     4  7.47   107      2      66 #>  5     5  8.88   114      1      58 #>  6     6  7.58   115      2      51 #>  7     7  7.65   111      2      71 #>  8     8  2.41    97      2      51 #>  9     9  6      100      1      49 #> 10    10  8.83   112      2      51 #> # ℹ 68 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gpa_study_hours.html","id":null,"dir":"Reference","previous_headings":"","what":"gpa_study_hours — gpa_study_hours","title":"gpa_study_hours — gpa_study_hours","text":"data frame 193 rows 2 columns. columns represent variables gpa study_hours sample 193 undergraduate students took introductory statistics course 2012 private US university.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa_study_hours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gpa_study_hours — gpa_study_hours","text":"","code":"gpa_study_hours"},{"path":"https://openintrostat.github.io/openintro/reference/gpa_study_hours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gpa_study_hours — gpa_study_hours","text":"data frame 193 observations following 2 variables. gpa Grade point average (GPA) student. study_hours Number hours students study per week.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa_study_hours.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"gpa_study_hours — gpa_study_hours","text":"Collected private US university part anonymous survey introductory statistics course.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa_study_hours.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gpa_study_hours — gpa_study_hours","text":"GPA ranges 0 4 points, however one student reported GPA > 4. data error observation left dataset used illustrate issues real survey data. variables self reported, hence may accurate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gpa_study_hours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gpa_study_hours — gpa_study_hours","text":"","code":"library(ggplot2)  ggplot(gpa_study_hours, aes(x = study_hours, y = gpa)) +   geom_point(alpha = 0.5) +   labs(x = \"Study hours/week\", y = \"GPA\")"},{"path":"https://openintrostat.github.io/openintro/reference/gradestv.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","title":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","text":"simulated dataset used estimate relationship number hours per week students watch TV grade got statistics class.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gradestv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","text":"","code":"gradestv"},{"path":"https://openintrostat.github.io/openintro/reference/gradestv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","text":"data frame 25 observations following 2 variables. tv Number hours per week students watch TV. grades Grades students got statistics class (100).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gradestv.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","text":"Simulated data","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gradestv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","text":"potential outliers dataset. analyzing data one consider () outliers may affect estimates correlation coefficient regression parameters.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gradestv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated data for analyzing the relationship between watching TV and grades — gradestv","text":"","code":"library(ggplot2)  ggplot(gradestv, aes(x = tv, y = grades)) +   geom_point() +   geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://openintrostat.github.io/openintro/reference/gsearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Google search experiment — gsearch","title":"Simulated Google search experiment — gsearch","text":"data simulated look like sample results Google search experiment.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gsearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Google search experiment — gsearch","text":"","code":"gsearch"},{"path":"https://openintrostat.github.io/openintro/reference/gsearch.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Google search experiment — gsearch","text":"data frame 10000 observations following 2 variables. type factor levels new search new search outcome factor levels current test 1 test 2","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gsearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Google search experiment — gsearch","text":"","code":"library(ggplot2)  table(gsearch$type, gsearch$outcome) #>                 #>                 current test 1 test 2 #>   new search       1489    751    682 #>   no new search    3511   1749   1818  ggplot(gsearch, aes(x = type, fill = outcome)) +   geom_bar(position = \"fill\") +   labs(y = \"proportion\")"},{"path":"https://openintrostat.github.io/openintro/reference/gss2010.html","id":null,"dir":"Reference","previous_headings":"","what":"2010 General Social Survey — gss2010","title":"2010 General Social Survey — gss2010","text":"Data 2010 General Social Survey.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gss2010.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2010 General Social Survey — gss2010","text":"","code":"gss2010"},{"path":"https://openintrostat.github.io/openintro/reference/gss2010.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"2010 General Social Survey — gss2010","text":"data frame 2044 observations following 5 variables. hrsrelax average work day, many hours relax pursue activities enjoy mntlhlth many days past 30 days mental health, includes stress, depression, problems emotions, good? hrs1 Hours worked week. degree Educational attainment degree. grass think use marijuana made legal, ?","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gss2010.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"2010 General Social Survey — gss2010","text":"US 2010 General Social Survey.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gss2010.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2010 General Social Survey — gss2010","text":"","code":"gss2010 #> # A tibble: 2,044 × 5 #>    hrsrelax mntlhlth  hrs1 degree         grass     #>       <int>    <int> <int> <fct>          <fct>     #>  1        2        3    55 BACHELOR       NA        #>  2        4        6    45 BACHELOR       LEGAL     #>  3       NA       NA    NA LT HIGH SCHOOL NA        #>  4       NA       NA    NA LT HIGH SCHOOL NOT LEGAL #>  5       NA       NA    NA LT HIGH SCHOOL NOT LEGAL #>  6       NA       NA    NA LT HIGH SCHOOL LEGAL     #>  7        3        0    45 JUNIOR COLLEGE NA        #>  8       NA       NA    NA JUNIOR COLLEGE NA        #>  9        0        0    40 HIGH SCHOOL    NOT LEGAL #> 10        5       10    48 HIGH SCHOOL    NA        #> # ℹ 2,034 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/gss_wordsum_class.html","id":null,"dir":"Reference","previous_headings":"","what":"gss_wordsum_class — gss_wordsum_class","title":"gss_wordsum_class — gss_wordsum_class","text":"data frame containing data General Social Survey.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gss_wordsum_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gss_wordsum_class — gss_wordsum_class","text":"","code":"gss_wordsum_class"},{"path":"https://openintrostat.github.io/openintro/reference/gss_wordsum_class.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gss_wordsum_class — gss_wordsum_class","text":"data frame 795 observations following 2 variables. wordsum vocabulary score calculated based ten question vocabulary test, higher score means better vocabulary. Scores range 1 10. class Self-identified social class 4 levels: lower, working, middle, upper class.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/gss_wordsum_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gss_wordsum_class — gss_wordsum_class","text":"","code":"library(dplyr)  gss_wordsum_class |>   group_by(class) |>   summarize(mean_wordsum = mean(wordsum)) #> # A tibble: 4 × 2 #>   class   mean_wordsum #>   <chr>          <dbl> #> 1 LOWER           5.07 #> 2 MIDDLE          6.76 #> 3 UPPER           6.19 #> 4 WORKING         5.75"},{"path":"https://openintrostat.github.io/openintro/reference/health_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Health Coverage and Health Status — health_coverage","title":"Health Coverage and Health Status — health_coverage","text":"Survey responses 20,000 responses Behavioral Risk Factor Surveillance System.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/health_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Health Coverage and Health Status — health_coverage","text":"","code":"health_coverage"},{"path":"https://openintrostat.github.io/openintro/reference/health_coverage.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Health Coverage and Health Status — health_coverage","text":"data frame 20000 observations following 2 variables. health_status person's health status.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/health_coverage.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Health Coverage and Health Status — health_coverage","text":"Office Surveillance, Epidemiology, Laboratory Services Behavioral Risk Factor Surveillance System, BRFSS 2010 Survey Data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/health_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Health Coverage and Health Status — health_coverage","text":"","code":"table(health_coverage) #>         health_status #> coverage Excellent Fair Good Poor Very good #>      No        459  385  854   99       727 #>      Yes      4198 1634 4821  578      6245"},{"path":"https://openintrostat.github.io/openintro/reference/healthcare_law_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Pew Research Center poll on health care, including question variants — healthcare_law_survey","title":"Pew Research Center poll on health care, including question variants — healthcare_law_survey","text":"example, Pew Research Center conducted survey following question: \"may know, 2014 nearly Americans required health insurance. People buy insurance pay penalty people afford receive financial help government. approve disapprove policy?\" randomly sampled respondent, statements brackets randomized: either kept order given , two statements reversed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/healthcare_law_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pew Research Center poll on health care, including question variants — healthcare_law_survey","text":"","code":"healthcare_law_survey"},{"path":"https://openintrostat.github.io/openintro/reference/healthcare_law_survey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pew Research Center poll on health care, including question variants — healthcare_law_survey","text":"data frame 1503 observations following 2 variables. response factor levels approve disapprove ","code":""},{"path":"https://openintrostat.github.io/openintro/reference/healthcare_law_survey.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pew Research Center poll on health care, including question variants — healthcare_law_survey","text":"www.people-press.org/2012/03/26/public-remains-split--health-care-bill-opposed--mandate/. Sample sizes polling group approximate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/healthcare_law_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pew Research Center poll on health care, including question variants — healthcare_law_survey","text":"","code":"healthcare_law_survey #> # A tibble: 1,503 × 2 #>    order                response #>    <fct>                <fct>    #>  1 cannot_afford_second approve  #>  2 cannot_afford_second approve  #>  3 cannot_afford_second approve  #>  4 cannot_afford_second approve  #>  5 cannot_afford_second approve  #>  6 cannot_afford_second approve  #>  7 cannot_afford_second approve  #>  8 cannot_afford_second approve  #>  9 cannot_afford_second approve  #> 10 cannot_afford_second approve  #> # ℹ 1,493 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/heart_transplant.html","id":null,"dir":"Reference","previous_headings":"","what":"Heart Transplant Data — heart_transplant","title":"Heart Transplant Data — heart_transplant","text":"Stanford University Heart Transplant Study conducted determine whether experimental heart transplant program increased lifespan. patient entering program designated officially heart transplant candidate, meaning gravely ill likely benefit new heart. actual heart transplant occurs weeks several months depending availability donor. candidates waiting period show improvement get deselected heart transplant candidate, purposes experiment patients kept data continuing candidates.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/heart_transplant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heart Transplant Data — heart_transplant","text":"","code":"heart_transplant"},{"path":"https://openintrostat.github.io/openintro/reference/heart_transplant.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Heart Transplant Data — heart_transplant","text":"data frame 103 observations following 8 variables. id ID number patient. acceptyear Year acceptance heart transplant candidate. age Age patient beginning study. survived Survival status levels alive dead. survtime Number days patients alive date determined candidate heart transplant termination date study prior Whether patient prior surgery levels yes . transplant Transplant status levels control (receive transplant) treatment (received transplant). wait Waiting Time Transplant","code":""},{"path":"https://openintrostat.github.io/openintro/reference/heart_transplant.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Heart Transplant Data — heart_transplant","text":"http://www.stat.ucla.edu/~jsanchez/data/stanford.txt","code":""},{"path":"https://openintrostat.github.io/openintro/reference/heart_transplant.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heart Transplant Data — heart_transplant","text":"Turnbull B, Brown B, Hu M (1974). \"Survivorship heart transplant data.\" Journal American Statistical Association, vol. 69, pp. 74-80.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/heart_transplant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heart Transplant Data — heart_transplant","text":"","code":"library(ggplot2)  ggplot(heart_transplant, aes(x = transplant, y = survtime)) +   geom_boxplot() +   labs(x = \"Transplant\", y = \"Survival time (days)\")   ggplot(heart_transplant, aes(x = transplant, fill = survived)) +   geom_bar(position = \"fill\") +   labs(x = \"Transplant\", y = \"Proportion\", fill = \"Outcome\")"},{"path":"https://openintrostat.github.io/openintro/reference/helium.html","id":null,"dir":"Reference","previous_headings":"","what":"Helium football — helium","title":"Helium football — helium","text":"1976 Pro Bowl, Ray Guy, punter Oakland Raiders, punted ball hung mid-air long enough officials question whether pigskin filled helium. ball found filled air, since many tossed around idea helium-filled football outdistance air-filled one. Students Ohio State University conducted experiment test myth. used two identical footballs, one air filled air one filled helium. football kicked 39 times two footballs alternated kick.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/helium.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helium football — helium","text":"","code":"helium"},{"path":"https://openintrostat.github.io/openintro/reference/helium.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Helium football — helium","text":"data frame 39 observations following 3 variables. air Distance years air-filled football. helium Distance years helium-filled football.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/helium.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Helium football — helium","text":"Previously part Data Story Library, https://dasl.datadescription.com. Removed 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/helium.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helium football — helium","text":"Lafferty, M. B. (1993), \"OSU scientists get kick sports controversy, \"Columbus Dispatch (November, 21, 1993), B7.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/helium.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helium football — helium","text":"","code":"boxPlot(helium$air, xlab = \"air\")  boxPlot(helium$helium, xlab = \"helium\")"},{"path":"https://openintrostat.github.io/openintro/reference/helmet.html","id":null,"dir":"Reference","previous_headings":"","what":"Socioeconomic status and reduced-fee school lunches — helmet","title":"Socioeconomic status and reduced-fee school lunches — helmet","text":"Examining relationship socioeconomic status measured percentage children neighborhood receiving reduced-fee lunches school (lunch) percentage bike riders neighborhood wearing helmets (helmet).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/helmet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Socioeconomic status and reduced-fee school lunches — helmet","text":"","code":"helmet"},{"path":"https://openintrostat.github.io/openintro/reference/helmet.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Socioeconomic status and reduced-fee school lunches — helmet","text":"data frame 12 observations representing neighborhoods following 2 variables. lunch Percent students receiving reduced-fee school lunches. helmet Percent bike riders wearing helmets.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/helmet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Socioeconomic status and reduced-fee school lunches — helmet","text":"","code":"library(ggplot2)  ggplot(helmet, aes(x = lunch, y = helmet)) +   geom_point()"},{"path":"https://openintrostat.github.io/openintro/reference/hfi.html","id":null,"dir":"Reference","previous_headings":"","what":"Human Freedom Index — hfi","title":"Human Freedom Index — hfi","text":"Human Freedom Index report attempts summarize idea \"freedom\" bunch different variables many countries around globe. serves rough objective measure relationships different types freedom - whether political, religious, economical personal freedom - social economic circumstances. Human Freedom Index annually co-published report Cato Institute, Fraser Institute, Liberales Institut Friedrich Naumann Foundation Freedom.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/hfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human Freedom Index — hfi","text":"","code":"hfi"},{"path":"https://openintrostat.github.io/openintro/reference/hfi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human Freedom Index — hfi","text":"data frame 1458 observations following 123 variables. year Year ISO_code ISO code country countries Name country region Region country located pf_rol_procedural Procedural justice pf_rol_civil Civil justice pf_rol_criminal Criminal justice pf_rol Rule law pf_ss_homicide Homicide pf_ss_disappearances_disap Disappearances pf_ss_disappearances_violent Violent conflicts pf_ss_disappearances_organized Violent conflicts pf_ss_disappearances_fatalities Terrorism fatalities pf_ss_disappearances_injuries Terrorism injuries pf_ss_disappearances Disappearances, conflict, terrorism pf_ss_women_fgm Female genital mutilation pf_ss_women_missing Missing women pf_ss_women_inheritance_widows Inheritance rights widows pf_ss_women_inheritance_daughters Inheritance rights daughters pf_ss_women_inheritance Inheritance pf_ss_women Women's security pf_ss Security safety pf_movement_domestic Freedom domestic movement pf_movement_foreign Freedom foreign movement pf_movement_women Women's movement pf_movement Freedom movement pf_religion_estop_establish Freedom establish religious organizations pf_religion_estop_operate Freedom operate religious organizations pf_religion_estop Freedom establish operate religious organizations pf_religion_harassment Harassment physical hostilities pf_religion_restrictions Legal regulatory restrictions pf_religion Religious freedom pf_association_association Freedom association pf_association_assembly Freedom assembly pf_association_political_establish Freedom establish political parties pf_association_political_operate Freedom operate political parties pf_association_political Freedom establish operate political parties pf_association_prof_establish Freedom establish professional organizations pf_association_prof_operate Freedom operate professional organizations pf_association_prof Freedom establish operate professional organizations pf_association_sport_establish Freedom establish educational, sporting, cultural organizations pf_association_sport_operate Freedom operate educational, sporting, cultural organizations pf_association_sport Freedom establish operate educational, sporting, cultural organizations pf_association Freedom associate assemble peaceful individuals organizations pf_expression_killed Press killed pf_expression_jailed Press jailed pf_expression_influence Laws regulations influence media content pf_expression_control Political pressures controls media content pf_expression_cable Access cable/satellite pf_expression_newspapers Access foreign newspapers pf_expression_internet State control internet access pf_expression Freedom expression pf_identity_legal Legal gender pf_identity_parental_marriage Parental rights marriage pf_identity_parental_divorce Parental rights divorce pf_identity_parental Parental rights pf_identity_sex_male Male--male relationships pf_identity_sex_female Female--female relationships pf_identity_sex -sex relationships pf_identity_divorce Divor pf_identity Identity relationships pf_score Personal Freedom (score) pf_rank Personal Freedom (rank) ef_government_consumption Government consumption ef_government_transfers Transfers subsidies ef_government_enterprises Government enterprises investments ef_government_tax_income Top marginal income tax rate - Top marginal income tax rates ef_government_tax_payroll Top marginal income tax rate - Top marginal income payroll tax rate ef_government_tax Top marginal tax rate ef_government Size government ef_legal_judicial Judicial independence ef_legal_courts Impartial courts ef_legal_protection Protection property rights ef_legal_military Military interference rule law politics ef_legal_integrity Integrity legal system ef_legal_enforcement Legal enforcement contracts ef_legal_restrictions Regulatory restrictions sale real property ef_legal_police Reliability police ef_legal_crime Business costs crime ef_legal_gender Gender adjustment ef_legal Legal system property rights ef_money_growth Money growth ef_money_sd Standard deviation inflation ef_money_inflation Inflation - recent year ef_money_currency Freedom foreign currency bank account ef_money Sound money ef_trade_tariffs_revenue Tariffs - Revenue trade taxes (percentage trade sector) ef_trade_tariffs_mean Tariffs - Mean tariff rate ef_trade_tariffs_sd Tariffs - Standard deviation tariffs rates ef_trade_tariffs Tariffs ef_trade_regulatory_nontariff Regulatory trade barriers - Nontariff trade barriers ef_trade_regulatory_compliance Regulatory trade barriers - Compliance costs importing exporting ef_trade_regulatory Regulatory trade barriers ef_trade_black Black-market exchange rates ef_trade_movement_foreign Controls movement capital people - Foreign ownership/investment restrictions ef_trade_movement_capital Controls movement capital people - Capital controls ef_trade_movement_visit Controls movement capital people - Freedom foreigners visit ef_trade_movement Controls movement capital people ef_trade Freedom trade internationally ef_regulation_credit_ownership Credit market regulations - Ownership banks ef_regulation_credit_private Credit market regulations - Private sector credit ef_regulation_credit_interest Credit market regulations - Interest rate controls/negative real interest rates ef_regulation_credit Credit market regulation ef_regulation_labor_minwage Labor market regulations - Hiring regulations minimum wage ef_regulation_labor_firing Labor market regulations - Hiring firing regulations ef_regulation_labor_bargain Labor market regulations - Centralized collective bargaining ef_regulation_labor_hours Labor market regulations - Hours regulations ef_regulation_labor_dismissal Labor market regulations - Dismissal regulations ef_regulation_labor_conscription Labor market regulations - Conscription ef_regulation_labor Labor market regulation ef_regulation_business_adm Business regulations - Administrative requirements ef_regulation_business_bureaucracy Business regulations - Bureaucracy costs ef_regulation_business_start Business regulations - Starting business ef_regulation_business_bribes Business regulations - Extra payments/bribes/favoritism ef_regulation_business_licensing Business regulations - Licensing restrictions ef_regulation_business_compliance Business regulations - Cost tax compliance ef_regulation_business Business regulation ef_regulation Economic freedom regulation score ef_score Economic freedom score ef_rank Economic freedom rank hf_score Human freedom score hf_rank Human freedom rank hf_quartile Human freedom quartile","code":""},{"path":"https://openintrostat.github.io/openintro/reference/hfi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human Freedom Index — hfi","text":"Ian Vasquez Tanja Porcnik, Human Freedom Index 2018: Global Measurement Personal, Civil, Economic Freedom (Washington: Cato Institute, Fraser Institute, Friedrich Naumann Foundation Freedom, 2018). https://www.cato.org/sites/cato.org/files/human-freedom-index-files/human-freedom-index-2016.pdf. https://www.kaggle.com/gsutters/-human-freedom-index.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/hfi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Human Freedom Index — hfi","text":"dataset contains information Human Freedom Index reports 2008-2016.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/histPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram or hollow histogram — histPlot","title":"Histogram or hollow histogram — histPlot","text":"Create histograms hollow histograms. function permits easy color appearance customization.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/histPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram or hollow histogram — histPlot","text":"","code":"histPlot(   x,   col = fadeColor(\"black\", \"22\"),   border = \"black\",   breaks = \"default\",   probability = FALSE,   hollow = FALSE,   add = FALSE,   lty = 2,   lwd = 1,   freqTable = FALSE,   right = TRUE,   axes = TRUE,   xlab = NULL,   ylab = NULL,   xlim = NULL,   ylim = NULL,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/histPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram or hollow histogram — histPlot","text":"x Numerical vector frequency table (matrix) first column represents observed values second column frequencies. See also freqTable argument. col Shading histogram bins. border Color histogram bin borders. breaks vector bin boundaries approximate number bins. probability FALSE, frequency plotted. TRUE, probability density. hollow TRUE, hollow histogram created. add TRUE, histogram added plot. lty Line type. Applies hollow=TRUE. lwd Line width. Applies hollow=TRUE. freqTable Set TRUE x frequency table. right Set FALSE assign values x fall bin margin left bin. Otherwise ties default right bin. axes FALSE, axes plotted. xlab Label x axis. ylab Label y axis. xlim Limits x axis. ylim Limits y axis. ... Additional arguments plot. add TRUE, arguments ignored.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/histPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Histogram or hollow histogram — histPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/histPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram or hollow histogram — histPlot","text":"","code":"histPlot(tips$tip, main = \"Tips\")   # overlaid hollow histograms histPlot(tips$tip[tips$day == \"Tuesday\"],   probability = TRUE,   hollow = TRUE,   main = \"Tips by day\" ) histPlot(tips$tip[tips$day == \"Friday\"],   probability = TRUE,   hollow = TRUE,   add = TRUE,   lty = 3,   border = \"red\" ) legend(\"topright\",   col = c(\"black\", \"red\"),   lty = 1:2,   legend = c(\"Tuesday\", \"Friday\") )   # breaks and colors histPlot(tips$tip,   col = fadeColor(\"yellow\", \"33\"),   border = \"darkblue\",   probability = TRUE,   breaks = 30,   lwd = 3 )   # custom breaks brks <- c(-1, 0, 1, 2, 3, 4, seq(5, 20, 5), 22, 24, 26) histPlot(tips$tip,   probability = TRUE,   breaks = brks,   col = fadeColor(\"darkgoldenrod4\", \"33\"),   xlim = c(0, 26) )"},{"path":"https://openintrostat.github.io/openintro/reference/house.html","id":null,"dir":"Reference","previous_headings":"","what":"United States House of Representatives historical make-up — house","title":"United States House of Representatives historical make-up — house","text":"make-United States House Representatives every two years since 1789. last Congress included 112th Congress, completed term 2013.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/house.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States House of Representatives historical make-up — house","text":"","code":"house"},{"path":"https://openintrostat.github.io/openintro/reference/house.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States House of Representatives historical make-up — house","text":"data frame 112 observations following 12 variables. congress number year's Congress year_start Starting year year_end Ending year seats Total number seats p1 Name first political party np1 Number seats held first political party p2 Name second political party np2 Number seats held second political party vac Vacancy del Delegate res Resident commissioner","code":""},{"path":"https://openintrostat.github.io/openintro/reference/house.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States House of Representatives historical make-up — house","text":"Party Divisions House Representatives, 1789 Present. https://history.house.gov/Institution/Party-Divisions/Party-Divisions.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/house.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United States House of Representatives historical make-up — house","text":"","code":"library(dplyr) library(ggplot2) library(forcats)  # Examine two-party relationship since 1855 house_since_1855 <- house |>   filter(year_start >= 1855) |>   mutate(     p1_perc = 100 * np1 / seats,     p2_perc = 100 * np2 / seats,     era = case_when(       between(year_start, 1861, 1865) ~ \"Civil War\",       between(year_start, 1914, 1918) ~ \"World War I\",       between(year_start, 1929, 1939) ~ \"Great Depression\",       between(year_start, 1940, 1945) ~ \"World War II\",       between(year_start, 1960, 1965) ~ \"Vietnam War Start\",       between(year_start, 1965, 1975) ~ \"Vietnam War Escalated\",       TRUE ~ NA_character_     ),     era = fct_relevel(       era, \"Civil War\", \"World War I\",       \"Great Depression\", \"World War II\",       \"Vietnam War Start\", \"Vietnam War Escalated\"     )   )  ggplot(house_since_1855, aes(x = year_start)) +   geom_rect(aes(     xmin = year_start, xmax = lead(year_start),     ymin = -Inf, ymax = Inf, fill = era   )) +   geom_line(aes(y = p1_perc, color = \"Democrats\")) + # Democrats   geom_line(aes(y = p2_perc, color = \"Republicans\")) + # Republicans   scale_fill_brewer(palette = \"Pastel1\", na.translate = FALSE) +   scale_color_manual(     name   = \"Party\",     values = c(\"Democrats\" = \"blue\", \"Republicans\" = \"red\"),     labels = c(\"Democrats\", \"Republicans\")   ) +   theme_minimal() +   ylim(0, 100) +   labs(x = \"Year\", y = \"Percentage of seats\", fill = \"Era\") #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_rect()`)."},{"path":"https://openintrostat.github.io/openintro/reference/housing.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset on student housing — housing","title":"Simulated dataset on student housing — housing","text":"observation represents simulated rent price student.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/housing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset on student housing — housing","text":"","code":"housing"},{"path":"https://openintrostat.github.io/openintro/reference/housing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset on student housing — housing","text":"data frame 75 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/housing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated dataset on student housing — housing","text":"","code":"housing #> # A tibble: 75 × 1 #>     cost #>    <dbl> #>  1  506. #>  2  614. #>  3  755. #>  4  483. #>  5  588. #>  6  609. #>  7  667. #>  8  572. #>  9  794. #> 10  582. #> # ℹ 65 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/hsb2.html","id":null,"dir":"Reference","previous_headings":"","what":"High School and Beyond survey — hsb2","title":"High School and Beyond survey — hsb2","text":"Two hundred observations randomly sampled High School Beyond survey, survey conducted high school seniors National Center Education Statistics.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/hsb2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"High School and Beyond survey — hsb2","text":"","code":"hsb2"},{"path":"https://openintrostat.github.io/openintro/reference/hsb2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"High School and Beyond survey — hsb2","text":"data frame 200 observations 11 variables. id Student ID. gender Student's gender, levels female male. race Student's race, levels african american, asian, hispanic, white. ses Socio economic status student's family, levels low, middle, high. schtyp Type school, levels public private. prog Type program, levels general, academic, vocational. read Standardized reading score. write Standardized writing score. math Standardized math score. science Standardized science score. socst Standardized social studies score.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/hsb2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"High School and Beyond survey — hsb2","text":"UCLA Institute Digital Research & Education - Statistical Consulting.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/hsb2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"High School and Beyond survey — hsb2","text":"","code":"library(ggplot2)  ggplot(hsb2, aes(x = read - write, y = ses)) +   geom_boxplot() +   labs(     x = \"Difference between reading and writing scores\",     y = \"Socio-economic status\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/husbands_wives.html","id":null,"dir":"Reference","previous_headings":"","what":"Great Britain: husband and wife pairs — husbands_wives","title":"Great Britain: husband and wife pairs — husbands_wives","text":"Great Britain Office Population Census Surveys collected data random sample 170 married couples Britain, recording age (years) heights husbands wives.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/husbands_wives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Great Britain: husband and wife pairs — husbands_wives","text":"","code":"husbands_wives"},{"path":"https://openintrostat.github.io/openintro/reference/husbands_wives.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Great Britain: husband and wife pairs — husbands_wives","text":"data frame 199 observations following 8 variables. age_wife Age wife. ht_husband Height husband (mm). ht_wife Height wife (mm). age_husb_at_marriage Age husband time married. age_wife_at_marriage Age wife time married. years_married Number years married.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/husbands_wives.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Great Britain: husband and wife pairs — husbands_wives","text":"Hand DJ. 1994. handbook small data sets. Chapman & Hall/CRC.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/husbands_wives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Great Britain: husband and wife pairs — husbands_wives","text":"","code":"library(ggplot2)  ggplot(husbands_wives, aes(x = ht_husband, y = ht_wife)) +   geom_point()"},{"path":"https://openintrostat.github.io/openintro/reference/immigration.html","id":null,"dir":"Reference","previous_headings":"","what":"Poll on illegal workers in the US — immigration","title":"Poll on illegal workers in the US — immigration","text":"910 randomly sampled registered voters Tampa, FL asked thought workers illegally entered US () allowed keep jobs apply US citizenship, (ii) allowed keep jobs temporary guest workers allowed apply US citizenship, (iii) lose jobs leave country well political ideology.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/immigration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poll on illegal workers in the US — immigration","text":"","code":"immigration"},{"path":"https://openintrostat.github.io/openintro/reference/immigration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Poll on illegal workers in the US — immigration","text":"data frame 910 observations following 2 variables. response factor levels Apply citizenship Guest worker Leave country sure political factor levels conservative liberal moderate","code":""},{"path":"https://openintrostat.github.io/openintro/reference/immigration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Poll on illegal workers in the US — immigration","text":"SurveyUSA, News Poll #18927, data collected Jan 27-29, 2012.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/immigration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Poll on illegal workers in the US — immigration","text":"","code":"immigration #> # A tibble: 910 × 2 #>    response              political    #>    <fct>                 <fct>        #>  1 Apply for citizenship conservative #>  2 Apply for citizenship conservative #>  3 Apply for citizenship conservative #>  4 Apply for citizenship conservative #>  5 Apply for citizenship conservative #>  6 Apply for citizenship conservative #>  7 Apply for citizenship conservative #>  8 Apply for citizenship conservative #>  9 Apply for citizenship conservative #> 10 Apply for citizenship conservative #> # ℹ 900 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/infmortrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Infant Mortality Rates, 2012 — infmortrate","title":"Infant Mortality Rates, 2012 — infmortrate","text":"entry gives number deaths infants one year old 2012 per 1,000 live births year. rate often used indicator level health country.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/infmortrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infant Mortality Rates, 2012 — infmortrate","text":"","code":"infmortrate"},{"path":"https://openintrostat.github.io/openintro/reference/infmortrate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Infant Mortality Rates, 2012 — infmortrate","text":"data frame 222 observations following 2 variables. country Name country. inf_mort_rate Infant mortality rate per 1,000 live births.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/infmortrate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infant Mortality Rates, 2012 — infmortrate","text":"CIA World Factbook, https://www.cia.gov/-world-factbook/field/infant-mortality-rate/country-comparison.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/infmortrate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infant Mortality Rates, 2012 — infmortrate","text":"data given decreasing order infant mortality rates. potential outliers.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/infmortrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infant Mortality Rates, 2012 — infmortrate","text":"","code":"library(ggplot2)  ggplot(infmortrate, aes(x = inf_mort_rate)) +   geom_histogram(binwidth = 10)   ggplot(infmortrate, aes(x = inf_mort_rate)) +   geom_density()"},{"path":"https://openintrostat.github.io/openintro/reference/iowa.html","id":null,"dir":"Reference","previous_headings":"","what":"iowa — iowa","title":"iowa — iowa","text":"data frame containing information 2016 US Presidential Election state Iowa.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/iowa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iowa — iowa","text":"","code":"iowa"},{"path":"https://openintrostat.github.io/openintro/reference/iowa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"iowa — iowa","text":"data frame 1386 observations following 5 variables. office office candidates running . candidate President/Vice President pairs running office. party Political part candidate. county County Iowa votes cast. votes Number votes received candidate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/iowa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"iowa — iowa","text":"","code":"library(ggplot2) library(dplyr)  plot_data <- iowa |>   filter(candidate != \"Total\") |>   group_by(candidate) |>   summarize(total_votes = sum(votes) / 1000)  ggplot(plot_data, aes(total_votes, candidate)) +   geom_col() +   theme_minimal() +   labs(     title = \"2016 Presidential Election in Iowa\",     subtitle = \"Popular vote\",     y = \"\",     x = \"Number of Votes (in thousands)     \"   )"},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook, Google, and LinkedIn IPO filings — ipo","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"Feb 1st, 2011, Facebook Inc. filed S-1 form Securities Exchange Commission part initial public offering (IPO).  dataset includes text document well text IPOs two competing companies: Google LinkedIn.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"","code":"ipo"},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"format list three character vectors.  vector contains line--line text IPO Prospectus Facebook, Google, LinkedIn, respectively.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"IPO prospectuses available U.S. Securities Exchange Commission: Facebook, Google, LinkedIn.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"three prospectuses encoded UTF-8 format contains non-word characters related layout original documents.  analysis words, recommended data processed packages tidytext. See examples .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"Zweig, J., 2020. Mark Zuckerberg: CEO Life?. WSJ.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook, Google, and LinkedIn IPO filings — ipo","text":"","code":"library(tidytext) library(tibble) library(dplyr) library(ggplot2) library(forcats)  # Analyzing Facebook IPO text  facebook <- tibble(text = ipo$facebook, company = \"Facebook\")  facebook |>   unnest_tokens(word, text) |>   anti_join(stop_words) |>   count(word, sort = TRUE) |>   slice_head(n = 20) |>   ggplot(aes(y = fct_reorder(word, n), x = n, fill = n)) +   geom_col() +   labs(     title = \"Top 20 most common words in Facebook IPO\",     x = \"Frequency\",     y = \"Word\"   ) #> Joining with `by = join_by(word)`   # Comparisons to Google and LinkedIn IPO texts  google <- tibble(text = ipo$google, company = \"Google\") linkedin <- tibble(text = ipo$linkedin, company = \"LinkedIn\")  ipo_texts <- bind_rows(facebook, google, linkedin)  ipo_texts |>   unnest_tokens(word, text) |>   count(company, word, sort = TRUE) |>   bind_tf_idf(word, company, n) |>   arrange(desc(tf_idf)) |>   group_by(company) |>   slice_max(tf_idf, n = 15) |>   ungroup() |>   ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = company)) +   geom_col(show.legend = FALSE) +   facet_wrap(~company, ncol = 3, scales = \"free\") +   labs(x = \"tf-idf\", y = NULL)"},{"path":"https://openintrostat.github.io/openintro/reference/ipod.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of songs on an iPod — ipod","title":"Length of songs on an iPod — ipod","text":"simulated dataset lengths songs iPod.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of songs on an iPod — ipod","text":"","code":"ipod"},{"path":"https://openintrostat.github.io/openintro/reference/ipod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Length of songs on an iPod — ipod","text":"data frame 3000 observations following variable. song_length Length song (minutes).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipod.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Length of songs on an iPod — ipod","text":"Simulated data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ipod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of songs on an iPod — ipod","text":"","code":"library(ggplot2)  ggplot(ipod, aes(x = song_length)) +   geom_histogram(binwidth = 0.5)"},{"path":"https://openintrostat.github.io/openintro/reference/iran.html","id":null,"dir":"Reference","previous_headings":"","what":"iran — iran","title":"iran — iran","text":"data frame containing information 2009 Presidential Election Iran. widespread claims election fraud election internationally within Iran.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/iran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iran — iran","text":"","code":"iran"},{"path":"https://openintrostat.github.io/openintro/reference/iran.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"iran — iran","text":"data frame 366 observations following 9 variables. province Iranian province votes cast. city City within province votes cast. ahmadinejad Number votes received Ahmadinejad. rezai Number votes received Rezai. karrubi Number votes received Karrubi. mousavi Number votes received Mousavi. total_votes_cast Total number votes cast. voided_votes Number votes counted. legitimate_votes Number votes counted.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/iran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"iran — iran","text":"","code":"library(dplyr) library(ggplot2) library(tidyr) library(stringr)  plot_data <- iran |>   summarize(     ahmadinejad = sum(ahmadinejad) / 1000,     rezai = sum(rezai) / 1000,     karrubi = sum(karrubi) / 1000,     mousavi = sum(mousavi) / 1000   ) |>   pivot_longer(     cols = c(ahmadinejad, rezai, karrubi, mousavi),     names_to = \"candidate\",     values_to = \"votes\"   ) |>   mutate(candidate = str_to_title(candidate))  ggplot(plot_data, aes(votes, candidate)) +   geom_col() +   theme_minimal() +   labs(     title = \"2009 Iranian Presidential Election\",     x = \"Number of votes (in thousands)\",     y = \"\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/jury.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated juror dataset — jury","title":"Simulated juror dataset — jury","text":"Simulated dataset registered voters proportions representation juries.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/jury.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated juror dataset — jury","text":"","code":"jury"},{"path":"https://openintrostat.github.io/openintro/reference/jury.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated juror dataset — jury","text":"data frame 275 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/jury.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated juror dataset — jury","text":"","code":"jury #> # A tibble: 275 × 1 #>    race  #>    <fct> #>  1 white #>  2 white #>  3 white #>  4 white #>  5 white #>  6 white #>  7 white #>  8 white #>  9 white #> 10 white #> # ℹ 265 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/kobe_basket.html","id":null,"dir":"Reference","previous_headings":"","what":"Kobe Bryant basketball performance — kobe_basket","title":"Kobe Bryant basketball performance — kobe_basket","text":"Data five games Los Angeles Lakers played Orlando Magic 2009 NBA finals.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/kobe_basket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kobe Bryant basketball performance — kobe_basket","text":"","code":"kobe_basket"},{"path":"https://openintrostat.github.io/openintro/reference/kobe_basket.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Kobe Bryant basketball performance — kobe_basket","text":"data frame 133 rows 6 variables: vs categorical vector, ORL Los Angeles Lakers played Orlando game numerical vector, game 2009 NBA finals quarter categorical vector, quarter game, OT stands overtime time character vector, time Kobe took shot description character vector, description shot shot categorical vector, H shot hit, M shot miss","code":""},{"path":"https://openintrostat.github.io/openintro/reference/kobe_basket.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kobe Bryant basketball performance — kobe_basket","text":"row represents shot Kobe Bryant took five games 2009 NBA finals. Kobe Bryant's performance earned title Valuable Player many spectators commented appeared show hot hand.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lab_report.html","id":null,"dir":"Reference","previous_headings":"","what":"lab_report — lab_report","title":"lab_report — lab_report","text":"Acts simplified template common parameters passed rmarkdown::html_document().","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lab_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lab_report — lab_report","text":"","code":"lab_report(   highlight = \"pygments\",   theme = \"spacelab\",   toc = TRUE,   toc_float = TRUE,   code_download = TRUE,   code_folding = \"show\" )"},{"path":"https://openintrostat.github.io/openintro/reference/lab_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lab_report — lab_report","text":"highlight Syntax highlighting style. Supported styles include \"default\", \"tango\", \"pygments\", \"kate\", \"monochrome\", \"espresso\", \"zenburn\", \"haddock\", \"textmate\". Pass NULL prevent syntax highlighting. theme Visual theme (\"default\", \"cerulean\", \"journal\", \"flatly\", \"readable\", \"spacelab\", \"united\", \"cosmo\", \"lumen\", \"paper\", \"sandstone\", \"simplex\", \"yeti\"). Pass NULL theme (case can use css parameter add styles). toc TRUE include table contents output toc_float TRUE float table contents left main document content. Rather TRUE may also pass list options control behavior floating table contents. See Floating Table Contents section details. code_download Embed Rmd source code within document provide link can used readers download code. code_folding Enable document readers toggle display R code chunks. Specify \"none\" display code chunks (assuming knit echo = TRUE). Specify \"hide\" hide R code chunks default (users can show hidden code chunks either individually document-wide). Specify \"show\" show R code chunks default.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/labor_market_discriminiation.html","id":null,"dir":"Reference","previous_headings":"","what":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","title":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","text":"Original data experiment run Bertrand Mullainathan (2004).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/labor_market_discriminiation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","text":"","code":"labor_market_discrimination"},{"path":"https://openintrostat.github.io/openintro/reference/labor_market_discriminiation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","text":"tibble 4870 observations 63 variables. education Highest education, levels 0 = reported; 1 = high school diploma; 2 = high school graduate; 3 = college; 4 = college . n_jobs Number jobs listed resume. years_exp Number years work experience resume. honors Indicator variable 1 = resume mentions honors. volunteer Indicator variable 1 = resume mentions volunteering experience. military Indicator variable 1 = resume mentions military experience. emp_holes Indicator variable 1 = resume mentions employment holes. occup_specific 1990 Census Occupation Code. See sources key. occup_broad Occupation broad levels 1 = executives managerial occupations, 2 = administrative supervisors, 3 = sales representatives, 4 = sales workers, 5 = secretaries legal assistants, 6 = clerical occupations work_in_school Indicator variable 1 = resume mentions work experience school email Indicator variable 1 = email address applicant's resume. computer_skills Indicator variable 1 = resume mentions computer skills. special_skills Indicator variable 1 = resume mentions special skills. first_name Applicant's first name. sex Sex, levels 'f' = female; 'm' = male. race Race, levels 'b' = black; 'w' = white. h Indicator variable 1 = high quality resume. l Indicator variable 1 = low quality resume. call Indicator variable 1 = applicant called back. city City, levels 'c' = chicago; 'b' = boston. kind Kind, levels '' = administrative; 's' = sales. ad_id Employment ad identifier. frac_black Fraction blacks applicant's zip. frac_white Fraction whites applicant's zip. l_med_hh_inc Log median household income applicant's zip. frac_dropout Fraction high-school dropouts applicant's zip. frac_colp Fraction college degree applicant's zip l_inc Log per capita income applicant's zip. col Indicator variable 1 = applicant college degree . expminreq Minimum experience required, (years numeric). school_req Specific education requirement, . 'hsg' = high school graduate, 'somcol' = college, 'colp' = four year degree higher eoe Indicator variable 1 = ad mentions employer 'Equal Opportunity Employer'. parent_sales Sales parent company (millions US $). parent_emp Number parent company employees. branch_sales Sales branch (millions US $). branch_emp Number branch employees. fed Indicator variable 1 = employer federal contractor. frac_black_emp_zip Fraction blacks employers's zipcode. frac_white_emp_zip Fraction whites employer's zipcode. l_med_hh_inc_emp_zip Log median household income employer's zipcode. frac_dropout_emp_zip Fraction high-school dropouts employer's zipcode. frac_colp_emp_zip Fraction college degree employer's  zipcode. l_inc_emp_zip Log per capita income employer's zipcode. manager Indicator variable 1 = executives managers wanted. supervisor Indicator variable 1 = administrative supervisors wanted. secretary Indicator variable 1 = secretaries legal assistants wanted. off_support Indicator variable 1 = clerical workers wanted. sales_rep Indicator variable 1 = sales representative wanted. retail_sales Indicator variable 1 = retail sales worker wanted. req Indicator variable 1 = ad mentions requirement job. exp_req Indicator variable 1 = ad mentions experience requirement. com_req Indicator variable 1 = ad mentions communication skills requirement. educ_req Indicator variable 1 = ad mentions educational requirement. comp_req Indicator variable 1 = ad mentions computer skill requirement. org_req Indicator variable 1 = ad mentions organizational skills requirement. manuf Indicator variable 1 = employer industry manufacturing. trans_com Indicator variable 1 = employer industry transport communication. bank_real Indicator variable 1 = employer industry finance, insurance real estate. trade Indicator variable 1 = employer industry wholesale retail trade. bus_service Indicator variable 1 = employer industry business personal  services. oth_service Indicator variable 1 = employer industry health, education social  services. miss_ind Indicator variable 1 = employer industry unknown. ownership Ownership status employer, levels 'non-profit'; 'private'; 'public'","code":""},{"path":"https://openintrostat.github.io/openintro/reference/labor_market_discriminiation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","text":"Bertrand, Marianne, Mullainathan, Sendhil. Replication data : Emily Greg Employable Lakisha Jamal? Field Experiment Labor Market Discrimination. Nashville, TN: American Economic Association [publisher], 2004. Ann Arbor, MI: Inter-university Consortium Political Social Research [distributor], 2019-12-06. doi:10.3886/E116023V1 . NBER Working Papers 1990 Census Occupation Codes Note: description variables follows closely labels provided original dataset, small edits clarity.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/labor_market_discriminiation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","text":"summary: \"study race labor market sending fictitious resumes help-wanted ads Boston Chicago newspapers. manipulate perceived race, resumes randomly assigned African-American- White-sounding names. White names receive 50 percent callbacks interviews. Callbacks also responsive resume quality White names African-American ones. racial gap uniform across occupation, industry, employer size. also find little evidence employers inferring social class names. Differential treatment race still appears prominent U. S. labor market.\"","code":""},{"path":"https://openintrostat.github.io/openintro/reference/labor_market_discriminiation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are Emily and Greg More Employable Than Lakisha and Jamal? — labor_market_discriminiation","text":"","code":"library(dplyr)  # Percent callback for typical White names and typical African-American names (table 1, p. 997)  labor_market_discrimination |>   group_by(race) |>   summarise(call_back = mean(call)) #> # A tibble: 2 × 2 #>   race  call_back #>   <chr>     <dbl> #> 1 b        0.0645 #> 2 w        0.0965"},{"path":"https://openintrostat.github.io/openintro/reference/law_resume.html","id":null,"dir":"Reference","previous_headings":"","what":"Gender, Socioeconomic Class, and Interview Invites — law_resume","title":"Gender, Socioeconomic Class, and Interview Invites — law_resume","text":"Resumes sent 316 top law firms United States, two randomized characteristics resume. First, gender associated resume randomized assigning first name either James Julia. Second, socioeconomic class candidate randomly assigned represented five minor changes associated personal interests minor details (e.g. extracurricular activity sailing team vs track field). outcome variable whether candidate received interview.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/law_resume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gender, Socioeconomic Class, and Interview Invites — law_resume","text":"","code":"law_resume"},{"path":"https://openintrostat.github.io/openintro/reference/law_resume.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gender, Socioeconomic Class, and Interview Invites — law_resume","text":"data frame 316 observations following 3 variables. row represents resume sent top law firm experiment. gender resume implied candidate either \"male\" \"female\". outcome candidate received invitation \"interview\" \"\".","code":""},{"path":"https://openintrostat.github.io/openintro/reference/law_resume.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gender, Socioeconomic Class, and Interview Invites — law_resume","text":"casual overview, see https://hbr.org/2016/12/research--subtle-class-cues-can-backfire---resume. academic paper, see Tilcsik , Rivera LA. 2016. Class Advantage, Commitment Penalty. Gendered Effect Social Class Signals Elite Labor Market. American Sociological Review 81:6 p1097-1131. doi:10.1177/0003122416668154 .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/law_resume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gender, Socioeconomic Class, and Interview Invites — law_resume","text":"","code":"tapply(law_resume$outcome == \"interview\", law_resume[, c(\"class\", \"gender\")], mean) #>       gender #> class      female       male #>   high 0.03797468 0.16250000 #>   low  0.06329114 0.01282051 m <- glm(I(outcome == \"interview\") ~ gender * class, data = law_resume, family = binomial) summary(m) #>  #> Call: #> glm(formula = I(outcome == \"interview\") ~ gender * class, family = binomial,  #>     data = law_resume) #>  #> Coefficients: #>                     Estimate Std. Error z value   Pr(>|z|)     #> (Intercept)          -3.2321     0.5886  -5.491 0.00000004 *** #> gendermale            1.5924     0.6621   2.405     0.0162 *   #> classlow              0.5375     0.7483   0.718     0.4726     #> gendermale:classlow  -3.2416     1.2903  -2.512     0.0120 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 159.68  on 315  degrees of freedom #> Residual deviance: 144.49  on 312  degrees of freedom #> AIC: 152.49 #>  #> Number of Fisher Scoring iterations: 7 #>  predict(m, type = \"response\") #>         84        118        180        285         63        280        293  #> 0.16250000 0.03797468 0.01282051 0.06329114 0.16250000 0.06329114 0.06329114  #>        205        194         19         64         54        209        117  #> 0.01282051 0.01282051 0.06329114 0.16250000 0.16250000 0.01282051 0.03797468  #>        233        150        216        297        114        231        277  #> 0.01282051 0.03797468 0.01282051 0.06329114 0.03797468 0.01282051 0.06329114  #>        312        192         37         79        113          4        111  #> 0.06329114 0.01282051 0.16250000 0.16250000 0.03797468 0.16250000 0.03797468  #>        251         98        138        171        141         53        234  #> 0.06329114 0.03797468 0.03797468 0.01282051 0.03797468 0.16250000 0.01282051  #>        188        223         31        202        298        227        178  #> 0.01282051 0.01282051 0.16250000 0.01282051 0.06329114 0.01282051 0.01282051  #>        215        151        145        214          7        129        197  #> 0.01282051 0.03797468 0.03797468 0.01282051 0.16250000 0.03797468 0.01282051  #>        185        128        229        116         65        307         26  #> 0.01282051 0.03797468 0.01282051 0.03797468 0.16250000 0.06329114 0.16250000  #>         83        135        313        105        282         75        303  #> 0.16250000 0.03797468 0.06329114 0.03797468 0.06329114 0.16250000 0.06329114  #>         85        165        263        120        191         21        217  #> 0.16250000 0.03797468 0.06329114 0.03797468 0.01282051 0.06329114 0.01282051  #>        316        206        253         82        264        300        208  #> 0.06329114 0.01282051 0.06329114 0.16250000 0.06329114 0.06329114 0.01282051  #>         94        186        228        103        168        239         76  #> 0.03797468 0.01282051 0.01282051 0.03797468 0.01282051 0.01282051 0.16250000  #>        176         47        164         28         56         33         55  #> 0.01282051 0.16250000 0.03797468 0.16250000 0.16250000 0.16250000 0.16250000  #>         14        144        196        173        177        101         90  #> 0.03797468 0.03797468 0.01282051 0.01282051 0.01282051 0.03797468 0.03797468  #>        221        132        142        302         58        212        259  #> 0.01282051 0.03797468 0.03797468 0.06329114 0.16250000 0.01282051 0.06329114  #>         45        265        100        193        124        278        273  #> 0.16250000 0.06329114 0.03797468 0.01282051 0.03797468 0.06329114 0.06329114  #>         73         88         30          3        224        248         89  #> 0.16250000 0.16250000 0.16250000 0.16250000 0.01282051 0.06329114 0.16250000  #>        127        195         97        256         34        272         87  #> 0.03797468 0.01282051 0.03797468 0.06329114 0.16250000 0.06329114 0.16250000  #>        287         40         43        112        107         15        270  #> 0.06329114 0.16250000 0.16250000 0.03797468 0.03797468 0.03797468 0.06329114  #>        315        170        109        220         95        232        219  #> 0.06329114 0.01282051 0.03797468 0.01282051 0.03797468 0.01282051 0.01282051  #>        121        106         42        211        126         78        245  #> 0.03797468 0.03797468 0.16250000 0.01282051 0.03797468 0.16250000 0.06329114  #>        268         18        294        236         92        305         74  #> 0.06329114 0.06329114 0.06329114 0.01282051 0.03797468 0.06329114 0.16250000  #>        243        182        244         12         44        240        222  #> 0.06329114 0.01282051 0.06329114 0.16250000 0.16250000 0.01282051 0.01282051  #>        139         69        250        134        295         10         50  #> 0.03797468 0.16250000 0.06329114 0.03797468 0.06329114 0.16250000 0.16250000  #>        108        149         93        122        207        237        226  #> 0.03797468 0.03797468 0.03797468 0.03797468 0.01282051 0.01282051 0.01282051  #>        169         91        104        246        200        189        261  #> 0.01282051 0.03797468 0.03797468 0.06329114 0.01282051 0.01282051 0.06329114  #>        119         67        242         25         99        308        275  #> 0.03797468 0.16250000 0.01282051 0.16250000 0.03797468 0.06329114 0.06329114  #>         70        218         49         13        115         35         72  #> 0.16250000 0.01282051 0.16250000 0.16250000 0.03797468 0.16250000 0.16250000  #>        225        314         38        252         32        213         59  #> 0.01282051 0.06329114 0.16250000 0.06329114 0.16250000 0.01282051 0.16250000  #>        279        199        271         62        267        210         77  #> 0.06329114 0.01282051 0.06329114 0.16250000 0.06329114 0.01282051 0.16250000  #>        102         11         80        190        286        247        288  #> 0.03797468 0.16250000 0.16250000 0.01282051 0.06329114 0.06329114 0.06329114  #>        179        269        276        123         16        291         48  #> 0.01282051 0.06329114 0.06329114 0.03797468 0.03797468 0.06329114 0.16250000  #>         86        299         24          5        310        255        161  #> 0.16250000 0.06329114 0.16250000 0.16250000 0.06329114 0.06329114 0.03797468  #>        159        152        283        175        143         81        158  #> 0.03797468 0.03797468 0.06329114 0.01282051 0.03797468 0.16250000 0.03797468  #>        157        167        172        292         68        257        254  #> 0.03797468 0.01282051 0.01282051 0.06329114 0.16250000 0.06329114 0.06329114  #>        181        166        301        162        306         51         61  #> 0.01282051 0.01282051 0.06329114 0.03797468 0.06329114 0.16250000 0.16250000  #>        284         39        133        184         71        266         22  #> 0.06329114 0.16250000 0.03797468 0.01282051 0.16250000 0.06329114 0.06329114  #>        230        296        235        130        174        203          9  #> 0.01282051 0.06329114 0.01282051 0.03797468 0.01282051 0.01282051 0.16250000  #>        290         52        155          8        201        198         17  #> 0.06329114 0.16250000 0.03797468 0.16250000 0.01282051 0.01282051 0.01282051  #>        140        137        281        204         41        262         29  #> 0.03797468 0.03797468 0.06329114 0.01282051 0.16250000 0.06329114 0.16250000  #>          2        183        146        260         36        156        154  #> 0.16250000 0.01282051 0.03797468 0.06329114 0.16250000 0.03797468 0.03797468  #>        110        147          6         27        148        274        309  #> 0.03797468 0.03797468 0.16250000 0.16250000 0.03797468 0.06329114 0.06329114  #>        160         60        163         46          1         57        136  #> 0.03797468 0.16250000 0.03797468 0.16250000 0.16250000 0.16250000 0.03797468  #>         20        304        153        125        249        187         23  #> 0.06329114 0.06329114 0.03797468 0.03797468 0.06329114 0.01282051 0.16250000  #>        241        238         66         96        131        311        289  #> 0.01282051 0.01282051 0.16250000 0.03797468 0.03797468 0.06329114 0.06329114  #>        258  #> 0.06329114"},{"path":"https://openintrostat.github.io/openintro/reference/lecture_learning.html","id":null,"dir":"Reference","previous_headings":"","what":"Lecture Delivery Method and Learning Outcomes — lecture_learning","title":"Lecture Delivery Method and Learning Outcomes — lecture_learning","text":"Data collected 276 students university psychology course determine effect lecture delivery method learning. Students presented live lecture professor one day pre-recorded lecture different topic professor different day. Survey data collected lectures determine mind wandering, interest, motivation.  Students also ultimately asked preferred lecture delivery method. Finally, students completed assessment end lecture determine memory recall.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lecture_learning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lecture Delivery Method and Learning Outcomes — lecture_learning","text":"","code":"lecture_learning"},{"path":"https://openintrostat.github.io/openintro/reference/lecture_learning.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lecture Delivery Method and Learning Outcomes — lecture_learning","text":"data frame 552 rows 8 variables. student Identification number specific student. identification appears twice student heard lecture delivery methods. gender Gender student. Recored binary variable levels Male Female study. method Delivery method lecture either -person(Live) pre-recorded(Video). mindwander indicator distraction lecture. proportion six mind wandering probes lecture student answered yes mind wandering just occurred. memory indicator recall information provided lecture. proportion correct answers six question assessment given end lecture presentation. interest Likert scale gauged student interest level concerning lecture. motivation_both experiencing lecture delivery methods, students asked method motivated remain attentive. motivation_single single lecture delivery experience, Likert scale used gauge motivation remain attentive lecture.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lecture_learning.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lecture Delivery Method and Learning Outcomes — lecture_learning","text":"PLOS One","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lecture_learning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lecture Delivery Method and Learning Outcomes — lecture_learning","text":"","code":"library(dplyr) library(ggplot2)  # Calculate the average memory test proportion by lecture delivery method # and gender. lecture_learning |>   group_by(method, gender) |>   summarize(average_memory = mean(memory), count = n(), .groups = \"drop\") #> # A tibble: 4 × 4 #>   method gender average_memory count #>   <chr>  <chr>           <dbl> <int> #> 1 Live   Female          0.740   180 #> 2 Live   Male            0.750    96 #> 3 Video  Female          0.704   180 #> 4 Video  Male            0.686    96  # Compare visually the differences in memory test proportions by delivery # method and gender. ggplot(lecture_learning, aes(x = method, y = memory, fill = gender)) +   geom_boxplot() +   theme_minimal() +   labs(     title = \"Difference in memory test proportions\",     x = \"Method\",     y = \"Memory\",     fill = \"Gender\"   )   # Use a paired t-test to determine whether memory test proportion score # differed by delivery method. Note that paired t-tests are identical # to one sample t-test on the difference between the Live and Video methods. learning_diff <- lecture_learning |>   tidyr::pivot_wider(id_cols = student, names_from = method, values_from = memory) |>   mutate(time_diff = Live - Video) t.test(time_diff ~ 1, data = learning_diff) #>  #> \tOne Sample t-test #>  #> data:  time_diff #> t = 2.8344, df = 275, p-value = 0.004932 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  0.01398032 0.07756171 #> sample estimates: #>  mean of x  #> 0.04577101  #>   # Calculating the proportion of students who were most motivated to remain # attentive in each delivery method. lecture_learning |>   count(motivation_both) |>   mutate(proportion = n / sum(n)) #> # A tibble: 4 × 3 #>   motivation_both       n proportion #>   <chr>             <int>      <dbl> #> 1 Equally Motivated   150     0.272  #> 2 Live                322     0.583  #> 3 Video                58     0.105  #> 4 NA                   22     0.0399"},{"path":"https://openintrostat.github.io/openintro/reference/leg_mari.html","id":null,"dir":"Reference","previous_headings":"","what":"Legalization of Marijuana Support in 2010 California Survey — leg_mari","title":"Legalization of Marijuana Support in 2010 California Survey — leg_mari","text":"2010 Survey USA poll, 70% 119 respondents ages 18 34 said vote 2010 general election Prop 19, change California law legalize marijuana allow regulated taxed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/leg_mari.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legalization of Marijuana Support in 2010 California Survey — leg_mari","text":"","code":"leg_mari"},{"path":"https://openintrostat.github.io/openintro/reference/leg_mari.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Legalization of Marijuana Support in 2010 California Survey — leg_mari","text":"data frame 119 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/leg_mari.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Legalization of Marijuana Support in 2010 California Survey — leg_mari","text":"Survey USA, Election Poll #16804, data collected July 8-11, 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/leg_mari.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legalization of Marijuana Support in 2010 California Survey — leg_mari","text":"","code":"table(leg_mari) #> response #>  oppose support  #>      36      83"},{"path":"https://openintrostat.github.io/openintro/reference/lego_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Population of Lego Sets for Sale between Jan. 1, 2018 and Sept. 11, 2020. — lego_population","title":"Population of Lego Sets for Sale between Jan. 1, 2018 and Sept. 11, 2020. — lego_population","text":"Data Lego Sets sale. Based JSDSE article Anna Peterson Laura Ziegler Data article scrapped multiple sources including brickset.com","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lego_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population of Lego Sets for Sale between Jan. 1, 2018 and Sept. 11, 2020. — lego_population","text":"","code":"lego_population"},{"path":"https://openintrostat.github.io/openintro/reference/lego_population.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population of Lego Sets for Sale between Jan. 1, 2018 and Sept. 11, 2020. — lego_population","text":"data frame 1304 rows 14 variables. item_number Set Item number set_name Name set. theme Set theme: Duplo, City Friends. pieces Number pieces set. price Recommended retail price LEGO. amazon_price Price set Amazon. year Year produced. ages LEGO's recommended ages children set pages Pages instruction booklet. minifigures Number LEGO people data, unknown \"NA\" recorded. packaging Type packaging: bag, box, etc. weight Weight set LEGOS pounds kilograms. unique_pieces Number pieces classified unique instruction manual. size Size lego pieces: Large safe small children Small older children.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lego_population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population of Lego Sets for Sale between Jan. 1, 2018 and Sept. 11, 2020. — lego_population","text":"Peterson, . D., & Ziegler, L. (2021). Building multiple linear regression model LEGO brick data. Journal Statistics Data Science Education, 29(3),1-7. doi:10.1080/26939169.2021.1946450 BrickInstructions.com. (n.d.). Retrieved February 2, 2021 Brickset. (n.d.). BRICKSET: LEGO® set guide. Retrieved February 2, 2021 ","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lego_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population of Lego Sets for Sale between Jan. 1, 2018 and Sept. 11, 2020. — lego_population","text":"","code":"library(ggplot2) library(dplyr)  lego_population |>   filter(theme == \"Friends\" | theme == \"City\") |>   ggplot(aes(x = pieces, y = amazon_price)) +   geom_point(alpha = 0.3) +   labs(     x = \"Pieces in the Set\",     y = \"Amazon Price\",     title = \"Amazon Price vs Number of Pieces in Lego Sets\",     subtitle = \"Friends and City Themes\"   ) #> Warning: Removed 28 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/openintro/reference/lego_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of Lego Sets — lego_sample","title":"Sample of Lego Sets — lego_sample","text":"Data Lego Sets sale. Based JSDSE article Anna Peterson Laura Ziegler Data article scrapped multiple sources including brickset.com","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lego_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of Lego Sets — lego_sample","text":"","code":"lego_sample"},{"path":"https://openintrostat.github.io/openintro/reference/lego_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of Lego Sets — lego_sample","text":"data frame 75 rows 15 variables. item_number Set Item number set_name Name set. theme Set theme: Duplo, City Friends. pieces Number pieces set. price Recommended retail price LEGO. amazon_price Price set Amazon. year Year produced. ages LEGO's recommended ages children set pages Pages instruction booklet. minifigures Number LEGO people data, unknown \"NA\" recorded. packaging Type packaging: bag, box, etc. weight Weight set LEGOS pounds kilograms. unique_pieces Number pieces classified unique instruction manual. size Size lego pieces: Large safe small children Small older children.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lego_sample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample of Lego Sets — lego_sample","text":"Peterson, . D., & Ziegler, L. (2021). Building multiple linear regression model LEGO brick data. Journal Statistics Data Science Education, 29(3),1-7. doi:10.1080/26939169.2021.1946450 BrickInstructions.com. (n.d.). Retrieved February 2, 2021 Brickset. (n.d.). BRICKSET: LEGO® set guide. Retrieved February 2, 2021 ","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lego_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of Lego Sets — lego_sample","text":"","code":"library(ggplot2) library(dplyr)  lego_sample |>   filter(theme == \"Friends\" | theme == \"City\") |>   ggplot(aes(x = pieces, y = amazon_price)) +   geom_point(alpha = 0.3) +   labs(     x = \"Pieces in the Set\",     y = \"Amazon Price\",     title = \"Amazon Price vs Number of Pieces in Lego Sets\",     subtitle = \"Friends and City Themes\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/life_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"life_exp — life_exp","title":"life_exp — life_exp","text":"data frame 3142 rows 4 columns. County level data life expectancy median income United States.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/life_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"life_exp — life_exp","text":"","code":"life_exp"},{"path":"https://openintrostat.github.io/openintro/reference/life_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"life_exp — life_exp","text":"data frame 3142 observations following 4 variables. state Name state. county Name county. expectancy Life expectancy county. income Median income county, measured US $.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/life_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"life_exp — life_exp","text":"","code":"library(ggplot2)  # Income V Expectancy ggplot(life_exp, aes(x = income, y = expectancy)) +   geom_point(color = openintro::IMSCOL[\"green\", \"full\"], alpha = 0.2) +   theme_minimal() +   labs(     title = \"Is there a relationship between median income and life expectancy?\",     x = \"Median income (US $)\",     y = \"Life Expectancy (year)\"   ) #> Warning: Removed 60 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/openintro/reference/linResPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create simple regression plot with residual plot — linResPlot","title":"Create simple regression plot with residual plot — linResPlot","text":"Create simple regression plot residual plot.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/linResPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create simple regression plot with residual plot — linResPlot","text":"","code":"linResPlot(   x,   y,   axes = FALSE,   wBox = TRUE,   wLine = TRUE,   lCol = \"#00000088\",   lty = 1,   lwd = 1,   main = \"\",   xlab = \"\",   ylab = \"\",   marRes = NULL,   col = fadeColor(4, \"88\"),   pch = 20,   cex = 1.5,   yR = 0.1,   ylim = NULL,   subset = NULL,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/linResPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create simple regression plot with residual plot — linResPlot","text":"x Predictor variable. y Outcome variable. axes Whether plot axis labels. wBox Whether plot boxes around plot. wLine Add regression line. lCol Line color. lty Line type. lwd Line width. main Title top plot. xlab x-label. ylab y-label. marRes Margin residuals plot. col Color points. pch Plotting character points. cex Size points. yR additional vertical stretch factor plot. ylim y-limits. subset Boolean vector, wanting subset data. ... Additional arguments passed plots.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/linResPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create simple regression plot with residual plot — linResPlot","text":"","code":"# Currently seems broken for this example. n <- 25 x <- runif(n) y <- 5 * x + rnorm(n) myMat <- rbind(matrix(1:2, 2)) myW <- 1 myH <- c(1, 0.45) par(mar = c(0.35, 0.654, 0.35, 0.654)) layout(myMat, myW, myH) linResPlot(x, y, col = COL[1, 2])"},{"path":"https://openintrostat.github.io/openintro/reference/lizard_habitat.html","id":null,"dir":"Reference","previous_headings":"","what":"Field data on lizards observed in their natural habitat — lizard_habitat","title":"Field data on lizards observed in their natural habitat — lizard_habitat","text":"Data lizard observed level sunlight. data collected Sceloporus occidentalis (western fence lizards) Stephen C. Adolph 1983 (desert mountain sites) Dee Asbury 2002-3 (valley site).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lizard_habitat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Field data on lizards observed in their natural habitat — lizard_habitat","text":"","code":"lizard_habitat"},{"path":"https://openintrostat.github.io/openintro/reference/lizard_habitat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Field data on lizards observed in their natural habitat — lizard_habitat","text":"data frame 332 observations following 2 variables. site Site lizard observation: desert, mountain, valley. sunlight Sunlight level time observation: sun (lizard observed perching full sunlight), partial (lizard observed perching part body sun, part shade), shade(lizard observed perching shade).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lizard_habitat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Field data on lizards observed in their natural habitat — lizard_habitat","text":"Adolph, S. C. 1990. Influence behavioral thermoregulation microhabitat use two Sceloporus lizards.  Ecology 71: 315-327. Asbury, D.., S. C. Adolph. 2007.  Behavioral plasticity ecological generalist: microhabitat use western fence lizards. Evolutionary Ecology Research 9:801-815.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lizard_habitat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Field data on lizards observed in their natural habitat — lizard_habitat","text":"","code":"library(ggplot2)  # Frequencies table(lizard_habitat) #>           sunlight #> site       sun partial shade #>   desert    16      32    71 #>   mountain  56      36    15 #>   valley    42      40    24  # Stacked bar plots ggplot(lizard_habitat, aes(y = site, fill = sunlight)) +   geom_bar(position = \"fill\") +   labs(x = \"Proportion\")"},{"path":"https://openintrostat.github.io/openintro/reference/lizard_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Lizard speeds — lizard_run","title":"Lizard speeds — lizard_run","text":"Data top speeds measured laboratory race track two species lizards: Western fence lizard (Sceloporus occidentalis) Sagebrush lizard (Sceloporus graciosus).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lizard_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lizard speeds — lizard_run","text":"","code":"lizard_run"},{"path":"https://openintrostat.github.io/openintro/reference/lizard_run.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lizard speeds — lizard_run","text":"data frame 48 observations following 3 variables. top_speed Top speed lizard, meters per second. common_name Common name: Western fence lizard Sagebrush lizard. scientific_name Scientific name (Genus species): Sceloporus occidentalis Sceloporus graciosus.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lizard_run.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lizard speeds — lizard_run","text":"Adolph, S. C. 1987.  Physiological behavioral ecology lizards Sceloporus occidentalis Sceloporus graciosus. Dissertation. University Washington, Seattle, Washington, USA.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lizard_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lizard speeds — lizard_run","text":"","code":"library(ggplot2) library(dplyr)  # Top speed by species ggplot(lizard_run, aes(x = top_speed, color = common_name, fill = common_name)) +   geom_density(alpha = 0.5)   # Top speed summary statistics by species lizard_run |>   group_by(common_name) |>   summarise(     n    = n(),     mean = mean(top_speed),     sd   = sd(top_speed)   ) #> # A tibble: 2 × 4 #>   common_name              n  mean    sd #>   <chr>                <int> <dbl> <dbl> #> 1 Sagebrush lizard        26  1.61 0.324 #> 2 Western fence lizard    22  2.31 0.555"},{"path":"https://openintrostat.github.io/openintro/reference/lmPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear regression plot with residual plot — lmPlot","title":"Linear regression plot with residual plot — lmPlot","text":"Plot data, linear model, residual plot simultaneously.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lmPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear regression plot with residual plot — lmPlot","text":"","code":"lmPlot(   x,   y,   xAxis = 0,   yAxis = 4,   resAxis = 3,   resSymm = TRUE,   wBox = TRUE,   wLine = TRUE,   lCol = \"#00000088\",   lty = 1,   lwd = 1,   xlab = \"\",   ylab = \"\",   marRes = NULL,   col = \"#22558888\",   pch = 20,   cex = 1.5,   xR = 0.02,   yR = 0.1,   xlim = NULL,   ylim = NULL,   subset = NULL,   parCustom = FALSE,   myHeight = c(1, 0.45),   plots = c(\"both\", \"mainOnly\", \"resOnly\"),   highlight = NULL,   hlCol = NULL,   hlCex = 1.5,   hlPch = 20,   na.rm = TRUE,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/lmPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear regression plot with residual plot — lmPlot","text":"x x coordinates points plot. y y coordinates points plot. xAxis maximum number x axis labels. yAxis maximum number y axis labels. resAxis maximum number y axis labels residual plot. resSymm Boolean determining whether range residual plot symmetric zero. wBox Boolean determining whether box added around plot. wLine Boolean determining whether add regression line plot. lCol color regression line added. lty line type regression line added. lwd line width regression line added. xlab label x axis. ylab label y axis marRes Margin specified residuals. col Color points. pch Plotting character. cex Plotting character size. xR Scaling limits x axis. Ignored xlim specified. yR Scaling limits y axis. Ignored ylim specified. xlim Limits x axis. ylim Limits y axis. subset subset data used linear model. parCustom TRUE, plotting margins modified automatically. value also TRUE plots placed within plot multiple panels. myHeight numerical vector length 2 representing ratio primary plot residual plot, height. plots currently utilized. highlight Numerical vector specifying particular points highlight. hlCol Color highlighted points. hlCex Size highlighted points. hlPch Plotting characters highlighted points. na.rm Remove cases NA values. ... Additional arguments plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/lmPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Linear regression plot with residual plot — lmPlot","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lmPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear regression plot with residual plot — lmPlot","text":"","code":"lmPlot(satgpa$sat_sum, satgpa$fy_gpa)   lmPlot(gradestv$tv, gradestv$grades,   xAxis = 4,   xlab = \"time watching TV\", yR = 0.2, highlight = c(1, 15, 20) )"},{"path":"https://openintrostat.github.io/openintro/reference/loans_full_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Loan data from Lending Club — loans_full_schema","title":"Loan data from Lending Club — loans_full_schema","text":"dataset represents thousands loans made Lending Club platform, platform allows individuals lend individuals. course, loans created equal. Someone essentially sure bet pay back loan easier time getting loan low interest rate someone appears riskier. people risky? may even get loan offer, may accepted loan offer due high interest rate. important keep last part mind, since dataset represents loans actually made, .e. mistake data loan applications!","code":""},{"path":"https://openintrostat.github.io/openintro/reference/loans_full_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loan data from Lending Club — loans_full_schema","text":"","code":"loans_full_schema"},{"path":"https://openintrostat.github.io/openintro/reference/loans_full_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Loan data from Lending Club — loans_full_schema","text":"data frame 10,000 observations following 55 variables. emp_title Job title. emp_length Number years job, rounded . longer 10 years, represented value 10. state Two-letter state code. homeownership ownership status applicant's residence. annual_income Annual income. verified_income Type verification applicant's income. debt_to_income Debt--income ratio. annual_income_joint joint application, annual income two parties applying. verification_income_joint Type verification joint income. debt_to_income_joint Debt--income ratio two parties. delinq_2y Delinquencies lines credit last 2 years. months_since_last_delinq Months since last delinquency. earliest_credit_line Year applicant's earliest line credit inquiries_last_12m Inquiries applicant's credit last 12 months. total_credit_lines Total number credit lines applicant's credit history. open_credit_lines Number currently open lines credit. total_credit_limit Total available credit, e.g. credit cards, total credit limits. excludes mortgage. total_credit_utilized Total credit balance, excluding mortgage. num_collections_last_12m Number collections last 12 months. excludes medical collections. num_historical_failed_to_pay number derogatory public records, roughly means number times applicant failed pay. months_since_90d_late Months since last time applicant 90 days late payment. current_accounts_delinq Number accounts applicant currently delinquent. total_collection_amount_ever total amount applicant collections. current_installment_accounts Number installment accounts, (roughly) accounts fixed payment amount period. typical example might 36-month car loan. accounts_opened_24m Number new lines credit opened last 24 months. months_since_last_credit_inquiry Number months since last credit inquiry applicant. num_satisfactory_accounts Number satisfactory accounts. num_accounts_120d_past_due Number current accounts 120 days past due. num_accounts_30d_past_due Number current accounts 30 days past due. num_active_debit_accounts Number currently active bank cards. total_debit_limit Total bank card limits. num_total_cc_accounts Total number credit card accounts applicant's history. num_open_cc_accounts Total number currently open credit card accounts. num_cc_carrying_balance Number credit cards carrying balance. num_mort_accounts Number mortgage accounts. account_never_delinq_percent Percent lines credit applicant never delinquent. tax_liens numeric vector public_record_bankrupt Number bankruptcies listed public record applicant. loan_purpose category purpose loan. application_type type application: either individual joint. loan_amount amount loan applicant received. term number months loan applicant received. interest_rate Interest rate loan applicant received. installment Monthly payment loan applicant received. grade Grade associated loan. sub_grade Detailed grade associated loan. issue_month Month loan issued. loan_status Status loan. initial_listing_status Initial listing status loan. (think whether lender provided entire loan loan across multiple lenders.) disbursement_method Dispersement method loan. balance Current balance loan. paid_total Total paid loan applicant. paid_principal difference original loan amount current balance loan. paid_interest amount interest paid far applicant. paid_late_fees Late fees paid applicant.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/loans_full_schema.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Loan data from Lending Club — loans_full_schema","text":"data comes Lending Club (https://www.lendingclub.com/info/statistics.action), provides large, open set data people received loans platform.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/loans_full_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loan data from Lending Club — loans_full_schema","text":"","code":"loans_full_schema #> # A tibble: 10,000 × 55 #>    emp_title        emp_length state homeownership annual_income verified_income #>    <chr>                 <dbl> <fct> <fct>                 <dbl> <fct>           #>  1 \"global config …          3 NJ    MORTGAGE              90000 Verified        #>  2 \"warehouse offi…         10 HI    RENT                  40000 Not Verified    #>  3 \"assembly\"                3 WI    RENT                  40000 Source Verified #>  4 \"customer servi…          1 PA    RENT                  30000 Not Verified    #>  5 \"security super…         10 CA    RENT                  35000 Verified        #>  6 \"\"                       NA KY    OWN                   34000 Not Verified    #>  7 \"hr \"                    10 MI    MORTGAGE              35000 Source Verified #>  8 \"police\"                 10 AZ    MORTGAGE             110000 Source Verified #>  9 \"parts\"                  10 NV    MORTGAGE              65000 Source Verified #> 10 \"4th person\"              3 IL    RENT                  30000 Not Verified    #> # ℹ 9,990 more rows #> # ℹ 49 more variables: debt_to_income <dbl>, annual_income_joint <dbl>, #> #   verification_income_joint <fct>, debt_to_income_joint <dbl>, #> #   delinq_2y <int>, months_since_last_delinq <int>, #> #   earliest_credit_line <dbl>, inquiries_last_12m <int>, #> #   total_credit_lines <int>, open_credit_lines <int>, #> #   total_credit_limit <int>, total_credit_utilized <int>, …"},{"path":"https://openintrostat.github.io/openintro/reference/london_boroughs.html","id":null,"dir":"Reference","previous_headings":"","what":"London Borough Boundaries — london_boroughs","title":"London Borough Boundaries — london_boroughs","text":"dataset contains coordinates boundaries 32 boroughs Greater London area.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_boroughs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"London Borough Boundaries — london_boroughs","text":"","code":"london_boroughs"},{"path":"https://openintrostat.github.io/openintro/reference/london_boroughs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"London Borough Boundaries — london_boroughs","text":"data frame 45341 observations following 3 variables. borough Name borough. x \"easting\" component coordinate, see details. y \"northing\" component coordinate, see details.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_boroughs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"London Borough Boundaries — london_boroughs","text":"https://data.london.gov.uk/dataset/ordnance-survey-code-point Contains Ordinance Survey data released Open Government License, OGL v2.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_boroughs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"London Borough Boundaries — london_boroughs","text":"Map data made available Ordnance Survey Open Data initiative.  data use National Grid coordinate system, based upon eastings (x) northings (y) instead longitude latitude. name variable covers 32 boroughs Greater London: Barking & Dagenham, Barnet, Bexley, Brent, Bromley, Camden, Croydon, Ealing, Enfield, Greenwich, Hackney, Hammersmith & Fulham, Haringey, Harrow, Havering, Hillingdon, Hounslow, Islington, Kensington & Chelsea, Kingston, Lambeth, Lewisham, Merton, Newham, Redbridge, Richmond, Southwark, Sutton, Tower Hamlets, Waltham Forest, Wandsworth, Westminster","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/london_boroughs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"London Borough Boundaries — london_boroughs","text":"","code":"library(dplyr) library(ggplot2)  # Calculate number of murders by borough london_murders_counts <- london_murders |>   group_by(borough) |>   add_tally()  london_murders_counts #> # A tibble: 838 × 6 #> # Groups:   borough [32] #>    forename             age date        year borough        n #>    <fct>              <int> <date>     <int> <fct>      <int> #>  1 Barrington Derrick    19 2006-01-02  2006 Hackney       42 #>  2 Aaron                 24 2006-01-02  2006 Lewisham      36 #>  3 Christopher           22 2006-01-03  2006 Hillingdon    21 #>  4 Thomas Philip         18 2006-01-04  2006 Camden        24 #>  5 Amanda                26 2006-01-04  2006 Camden        24 #>  6 Siva-Kumar            44 2006-01-05  2006 Brent         32 #>  7 Doreen                39 2006-01-08  2006 Croydon       38 #>  8 Matthew Roy           21 2006-01-09  2006 Lambeth       79 #>  9 Joan                  78 2006-01-09  2006 Enfield       31 #> 10 Monsur                27 2006-01-11  2006 Hackney       42 #> # ℹ 828 more rows if (FALSE) { # Add number of murders to geographic boundary data london_boroughs_murders <- inner_join(london_boroughs, london_murders_counts, by = \"borough\")  # Map murders ggplot(london_boroughs_murders) +   geom_polygon(aes(x = x, y = y, group = borough, fill = n), colour = \"white\") +   scale_fill_distiller(direction = 1) +   labs(x = \"Easting\", y = \"Northing\", fill = \"Number of murders\") }"},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":null,"dir":"Reference","previous_headings":"","what":"London Murders, 2006-2011 — london_murders","title":"London Murders, 2006-2011 — london_murders","text":"dataset contains victim name, age, location every murder recorded Greater London area Metropolitan Police January 1, 2006 September 7, 2011.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"London Murders, 2006-2011 — london_murders","text":"","code":"london_murders"},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"London Murders, 2006-2011 — london_murders","text":"data frame 838 observations following 5 variables. forename First name(s) victim. age Age victim. date Date murder (YYYY-MM-DD). year Year murder. borough London borough murder took place. See Details section list boroughs.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"London Murders, 2006-2011 — london_murders","text":"https://www.theguardian.com/news/datablog/2011/oct/05/murder-london-list#data","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"London Murders, 2006-2011 — london_murders","text":"visualize dataset using map, see london_boroughs dataset, contains latitude longitude polygons define boundaries 32 boroughs Greater London. borough variable covers 32 boroughs Greater London: Barking & Dagenham, Barnet, Bexley, Brent, Bromley, Camden, Croydon, Ealing, Enfield, Greenwich, Hackney, Hammersmith & Fulham, Haringey, Harrow, Havering, Hillingdon, Hounslow, Islington, Kensington & Chelsea, Kingston, Lambeth, Lewisham, Merton, Newham, Redbridge, Richmond, Southwark, Sutton, Tower Hamlets, Waltham Forest, Wandsworth, Westminster","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"London Murders, 2006-2011 — london_murders","text":"Inspired Guardian Datablog.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/london_murders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"London Murders, 2006-2011 — london_murders","text":"","code":"library(dplyr) library(ggplot2) library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union  london_murders |>   mutate(     day_count = as.numeric(date - ymd(\"2006-01-01\")),     date_cut = cut(day_count, seq(0, 2160, 90))   ) |>   group_by(date_cut) |>   add_tally() |>   ggplot(aes(x = date_cut, y = n)) +   geom_col() +   theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +   labs(x = \"Date from 01/2006 - 09/2011\", y = \"Number of deaths per 90 days\")"},{"path":"https://openintrostat.github.io/openintro/reference/loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Output a message while inside a loop — loop","title":"Output a message while inside a loop — loop","text":"NOTE: utils::txtProgressBar() utils::setTxtProgressBar() better. Output message inside loop update user progress. function useful tracking progress number iterations large procedures iteration take long time.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output a message while inside a loop — loop","text":"","code":"loop(i, n = NULL, every = 1, extra = NULL)"},{"path":"https://openintrostat.github.io/openintro/reference/loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output a message while inside a loop — loop","text":"index value used loop. n last entry loop. every number loops messages. extra Additional information print.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/loop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Output a message while inside a loop — loop","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/loop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output a message while inside a loop — loop","text":"","code":"for (i in 1:160) {   loop(i, 160, 20, paste(\"iter\", i)) } #> 20 of 160 \titer 20 #> 40 of 160 \titer 40 #> 60 of 160 \titer 60 #> 80 of 160 \titer 80 #> 100 of 160 \titer 100 #> 120 of 160 \titer 120 #> 140 of 160 \titer 140 #> 160 of 160 \titer 160"},{"path":"https://openintrostat.github.io/openintro/reference/lsegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Line Segment Plot — lsegments","title":"Create a Line Segment Plot — lsegments","text":"Creae simple plot showing line segment.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lsegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Line Segment Plot — lsegments","text":"","code":"lsegments(   x = c(3, 7),   l = \"o\",   r = \"c\",   ticks = TRUE,   labs = 1,   add = 0,   ylim = c(-0.75, 0.25) )"},{"path":"https://openintrostat.github.io/openintro/reference/lsegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Line Segment Plot — lsegments","text":"x endpoints interval. Values larger (smaller) 999 (-999) interpreted (negative) infinity. l Indicate whether left end point open (\"o\") closed (\"c\"). r Indicate whether right end point open (\"o\") closed (\"c\"). ticks Indicate whether show tick marks (TRUE) (FALSE). labs position point labels. Set 0 labels shown. add Indicate whether line segment added existing plot (TRUE) new plot created (FALSE). ylim vector length 2 specifying vertical plotting limits, may useful fine-tuning plots. default c(-0.75,0.25).","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/lsegments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Line Segment Plot — lsegments","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/lsegments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Line Segment Plot — lsegments","text":"","code":"lsegments(c(2, 7), \"o\", \"c\", ylim = c(-0.3, 0.2))   lsegments(c(5, 7), \"c\", \"c\", ylim = c(-0.3, 0.2))   lsegments(c(4, 1000), \"o\", \"o\", ylim = c(-0.3, 0.2))"},{"path":"https://openintrostat.github.io/openintro/reference/mail_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Influence of a Good Mood on Helpfulness — mail_me","title":"Influence of a Good Mood on Helpfulness — mail_me","text":"study investigated whether finding coin influenced person's likelihood mailing sealed addressed letter appeared accidentally left conspicuous place. Several variables collected experiment, including two randomized variables whether coin found whether letter already stamp .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mail_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Influence of a Good Mood on Helpfulness — mail_me","text":"","code":"mail_me"},{"path":"https://openintrostat.github.io/openintro/reference/mail_me.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Influence of a Good Mood on Helpfulness — mail_me","text":"data frame 42 observations following 4 variables. stamped factor levels yes found_coin factor levels coin no_coin gender factor levels female male mailed_letter factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mail_me.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Influence of a Good Mood on Helpfulness — mail_me","text":"Levin PF, Isen . 1975. Studies Effect Feeling Good Helping. Sociometry 31(1), p141-147.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mail_me.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Influence of a Good Mood on Helpfulness — mail_me","text":"precise context phone booth (study 1970s!), person entered phone booth find dime phone tray, sufficient pay phone call. also letter next phone, sometimes stamp .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mail_me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Influence of a Good Mood on Helpfulness — mail_me","text":"","code":"table(mail_me) #> , , gender = female, mailed_letter = no #>  #>        found_coin #> stamped coin no_coin #>     no     0       3 #>     yes    0       5 #>  #> , , gender = male, mailed_letter = no #>  #>        found_coin #> stamped coin no_coin #>     no     1       6 #>     yes    1       4 #>  #> , , gender = female, mailed_letter = yes #>  #>        found_coin #> stamped coin no_coin #>     no     3       1 #>     yes    4       0 #>  #> , , gender = male, mailed_letter = yes #>  #>        found_coin #> stamped coin no_coin #>     no     4       0 #>     yes    6       4 #>  (x <- table(mail_me[, c(\"mailed_letter\", \"found_coin\")])) #>              found_coin #> mailed_letter coin no_coin #>           no     2      18 #>           yes   17       5 chisq.test(x) #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  x #> X-squared = 16.519, df = 1, p-value = 0.00004817 #>   (x <- table(mail_me[, c(\"mailed_letter\", \"stamped\")])) #>              stamped #> mailed_letter no yes #>           no  10  10 #>           yes  8  14 chisq.test(x) #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  x #> X-squared = 0.33608, df = 1, p-value = 0.5621 #>   m <- glm(mailed_letter ~ stamped + found_coin + gender,   data = mail_me,   family = binomial ) summary(m) #>  #> Call: #> glm(formula = mailed_letter ~ stamped + found_coin + gender,  #>     family = binomial, data = mail_me) #>  #> Coefficients: #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)         1.5626     0.9868   1.583 0.113312     #> stampedyes          1.0018     0.9133   1.097 0.272661     #> found_coinno_coin  -3.5752     0.9609  -3.721 0.000199 *** #> gendermale          0.1544     0.8781   0.176 0.860387     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 58.129  on 41  degrees of freedom #> Residual deviance: 35.538  on 38  degrees of freedom #> AIC: 43.538 #>  #> Number of Fisher Scoring iterations: 5 #>"},{"path":"https://openintrostat.github.io/openintro/reference/major_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey of Duke students and the area of their major — major_survey","title":"Survey of Duke students and the area of their major — major_survey","text":"Survey 218 students, collecting information GPAs academic major.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/major_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey of Duke students and the area of their major — major_survey","text":"","code":"major_survey"},{"path":"https://openintrostat.github.io/openintro/reference/major_survey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey of Duke students and the area of their major — major_survey","text":"data frame 218 observations following 2 variables. gpa Grade point average (GPA). major Area academic major.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/major_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey of Duke students and the area of their major — major_survey","text":"","code":"library(ggplot2)  ggplot(major_survey, aes(x = major, y = gpa)) +   geom_boxplot() #> Warning: Removed 13 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":"https://openintrostat.github.io/openintro/reference/makeTube.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression tube — makeTube","title":"Regression tube — makeTube","text":"Produce linear, quadratic, nonparametric tube regression data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/makeTube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression tube — makeTube","text":"","code":"makeTube(   x,   y,   Z = 2,   R = 1,   col = \"#00000022\",   border = \"#00000000\",   type = c(\"lin\", \"quad\", \"robust\"),   stDev = c(\"constant\", \"linear\", \"other\"),   length.out = 99,   bw = \"default\",   plotTube = TRUE,   addLine = TRUE,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/makeTube.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression tube — makeTube","text":"x x coordinates. y y coordinates. Z Number standard deviations regression line extend tube. R Control far tube extends left right. col Fill color tube. border Border color tube. type type model fit data. 'robust' results nonparametric estimate. stDev Choices constant variance ('constant'), standard deviation errors changes linearly ('linear'), standard deviation errors estimated using nonparametric methods (''). length.number observations used build regression model. argument may increased increase smoothing quadratic nonparametric curve. bw Bandwidth used type='robust' homosk=FALSE. plotTube Whether tube plotted. addLine Whether linear model plotted. ... Additional arguments passed lines function addLine=TRUE.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/makeTube.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression tube — makeTube","text":"X x coordinates regression model. Y y coordinates regression model. tubeX x coordinates boundary tube. tubeY y coordinates boundary tube.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/makeTube.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Regression tube — makeTube","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/makeTube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression tube — makeTube","text":"","code":"# possum example plot(possum$total_l, possum$head_l) makeTube(possum$total_l, possum$head_l, 1) makeTube(possum$total_l, possum$head_l, 2) makeTube(possum$total_l, possum$head_l, 3)   # grades and TV example plot(gradestv) makeTube(gradestv$tv, gradestv$grades, 1.5)  plot(gradestv) makeTube(gradestv$tv, gradestv$grades, 1.5, stDev = \"o\")  plot(gradestv) makeTube(gradestv$tv, gradestv$grades, 1.5, type = \"robust\")  plot(gradestv) makeTube(gradestv$tv, gradestv$grades, 1.5, type = \"robust\", stDev = \"o\")   # what can go wrong with a basic least squares model # 1 x <- runif(100) y <- 25 * x - 20 * x^2 + rnorm(length(x), sd = 1.5) plot(x, y) makeTube(x, y, type = \"q\")  # 2 x <- c(-0.6, -0.46, -0.091, runif(97)) y <- 25 * x + rnorm(length(x)) y[2] <- y[2] + 8 y[1] <- y[1] + 1 plot(x, y, ylim = range(y) + c(-10, 5)) makeTube(x, y)  # 3 x <- runif(100) y <- 5 * x + rnorm(length(x), sd = x) plot(x, y) makeTube(x, y, stDev = \"l\", bw = 0.03)"},{"path":"https://openintrostat.github.io/openintro/reference/malaria.html","id":null,"dir":"Reference","previous_headings":"","what":"Malaria Vaccine Trial — malaria","title":"Malaria Vaccine Trial — malaria","text":"Volunteer patients randomized one two experiment groups receive experimental vaccine placebo.  subsequently exposed drug-sensitive strain malaria observed see whether came infection.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/malaria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Malaria Vaccine Trial — malaria","text":"","code":"malaria"},{"path":"https://openintrostat.github.io/openintro/reference/malaria.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Malaria Vaccine Trial — malaria","text":"data frame 20 observations following 2 variables. treatment Whether person given experimental vaccine placebo. outcome Whether person got infection infection.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/malaria.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Malaria Vaccine Trial — malaria","text":"Lyke et al. 2017. PfSPZ vaccine induces strain-transcending T cells durable protection heterologous controlled human malaria infection. PNAS 114(10):2711-2716. doi:10.1073/pnas.1615324114 .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/malaria.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Malaria Vaccine Trial — malaria","text":"study, volunteer patients randomized one two experiment groups: 14 patients received experimental vaccine 6 patients received placebo vaccine.  Nineteen weeks later, 20 patients exposed drug-sensitive malaria virus strain; motivation using drug-sensitive strain virus ethical considerations, allowing infections treated effectively.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/malaria.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Malaria Vaccine Trial — malaria","text":"","code":"library(dplyr)  # Calculate conditional probabilities of infection after vaccine/placebo malaria |>   count(treatment, outcome) |>   group_by(treatment) |>   mutate(prop = n / sum(n)) #> # A tibble: 3 × 4 #> # Groups:   treatment [2] #>   treatment outcome          n  prop #>   <fct>     <fct>        <int> <dbl> #> 1 placebo   infection        6 1     #> 2 vaccine   infection        5 0.357 #> 3 vaccine   no infection     9 0.643  # Fisher's exact text fisher.test(table(malaria)) #>  #> \tFisher's Exact Test for Count Data #>  #> data:  table(malaria) #> p-value = 0.01409 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  1.338381      Inf #> sample estimates: #> odds ratio  #>        Inf  #>"},{"path":"https://openintrostat.github.io/openintro/reference/male_heights.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of 100 male heights — male_heights","title":"Sample of 100 male heights — male_heights","text":"Random sample based Food Commodity Intake Database distribution","code":""},{"path":"https://openintrostat.github.io/openintro/reference/male_heights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of 100 male heights — male_heights","text":"","code":"male_heights"},{"path":"https://openintrostat.github.io/openintro/reference/male_heights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of 100 male heights — male_heights","text":"data frame 100 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/male_heights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample of 100 male heights — male_heights","text":"Eat America - Food Commodity Intake Database. Available https://fcid.foodrisk.org/.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/male_heights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of 100 male heights — male_heights","text":"","code":"male_heights #> # A tibble: 100 × 1 #>    heights #>      <int> #>  1      71 #>  2      67 #>  3      69 #>  4      70 #>  5      68 #>  6      63 #>  7      68 #>  8      72 #>  9      70 #> 10      70 #> # ℹ 90 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/male_heights_fcid.html","id":null,"dir":"Reference","previous_headings":"","what":"Random sample of adult male heights — male_heights_fcid","title":"Random sample of adult male heights — male_heights_fcid","text":"sample based data USDA Food Commodity Intake Database.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/male_heights_fcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random sample of adult male heights — male_heights_fcid","text":"","code":"male_heights_fcid"},{"path":"https://openintrostat.github.io/openintro/reference/male_heights_fcid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random sample of adult male heights — male_heights_fcid","text":"data frame 100 observations following variable. height_inch Height, inches.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/male_heights_fcid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Random sample of adult male heights — male_heights_fcid","text":"Simulated based data USDA.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/male_heights_fcid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random sample of adult male heights — male_heights_fcid","text":"","code":"data(male_heights_fcid) histPlot(male_heights_fcid$height_inch)"},{"path":"https://openintrostat.github.io/openintro/reference/mammals.html","id":null,"dir":"Reference","previous_headings":"","what":"Sleep in Mammals — mammals","title":"Sleep in Mammals — mammals","text":"dataset includes data 39 species mammals distributed 13 orders. data used analyzing relationship constitutional ecological factors sleeping mammals. Two qualitatively different sleep variables (dreaming non dreaming) recorded. Constitutional variables life span, body weight, brain weight gestation time evaluated. Ecological variables severity predation, safety sleeping place overall danger inferred field observations literature.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sleep in Mammals — mammals","text":"","code":"mammals"},{"path":"https://openintrostat.github.io/openintro/reference/mammals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sleep in Mammals — mammals","text":"data frame 62 observations following 11 variables. species Species mammals body_wt Total body weight mammal (kg) brain_wt Brain weight mammal (kg) non_dreaming Number hours non dreaming sleep dreaming Number hours dreaming sleep total_sleep Total number hours sleep life_span Life span (years) gestation Gestation time (days) predation index likely mammal preyed upon. 1 = least likely preyed upon. 5 = likely preyed upon. exposure index exposed mammal sleep. 1 = least exposed (e.g., sleeps well-protected den). 5 = exposed. danger index much danger mammal faces animals. index based upon Predation Exposure. 1 = least danger animals. 5 = danger animals.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sleep in Mammals — mammals","text":"http://www.statsci.org/data/general/sleep.txt","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammals.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sleep in Mammals — mammals","text":"T. Allison D. Cicchetti, \"Sleep mammals: ecological constitutional correlates,\" Arch. Hydrobiol, vol. 75, p. 442, 1975.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sleep in Mammals — mammals","text":"","code":"library(ggplot2)  ggplot(mammals, aes(x = log(body_wt), y = log(brain_wt))) +   geom_point() +   geom_smooth(method = \"lm\") +   labs(x = \"Log of body weight\", x = \"Log of brain weight\") #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://openintrostat.github.io/openintro/reference/mammogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Experiment with Mammogram Randomized — mammogram","title":"Experiment with Mammogram Randomized — mammogram","text":"experiment 89,835 women randomized either get mammogram non-mammogram breast screening. response measured whether died breast cancer within 25 years.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experiment with Mammogram Randomized — mammogram","text":"","code":"mammogram"},{"path":"https://openintrostat.github.io/openintro/reference/mammogram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Experiment with Mammogram Randomized — mammogram","text":"data frame 89835 observations following 2 variables. breast_cancer_death factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammogram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Experiment with Mammogram Randomized — mammogram","text":"Miller AB. 2014. Twenty five year follow-breast cancer incidence mortality Canadian National Breast Screening Study: randomised screening trial. BMJ 2014;348:g366.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mammogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Experiment with Mammogram Randomized — mammogram","text":"","code":"table(mammogram) #>            breast_cancer_death #> treatment      no   yes #>   control   44405   505 #>   mammogram 44425   500 chisq.test(table(mammogram)) #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  table(mammogram) #> X-squared = 0.01748, df = 1, p-value = 0.8948 #>"},{"path":"https://openintrostat.github.io/openintro/reference/manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"manhattan — manhattan","title":"manhattan — manhattan","text":"data frame containing data apartment rentals Manhattan.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/manhattan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"manhattan — manhattan","text":"","code":"manhattan"},{"path":"https://openintrostat.github.io/openintro/reference/manhattan.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"manhattan — manhattan","text":"data frame 20 observations following 1 variable. rent Monthly rent 1 bedroom apartment listed \"rent owner\".","code":""},{"path":"https://openintrostat.github.io/openintro/reference/manhattan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"manhattan — manhattan","text":"","code":"library(ggplot2)  ggplot(manhattan, aes(rent)) +   geom_histogram(color = \"white\", binwidth = 300) +   theme_minimal() +   labs(     title = \"Rent in Manhattan\",     subtitle = \"1 Bedroom Apartments\",     x = \"Rent (in US$)\",     caption = \"Source: Craigslist\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/marathon.html","id":null,"dir":"Reference","previous_headings":"","what":"New York City Marathon Times (outdated) — marathon","title":"New York City Marathon Times (outdated) — marathon","text":"Marathon times male female winners New York City Marathon 1970-1999. See nyc_marathon updated dataset. recommend using dataset since data source taken web.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/marathon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New York City Marathon Times (outdated) — marathon","text":"","code":"marathon"},{"path":"https://openintrostat.github.io/openintro/reference/marathon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"New York City Marathon Times (outdated) — marathon","text":"data frame 60 observations following 3 variables. year Year gender Gender time Running time (hours)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/marathon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"New York City Marathon Times (outdated) — marathon","text":"Data source removed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/marathon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New York City Marathon Times (outdated) — marathon","text":"","code":"library(ggplot2)  ggplot(marathon, aes(x = time)) +   geom_histogram(binwidth = 0.15)   ggplot(marathon, aes(y = time, x = gender)) +   geom_boxplot()"},{"path":"https://openintrostat.github.io/openintro/reference/mariokart.html","id":null,"dir":"Reference","previous_headings":"","what":"Wii Mario Kart auctions from Ebay — mariokart","title":"Wii Mario Kart auctions from Ebay — mariokart","text":"Auction data Ebay game Mario Kart Nintendo Wii. data collected early October 2009.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mariokart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wii Mario Kart auctions from Ebay — mariokart","text":"","code":"mariokart"},{"path":"https://openintrostat.github.io/openintro/reference/mariokart.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wii Mario Kart auctions from Ebay — mariokart","text":"data frame 143 observations following 12 variables. prices US dollars. id Auction ID assigned Ebay. duration Auction length, days. n_bids Number bids. cond Game condition, either new used. start_pr Start price auction. ship_pr Shipping price. total_pr Total price, equals auction price plus shipping price. ship_sp Shipping speed method. seller_rate seller's rating Ebay. number positive ratings minus number negative ratings seller. stock_photo Whether auction feature photo stock photo . picture used many auctions, called stock photo. wheels Number Wii wheels included auction. steering wheel attachments make seem though actually driving game. used controller, turning wheel actually causes character screen turn. title title auctions.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mariokart.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wii Mario Kart auctions from Ebay — mariokart","text":"Ebay.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mariokart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wii Mario Kart auctions from Ebay — mariokart","text":"several interesting features data. First , note two outliers data. serve nice example one encountering outlier: examine data point remove good reason. two cases, can see auction titles included items auctions besides game, justifies removing dataset. dataset includes auctions full week October 2009. Auctions included dataset satisfied number conditions. (1) included search \"wii mario kart\" ebay.com, (2) items Video Games > Games > Nintendo Wii section Ebay, (3) listing auction exclusively \"Buy Now\" listing (sellers sometimes offer optional higher price buyer end bidding win auction immediately, optional Buy Now auction), (4) item listed actual game, (5) item sold US, (6) item least one bidder, (7) items included auction exception racing wheels, either generic brand-name acceptable, (8) auction end Buy Now option.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mariokart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wii Mario Kart auctions from Ebay — mariokart","text":"","code":"library(ggplot2) library(broom) library(dplyr)  # Identify outliers ggplot(mariokart, aes(x = total_pr, y = cond)) +   geom_boxplot()   # Replot without the outliers mariokart |>   filter(total_pr < 80) |>   ggplot(aes(x = total_pr, y = cond)) +   geom_boxplot()   # Fit a multiple regression models mariokart_no <- mariokart |> filter(total_pr < 80) m1 <- lm(total_pr ~ cond + stock_photo + duration + wheels, data = mariokart_no) tidy(m1) #> # A tibble: 5 × 5 #>   term           estimate std.error statistic  p.value #>   <chr>             <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)     41.3        1.71     24.2   4.87e-51 #> 2 condused        -5.13       1.05     -4.88  2.91e- 6 #> 3 stock_photoyes   1.08       1.06      1.02  3.08e- 1 #> 4 duration        -0.0268     0.190    -0.141 8.88e- 1 #> 5 wheels           7.29       0.555    13.1   5.89e-26 m2 <- lm(total_pr ~ cond + stock_photo + wheels, data = mariokart_no) tidy(m2) #> # A tibble: 4 × 5 #>   term           estimate std.error statistic  p.value #>   <chr>             <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)       41.2      1.49      27.6  6.64e-58 #> 2 condused          -5.18     0.996     -5.20 7.21e- 7 #> 3 stock_photoyes     1.12     1.02       1.10 2.75e- 1 #> 4 wheels             7.30     0.545     13.4  1.11e-26 m3 <- lm(total_pr ~ cond + wheels, data = mariokart_no) tidy(m3) #> # A tibble: 3 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)    42.4      1.07      39.8  1.75e-77 #> 2 condused       -5.58     0.925     -6.04 1.35e- 8 #> 3 wheels          7.23     0.542     13.3  1.29e-26  # Fit diagnostics aug_m3 <- augment(m3)  ggplot(aug_m3, aes(x = .fitted, y = .resid)) +   geom_point() +   geom_hline(yintercept = 0, linetype = \"dashed\") +   labs(x = \"Fitted values\", y = \"Residuals\")   ggplot(aug_m3, aes(x = .fitted, y = abs(.resid))) +   geom_point() +   geom_hline(yintercept = 0, linetype = \"dashed\") +   labs(x = \"Fitted values\", y = \"Absolute value of residuals\")   ggplot(aug_m3, aes(x = 1:nrow(aug_m3), y = .resid)) +   geom_point() +   geom_hline(yintercept = 0, linetype = \"dashed\") +   labs(x = \"Order of data collection\", y = \"Residuals\")   ggplot(aug_m3, aes(x = cond, y = .resid)) +   geom_boxplot() +   labs(x = \"Condition\", y = \"Residuals\")   ggplot(aug_m3, aes(x = wheels, y = .resid)) +   geom_point() +   labs(     x = \"Number of wheels\", y = \"Residuals\",     title = \"Notice curvature\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/mcu_films.html","id":null,"dir":"Reference","previous_headings":"","what":"Marvel Cinematic Universe films — mcu_films","title":"Marvel Cinematic Universe films — mcu_films","text":"list Marvel Cinematic Universe films Infinity saga. Infinity saga 23 movie storyline spanning Ironman 2008 Endgame 2019.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mcu_films.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marvel Cinematic Universe films — mcu_films","text":"","code":"mcu_films"},{"path":"https://openintrostat.github.io/openintro/reference/mcu_films.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Marvel Cinematic Universe films — mcu_films","text":"data frame 23 rows 7 variables. movie Title movie. length_hrs Length movie: hours portion. length_min Length movie: minutes portion. release_date Date movie released US. opening_weekend_us Box office totals opening weekend US. gross_us box office totals US. gross_world box office totals world wide.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mcu_films.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Marvel Cinematic Universe films — mcu_films","text":"Internet Movie Database.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mcu_films.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marvel Cinematic Universe films — mcu_films","text":"Box office figures adjusted specific year. year film released.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mcu_films.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marvel Cinematic Universe films — mcu_films","text":"","code":"library(ggplot2) library(scales)  ggplot(mcu_films, aes(x = opening_weekend_us, y = gross_us)) +   geom_point() +   labs(     title = \"MCU Box Office Totals: Opening weekend vs. all-time\",     x = \"Opening weekend totals (USD in millions)\",     y = \"All-time totals (USD)\"   ) +   scale_x_continuous(labels = label_dollar(scale = 1 / 1000000)) +   scale_y_continuous(labels = label_dollar(scale = 1 / 1000000))"},{"path":"https://openintrostat.github.io/openintro/reference/midterms_house.html","id":null,"dir":"Reference","previous_headings":"","what":"President's party performance and unemployment rate — midterms_house","title":"President's party performance and unemployment rate — midterms_house","text":"Covers midterm elections.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/midterms_house.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"President's party performance and unemployment rate — midterms_house","text":"","code":"midterms_house"},{"path":"https://openintrostat.github.io/openintro/reference/midterms_house.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"President's party performance and unemployment rate — midterms_house","text":"data frame 29 observations following 5 variables. year Year. potus president office. party President's party: Democrat Republican. unemp Unemployment rate. house_change Change House seats President's party.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/midterms_house.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"President's party performance and unemployment rate — midterms_house","text":"Wikipedia.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/midterms_house.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"President's party performance and unemployment rate — midterms_house","text":"older version data unemploy_pres.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/midterms_house.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"President's party performance and unemployment rate — midterms_house","text":"","code":"library(ggplot2)  ggplot(midterms_house, aes(x = unemp, y = house_change)) +   geom_point()"},{"path":"https://openintrostat.github.io/openintro/reference/migraine.html","id":null,"dir":"Reference","previous_headings":"","what":"Migraines and acupuncture — migraine","title":"Migraines and acupuncture — migraine","text":"Experiment involving acupuncture sham acupuncture (placebo) treatment migraines.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/migraine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migraines and acupuncture — migraine","text":"","code":"migraine"},{"path":"https://openintrostat.github.io/openintro/reference/migraine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Migraines and acupuncture — migraine","text":"data frame 89 observations following 2 variables. pain_free factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/migraine.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Migraines and acupuncture — migraine","text":"G. Allais et al. Ear acupuncture treatment migraine attacks: randomized trial efficacy appropriate versus inappropriate acupoints. : Neurological Sci. 32.1 (2011), pp. 173-175.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/migraine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Migraines and acupuncture — migraine","text":"","code":"migraine #> # A tibble: 89 × 2 #>    group     pain_free #>    <fct>     <fct>     #>  1 treatment yes       #>  2 treatment yes       #>  3 treatment yes       #>  4 treatment yes       #>  5 treatment yes       #>  6 treatment yes       #>  7 treatment yes       #>  8 treatment yes       #>  9 treatment yes       #> 10 treatment yes       #> # ℹ 79 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/military.html","id":null,"dir":"Reference","previous_headings":"","what":"US Military Demographics — military","title":"US Military Demographics — military","text":"dataset contains demographic information every member US armed forces including gender, race, rank.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/military.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Military Demographics — military","text":"","code":"military"},{"path":"https://openintrostat.github.io/openintro/reference/military.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Military Demographics — military","text":"data frame 1,414,593 observations following 6 variables. grade status service member enlisted officer warrant officer. branch branch armed forces: air force, army, marine corps, navy. gender Whether service member female male. race race identified service member: ami/aln (american indian/alaskan native), asian, black, multi (multi-ethnic), p/(pacific islander), unk (unknown), white. hisp Whether service member identifies hispanic (TRUE) (FALSE). rank numeric rank service member (higher number indicates higher rank).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/military.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Military Demographics — military","text":"Data provided Department Defense made available https://catalog.data.gov/dataset/personnel-trends--gender-race, retrieved 2012-02-20.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/military.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"US Military Demographics — military","text":"branches covered dataset include Army, Navy, Air Force, Marine Corps. Demographic information Coast Guard contained original dataset included .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/military.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Military Demographics — military","text":"","code":"if (FALSE) { library(dplyr) library(ggplot2) library(forcats)  # Proportion of females in military branches military |>   ggplot(aes(x = branch, fill = gender)) +   geom_bar(position = \"fill\") +   labs(     x = \"Branch\", y = \"Proportion\", fill = \"Gender\",     title = \"Proportion of females in military branches\"   )  # Proportion of army officer females across ranks military |>   filter(     grade == \"officer\",     branch == \"army\"   ) |>   ggplot(aes(x = factor(rank), fill = fct_rev(gender))) +   geom_bar(position = \"fill\") +   labs(     x = \"Rank\", y = \"Proportion\", fill = \"Gender\",     title = \"Proportion of army officer females across ranks\"   ) }"},{"path":"https://openintrostat.github.io/openintro/reference/mlb.html","id":null,"dir":"Reference","previous_headings":"","what":"Salary data for Major League Baseball (2010) — mlb","title":"Salary data for Major League Baseball (2010) — mlb","text":"Salary data Major League Baseball players year 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salary data for Major League Baseball (2010) — mlb","text":"","code":"mlb"},{"path":"https://openintrostat.github.io/openintro/reference/mlb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salary data for Major League Baseball (2010) — mlb","text":"data frame 828 observations following 4 variables. player Player name team Team position Field position salary Salary ($1000s)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Salary data for Major League Baseball (2010) — mlb","text":"https://databases.usatoday.com/mlb-salaries/, retrieved 2011-02-23.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Salary data for Major League Baseball (2010) — mlb","text":"","code":"# _____ Basic Histogram _____ # hist(mlb$salary / 1000,   breaks = 15,   main = \"\", xlab = \"Salary (millions of dollars)\", ylab = \"\",   axes = FALSE,   col = \"#22558844\" ) axis(1, seq(0, 40, 10)) axis(2, c(0, 500)) axis(2, seq(100, 400, 100), rep(\"\", 4), tcl = -0.2)   # _____ Histogram on Log Scale _____ # hist(log(mlb$salary / 1000),   breaks = 15,   main = \"\", xlab = \"log(Salary)\", ylab = \"\",   axes = FALSE, col = \"#22558844\" ) axis(1) # , seq(0, 40, 10)) axis(2, seq(0, 300, 100))   # _____ Box plot of log(salary) against position _____ # boxPlot(log(mlb$salary / 1000), mlb$position, horiz = TRUE, ylab = \"\")"},{"path":"https://openintrostat.github.io/openintro/reference/mlb_players_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Batter Statistics for 2018 Major League Baseball (MLB) Season — mlb_players_18","title":"Batter Statistics for 2018 Major League Baseball (MLB) Season — mlb_players_18","text":"Batter statistics 2018 Major League Baseball season.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb_players_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batter Statistics for 2018 Major League Baseball (MLB) Season — mlb_players_18","text":"","code":"mlb_players_18"},{"path":"https://openintrostat.github.io/openintro/reference/mlb_players_18.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Batter Statistics for 2018 Major League Baseball (MLB) Season — mlb_players_18","text":"data frame 1270 observations following 19 variables. name Player name team Team abbreviation position Position abbreviation: 1B = first base, 2B = second base, 3B = third base, C = catcher, CF = center field (outfield), DH = designated hitter, LF = left field (outfield), P = pitcher, RF = right field (outfield), SS = shortstop. games Number games played. AB bats. R Runs. H Hits. doubles Doubles. triples Triples. HR Home runs. RBI Runs batted . walks Walks. strike_outs Strike outs. stolen_bases Stolen bases. caught_stealing_base Number times caught stealing base. AVG Batting average. OBP -base percentage. SLG Slugging percentage. OPS -base percentage plus slugging percentage.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb_players_18.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Batter Statistics for 2018 Major League Baseball (MLB) Season — mlb_players_18","text":"https://www.mlb.com/stats","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/mlb_players_18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batter Statistics for 2018 Major League Baseball (MLB) Season — mlb_players_18","text":"","code":"d <- subset(mlb_players_18, !position %in% c(\"P\", \"DH\") & AB >= 100) dim(d) #> [1] 429  19  # _____ Per Position, No Further Grouping _____ # plot(d$OBP ~ as.factor(d$position))  model <- lm(OBP ~ as.factor(position), d) summary(model) #>  #> Call: #> lm(formula = OBP ~ as.factor(position), data = d) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -0.162185 -0.024185 -0.000745  0.026063  0.149038  #>  #> Coefficients: #>                        Estimate Std. Error t value             Pr(>|t|)     #> (Intercept)            0.328490   0.005544  59.252 < 0.0000000000000002 *** #> as.factor(position)2B -0.013562   0.007663  -1.770             0.077506 .   #> as.factor(position)3B -0.010745   0.007696  -1.396             0.163433     #> as.factor(position)C  -0.026553   0.007432  -3.573             0.000394 *** #> as.factor(position)CF -0.017528   0.007766  -2.257             0.024520 *   #> as.factor(position)LF -0.004264   0.007766  -0.549             0.583277     #> as.factor(position)RF -0.004305   0.007731  -0.557             0.577911     #> as.factor(position)SS -0.016769   0.008197  -2.046             0.041397 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.03959 on 421 degrees of freedom #> Multiple R-squared:  0.04361,\tAdjusted R-squared:  0.0277  #> F-statistic: 2.742 on 7 and 421 DF,  p-value: 0.008569 #>  anova(model) #> Analysis of Variance Table #>  #> Response: OBP #>                      Df  Sum Sq   Mean Sq F value   Pr(>F)    #> as.factor(position)   7 0.03009 0.0042983  2.7421 0.008569 ** #> Residuals           421 0.65992 0.0015675                     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # _____ Simplified Analysis, Fewer Positions _____ # pos <- list(   c(\"LF\", \"CF\", \"RF\"),   c(\"1B\", \"2B\", \"3B\", \"SS\"),   \"C\" ) POS <- c(\"OF\", \"IF\", \"C\") table(d$position) #>  #> 1B 2B 3B  C CF LF RF SS  #> 51 56 55 64 53 53 54 43   # _____ On-Base Percentage Across Positions _____ # out <- c() gp <- c() for (i in 1:length(pos)) {   these <- which(d$position %in% pos[[i]])   out <- c(out, d$OBP[these])   gp <- c(gp, rep(POS[i], length(these))) } plot(out ~ as.factor(gp))  summary(lm(out ~ as.factor(gp))) #>  #> Call: #> lm(formula = out ~ as.factor(gp)) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -0.157819 -0.024819 -0.001385  0.027062  0.140181  #>  #> Coefficients: #>                 Estimate Std. Error t value             Pr(>|t|)     #> (Intercept)     0.301937   0.004972  60.729 < 0.0000000000000002 *** #> as.factor(gp)IF 0.016448   0.005695   2.888              0.00408 **  #> as.factor(gp)OF 0.017881   0.005883   3.040              0.00252 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.03977 on 426 degrees of freedom #> Multiple R-squared:  0.02328,\tAdjusted R-squared:  0.01869  #> F-statistic: 5.077 on 2 and 426 DF,  p-value: 0.006624 #>  anova(lm(out ~ as.factor(gp))) #> Analysis of Variance Table #>  #> Response: out #>                Df  Sum Sq   Mean Sq F value   Pr(>F)    #> as.factor(gp)   2 0.01606 0.0080314  5.0766 0.006624 ** #> Residuals     426 0.67395 0.0015820                     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://openintrostat.github.io/openintro/reference/mlb_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Major League Baseball Teams Data. — mlb_teams","title":"Major League Baseball Teams Data. — mlb_teams","text":"subset data Major League Baseball teams Lahman's Baseball Database. full dataset available Lahman R package.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Major League Baseball Teams Data. — mlb_teams","text":"","code":"mlb_teams"},{"path":"https://openintrostat.github.io/openintro/reference/mlb_teams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Major League Baseball Teams Data. — mlb_teams","text":"data frame 2784 rows 41 variables. year Year play. league_id League team plays levels AL (American League) NL (National League). division_id Division team plays levels W (west), E (east) C (central). rank Team's rank division end regular season. games_played Games played. home_games Games played home. wins Number games won. losses Number games lost. division_winner team win division? Levels Y (yes) N (). wild_card_winner team wild card winner. Levels Y (yes) N (). league_winner team win league? Levels Y (yes) N (). world_series_winner team win World Series? Levels Y (yes) N (). runs_scored Number runs scored season. at_bats Number bats season. hits Number hits season. Includes singles, doubles, triples homeruns. doubles Number doubles hit. triples Number triples hit. homeruns Homeruns batters. walks Number walks. strikeouts_by_batters Number batters struckout. stolen_bases Number stolen bases. caught_stealing Number base runners caught stealing. batters_hit_by_pitch Number batters hit pitch. sacrifice_flies Number sacrifice flies. opponents_runs_scored Number runs scored opponents. earned_runs_allowed Number earned runs allowed. earned_run_average Earned run average. complete_games Number games single pitcher played entire game. shutouts Number shutouts. saves Number saves. outs_pitches Number outs pitched season (number innings pitched times 3). hits_allowed Number hits made opponents. homeruns_allowed Number homeruns hit opponents. walks_allowed Number opponents walked. strikeouts_by_pitchers Number opponents struckout. errors Number errors. double_plays Number double plays. fielding_percentage Teams fielding  percentage. team_name Full name team. ball_park Home ballpark name. home_attendance Home attendance total.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb_teams.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Major League Baseball Teams Data. — mlb_teams","text":"Lahmans Baseball Database","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlb_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Major League Baseball Teams Data. — mlb_teams","text":"","code":"library(dplyr)  # List the World Series winning teams for each year mlb_teams |>   filter(world_series_winner == \"Y\") |>   select(year, team_name, ball_park) #>     year              team_name                     ball_park #> 1   1884       Providence Grays         Messer Street Grounds #> 2   1887     Detroit Wolverines               Recreation Park #> 3   1888        New York Giants                Polo Grounds I #> 4   1889        New York Giants               Polo Grounds II #> 5   1903       Boston Americans     Huntington Avenue Grounds #> 6   1905        New York Giants              Polo Grounds III #> 7   1906      Chicago White Sox            South Side Park II #> 8   1907           Chicago Cubs             West Side Park II #> 9   1908           Chicago Cubs             West Side Park II #> 10  1909     Pittsburgh Pirates  Exposition Park/Forbes Field #> 11  1910 Philadelphia Athletics                    Shibe Park #> 12  1911 Philadelphia Athletics                    Shibe Park #> 13  1912         Boston Red Sox                 Fenway Park I #> 14  1913 Philadelphia Athletics                    Shibe Park #> 15  1914          Boston Braves         South End Grounds III #> 16  1915         Boston Red Sox                 Fenway Park I #> 17  1916         Boston Red Sox                 Fenway Park I #> 18  1917      Chicago White Sox                 Comiskey Park #> 19  1918         Boston Red Sox                 Fenway Park I #> 20  1919        Cincinnati Reds                 Crosley Field #> 21  1920      Cleveland Indians                League Park II #> 22  1921        New York Giants               Polo Grounds IV #> 23  1922        New York Giants               Polo Grounds IV #> 24  1923       New York Yankees              Yankee Stadium I #> 25  1924    Washington Senators            Griffith Stadium I #> 26  1925     Pittsburgh Pirates                  Forbes Field #> 27  1926    St. Louis Cardinals           Sportsman's Park IV #> 28  1927       New York Yankees              Yankee Stadium I #> 29  1928       New York Yankees              Yankee Stadium I #> 30  1929 Philadelphia Athletics                    Shibe Park #> 31  1930 Philadelphia Athletics                    Shibe Park #> 32  1931    St. Louis Cardinals           Sportsman's Park IV #> 33  1932       New York Yankees              Yankee Stadium I #> 34  1933        New York Giants               Polo Grounds IV #> 35  1934    St. Louis Cardinals           Sportsman's Park IV #> 36  1935         Detroit Tigers                   Navin Field #> 37  1936       New York Yankees              Yankee Stadium I #> 38  1937       New York Yankees              Yankee Stadium I #> 39  1938       New York Yankees              Yankee Stadium I #> 40  1939       New York Yankees              Yankee Stadium I #> 41  1940        Cincinnati Reds                 Crosley Field #> 42  1941       New York Yankees              Yankee Stadium I #> 43  1942    St. Louis Cardinals           Sportsman's Park IV #> 44  1943       New York Yankees              Yankee Stadium I #> 45  1944    St. Louis Cardinals           Sportsman's Park IV #> 46  1945         Detroit Tigers                Briggs Stadium #> 47  1946    St. Louis Cardinals           Sportsman's Park IV #> 48  1947       New York Yankees              Yankee Stadium I #> 49  1948      Cleveland Indians             Cleveland Stadium #> 50  1949       New York Yankees              Yankee Stadium I #> 51  1950       New York Yankees              Yankee Stadium I #> 52  1951       New York Yankees              Yankee Stadium I #> 53  1952       New York Yankees              Yankee Stadium I #> 54  1953       New York Yankees              Yankee Stadium I #> 55  1954        New York Giants               Polo Grounds IV #> 56  1955       Brooklyn Dodgers                  Ebbets Field #> 57  1956       New York Yankees              Yankee Stadium I #> 58  1957       Milwaukee Braves                County Stadium #> 59  1958       New York Yankees              Yankee Stadium I #> 60  1959    Los Angeles Dodgers Los Angeles Memorial Coliseum #> 61  1960     Pittsburgh Pirates                  Forbes Field #> 62  1961       New York Yankees              Yankee Stadium I #> 63  1962       New York Yankees              Yankee Stadium I #> 64  1963    Los Angeles Dodgers                Dodger Stadium #> 65  1964    St. Louis Cardinals           Sportsman's Park IV #> 66  1965    Los Angeles Dodgers                Dodger Stadium #> 67  1966      Baltimore Orioles              Memorial Stadium #> 68  1967    St. Louis Cardinals              Busch Stadium II #> 69  1968         Detroit Tigers                 Tiger Stadium #> 70  1969          New York Mets                  Shea Stadium #> 71  1970      Baltimore Orioles              Memorial Stadium #> 72  1971     Pittsburgh Pirates          Three Rivers Stadium #> 73  1972      Oakland Athletics              Oakland Coliseum #> 74  1973      Oakland Athletics              Oakland Coliseum #> 75  1974      Oakland Athletics              Oakland Coliseum #> 76  1975        Cincinnati Reds            Riverfront Stadium #> 77  1976        Cincinnati Reds            Riverfront Stadium #> 78  1977       New York Yankees             Yankee Stadium II #> 79  1978       New York Yankees             Yankee Stadium II #> 80  1979     Pittsburgh Pirates          Three Rivers Stadium #> 81  1980  Philadelphia Phillies              Veterans Stadium #> 82  1981    Los Angeles Dodgers                Dodger Stadium #> 83  1982    St. Louis Cardinals              Busch Stadium II #> 84  1983      Baltimore Orioles              Memorial Stadium #> 85  1984         Detroit Tigers                 Tiger Stadium #> 86  1985     Kansas City Royals                Royals Stadium #> 87  1986          New York Mets                  Shea Stadium #> 88  1987        Minnesota Twins   Hubert H Humphrey Metrodome #> 89  1988    Los Angeles Dodgers                Dodger Stadium #> 90  1989      Oakland Athletics              Oakland Coliseum #> 91  1990        Cincinnati Reds            Riverfront Stadium #> 92  1991        Minnesota Twins   Hubert H Humphrey Metrodome #> 93  1992      Toronto Blue Jays                       Skydome #> 94  1993      Toronto Blue Jays                       Skydome #> 95  1995         Atlanta Braves Atlanta-Fulton County Stadium #> 96  1996       New York Yankees             Yankee Stadium II #> 97  1997        Florida Marlins            Joe Robbie Stadium #> 98  1998       New York Yankees             Yankee Stadium II #> 99  1999       New York Yankees             Yankee Stadium II #> 100 2000       New York Yankees             Yankee Stadium II #> 101 2001   Arizona Diamondbacks             Bank One Ballpark #> 102 2002         Anaheim Angels    Edison International Field #> 103 2003        Florida Marlins            Pro Player Stadium #> 104 2004         Boston Red Sox                Fenway Park II #> 105 2005      Chicago White Sox           U.S. Cellular Field #> 106 2006    St. Louis Cardinals             Busch Stadium III #> 107 2007         Boston Red Sox                Fenway Park II #> 108 2008  Philadelphia Phillies            Citizens Bank Park #> 109 2009       New York Yankees            Yankee Stadium III #> 110 2010   San Francisco Giants                     AT&T Park #> 111 2011    St. Louis Cardinals             Busch Stadium III #> 112 2012   San Francisco Giants                     AT&T Park #> 113 2013         Boston Red Sox                Fenway Park II #> 114 2014   San Francisco Giants                     AT&T Park #> 115 2015     Kansas City Royals              Kauffman Stadium #> 116 2016           Chicago Cubs                 Wrigley Field #> 117 2017         Houston Astros              Minute Maid Park #> 118 2018         Boston Red Sox                Fenway Park II #> 119 2019   Washington Nationals                Nationals Park #> 120 2020    Los Angeles Dodgers                Dodger Stadium  # List the teams with their average number of wins and losses mlb_teams |>   group_by(team_name) |>   summarize(mean_wins = mean(wins), mean_losses = mean(losses)) |>   arrange((team_name)) #> # A tibble: 86 × 3 #>    team_name            mean_wins mean_losses #>    <chr>                    <dbl>       <dbl> #>  1 Anaheim Angels            83          79   #>  2 Arizona Diamondbacks      77.7        79.8 #>  3 Atlanta Braves            81.2        76.3 #>  4 Baltimore Orioles         79.1        75.4 #>  5 Boston Americans          75.4        70.3 #>  6 Boston Beaneaters         72.6        61.0 #>  7 Boston Bees               71          81.2 #>  8 Boston Braves             68.3        83.5 #>  9 Boston Doves              54.8        97.2 #> 10 Boston Red Caps           42.7        32.3 #> # ℹ 76 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/mlbbat10.html","id":null,"dir":"Reference","previous_headings":"","what":"Major League Baseball Player Hitting Statistics for 2010 — mlbbat10","title":"Major League Baseball Player Hitting Statistics for 2010 — mlbbat10","text":"Major League Baseball Player Hitting Statistics 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlbbat10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Major League Baseball Player Hitting Statistics for 2010 — mlbbat10","text":"","code":"mlbbat10"},{"path":"https://openintrostat.github.io/openintro/reference/mlbbat10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Major League Baseball Player Hitting Statistics for 2010 — mlbbat10","text":"data frame 1199 observations following 19 variables. name Player name team Team abbreviation position Player position game Number games at_bat Number bats run Number runs hit Number hits double Number doubles triple Number triples home_run Number home runs rbi Number runs batted total_base Total bases, computed 3HR + 23B + 1*2B + H walk Number walks strike_out Number strikeouts stolen_base Number stolen bases caught_stealing Number times caught stealing obp base percentage slg Slugging percentage (total_base / at_bat) bat_avg Batting average","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlbbat10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Major League Baseball Player Hitting Statistics for 2010 — mlbbat10","text":"https://www.mlb.com, retrieved 2011-04-22.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mlbbat10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Major League Baseball Player Hitting Statistics for 2010 — mlbbat10","text":"","code":"library(ggplot2) library(dplyr) library(scales)  mlbbat10_200 <- mlbbat10 |>   filter(mlbbat10$at_bat > 200)  # On-base percentage across positions ggplot(mlbbat10_200, aes(x = position, y = obp, fill = position)) +   geom_boxplot(show.legend = FALSE) +   scale_y_continuous(labels = label_number(suffix = \"%\", accuracy = 0.01)) +   labs(     title = \"On-base percentage across positions\",     y = \"On-base percentage across positions\",     x = \"Position\"   )   # Batting average across positions ggplot(mlbbat10_200, aes(x = bat_avg, fill = position)) +   geom_density(alpha = 0.5) +   labs(     title = \"Batting average across positions\",     fill = NULL,     y = \"Batting average\",     x = \"Position\"   )   # Mean number of home runs across positions mlbbat10_200 |>   group_by(position) |>   summarise(mean_home_run = mean(home_run)) |>   ggplot(aes(x = position, y = mean_home_run, fill = position)) +   geom_col(show.legend = FALSE) +   labs(     title = \"Mean number of home runs across positions\",     y = \"Home runs\",     x = \"Position\"   )   # Runs batted in across positions ggplot(mlbbat10_200, aes(x = run, y = obp, fill = position)) +   geom_boxplot(show.legend = FALSE) +   labs(     title = \"Runs batted in across positions\",     y = \"Runs\",     x = \"Position\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/mn_police_use_of_force.html","id":null,"dir":"Reference","previous_headings":"","what":"Minneapolis police use of force data. — mn_police_use_of_force","title":"Minneapolis police use of force data. — mn_police_use_of_force","text":"Minneapolis, data 2016 August 2021","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mn_police_use_of_force.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minneapolis police use of force data. — mn_police_use_of_force","text":"","code":"mn_police_use_of_force"},{"path":"https://openintrostat.github.io/openintro/reference/mn_police_use_of_force.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minneapolis police use of force data. — mn_police_use_of_force","text":"data frame 12925 rows 13 variables. response_datetime DateTime police response. problem Problem required police response. is_911_call Whether response iniated call 911. primary_offense Offense subject. subject_injury Whether subject injured Yes//null. force_type Type police force used. force_type_action Detail police force used. race Race subject. sex Gender subject. age Age subject. type_resistance Resistance police subject. precinct Precinct response occurred. neighborhood Neighborhood response occurred.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mn_police_use_of_force.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minneapolis police use of force data. — mn_police_use_of_force","text":"Minneapolis","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mn_police_use_of_force.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Minneapolis police use of force data. — mn_police_use_of_force","text":"","code":"library(dplyr) library(ggplot2)  # List percent of total for each race mn_police_use_of_force |>   count(race) |>   mutate(percent = round(n / sum(n) * 100, 2)) |>   arrange(desc(percent)) #>                 race    n percent #> 1              Black 7648   59.17 #> 2              White 3129   24.21 #> 3               <NA> 1024    7.92 #> 4    Native American  784    6.07 #> 5 Other / Mixed Race  205    1.59 #> 6              Asian  129    1.00 #> 7   Pacific Islander    6    0.05  # Display use of force count by three races race_sub <- c(\"Asian\", \"White\", \"Black\") ggplot(   mn_police_use_of_force |> filter(race %in% race_sub),   aes(force_type, ..count..) ) +   geom_point(stat = \"count\", size = 4) +   coord_flip() +   facet_grid(race ~ .) +   labs(     x = \"Force Type\",     y = \"Number of Incidents\"   ) #> Warning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(count)` instead."},{"path":"https://openintrostat.github.io/openintro/reference/movies.html","id":null,"dir":"Reference","previous_headings":"","what":"movies — movies","title":"movies — movies","text":"dataset information movies released 2003.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/movies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"movies — movies","text":"","code":"movies"},{"path":"https://openintrostat.github.io/openintro/reference/movies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"movies — movies","text":"data frame 140 observations following 5 variables. movie Title movie. genre Genre movie. score Critics score movie 0 100 scale. rating MPAA rating film. box_office Millions dollars earned box office US Canada.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/movies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"movies — movies","text":"Investigating Statistical Concepts, Applications Methods","code":""},{"path":"https://openintrostat.github.io/openintro/reference/movies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"movies — movies","text":"","code":"library(ggplot2)  ggplot(movies, aes(score, box_office, color = genre)) +   geom_point() +   theme_minimal() +   labs(     title = \"Does a critic score predict box office earnings?\",     x = \"Critic rating\",     y = \"Box office earnings (millions US$\",     color = \"Genre\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/mtl.html","id":null,"dir":"Reference","previous_headings":"","what":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","title":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","text":"data convenience sample 25 women 10 men middle-aged older. purpose study understand relationship sedentary behavior thickness medial temporal lobe (MTL) brain.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mtl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","text":"","code":"mtl"},{"path":"https://openintrostat.github.io/openintro/reference/mtl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","text":"data frame 35 observations following 23 variables. subject ID individual. sex Gender, takes values F (female) M (male). ethnic Ethnicity, simplified Caucasian . educ Years educational. e4grp APOE-4 status, taking value E4 Non-E4. age Age, years. mmse Score Mini-Mental State Examination, global cognition evaluation. ham_a Score Hamilton Rating Scale anxiety. ham_d Score Hamilton Rating Scale depression. dig_sym (authors R package) unsure meaning variable. delay_vp (authors R package) unsure meaning variable. bfr_selective_reminding_delayed (authors R package) unsure meaning variable. sitting Self-reported time sitting per day, averaged nearest hour. met_minwk Metabolic equivalent units score (activity level). score 0 means \"activity\" 3000 considered \"high activity\". ipa_qgrp Classification METminwk Low High. aca1 Thickness CA1 subregion MTL. aca23dg Thickness CA23DG subregion MTL. ae_cort Thickness subregion MTL. a_fusi_cort Thickness fusiform gyrus subregion MTL. a_ph_cort Thickness perirhinal cortex subregion MTL. a_pe_cort Thickness entorhinal cortex subregion MTL. asubic Thickness subiculum subregion MTL. total Total MTL thickness.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mtl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","text":"Siddarth P, Burggren AC, Eyre HA, Small GW, Merrill DA. 2018. Sedentary behavior associated reduced medial temporal lobe thickness middle-aged older adults. PLoS ONE 13(4): e0195549. doi:10.1371/journal.pone.0195549 . Thank Professor Silas Bergen Winona State University pointing us dataset!","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mtl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","text":"New York Times article references study. https://www.nytimes.com/2018/04/19/opinion/standing----desk--make--smarter.html","code":""},{"path":"https://openintrostat.github.io/openintro/reference/mtl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Medial temporal lobe (MTL) and other data for 26 participants — mtl","text":"","code":"library(ggplot2)  ggplot(mtl, aes(x = ipa_qgrp, y = met_minwk)) +   geom_boxplot()"},{"path":"https://openintrostat.github.io/openintro/reference/murders.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for 20 metropolitan areas — murders","title":"Data for 20 metropolitan areas — murders","text":"Population, percent poverty, percent unemployment, murder rate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/murders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for 20 metropolitan areas — murders","text":"","code":"murders"},{"path":"https://openintrostat.github.io/openintro/reference/murders.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for 20 metropolitan areas — murders","text":"data frame 20 metropolitan areas following 4 variables. population Population. perc_pov Percent poverty. perc_unemp Percent unemployed. annual_murders_per_mil Number murders per year per million people.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/murders.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data for 20 metropolitan areas — murders","text":"provenance data hence recommend using analysis.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/murders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for 20 metropolitan areas — murders","text":"","code":"library(ggplot2)  ggplot(murders, aes(x = perc_pov, y = annual_murders_per_mil)) +   geom_point() +   labs(     x = \"Percent in poverty\",     y = \"Number of murders per year per million people\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/myPDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom PDF function — myPDF","title":"Custom PDF function — myPDF","text":"similar function pdf png, except different defaults provided, including plotting parameters.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/myPDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom PDF function — myPDF","text":"","code":"myPDF(   fileName,   width = 5,   height = 3,   mar = c(3.9, 3.9, 1, 1),   mgp = c(2.8, 0.55, 0),   las = 1,   tcl = -0.3,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/myPDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom PDF function — myPDF","text":"fileName File name image output. name end .pdf. width width image file (inches). Default: 5. height height image file (inches). Default: 3. mar Plotting margins. change, input numerical vector length 4. mgp Margin graphing parameters. change, input numerical vector length 3. first argument specifies x y labels placed; second specifies axis labels placed; third specifies far pull entire axis plot. las Orientation axis labels. Input 0 default. tcl tick mark length proportion text height. default -0.5. ... Additional arguments par.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/myPDF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Custom PDF function — myPDF","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/myPDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom PDF function — myPDF","text":"","code":"# save a plot to a PDF # myPDF(\"myPlot.pdf\") histPlot(mariokart$total_pr) # dev.off()  # save a plot to a PNG # myPNG(\"myPlot.png\") histPlot(mariokart$total_pr)  # dev.off()"},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals.html","id":null,"dir":"Reference","previous_headings":"","what":"NBA Finals History — nba_finals","title":"NBA Finals History — nba_finals","text":"dataset contains information teams played NBA Finals 1950 - 2022.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NBA Finals History — nba_finals","text":"","code":"nba_finals"},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NBA Finals History — nba_finals","text":"data frame 73 rows 9 variables: year year Finals took place. winner team won series. western_wins Number series wins Western Conference Champions. eastern_wins Number series wins Eastern Conference Champions. western_champions Team won Western Conference title played Finals. eastern_champions Team won Eastern Conference title played Finals. western_coach Coach Western Conference champions. eastern_coach Coach Eastern Conference champions. home_court conference held home court advantage series.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NBA Finals History — nba_finals","text":"Wikipedia: List NBA Champions","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NBA Finals History — nba_finals","text":"","code":"library(dplyr) library(ggplot2) library(tidyr)  # Top 5 Appearing Coaches nba_finals |>   pivot_longer(     cols = c(\"western_coach\", \"eastern_coach\"),     names_to = \"conference\", values_to = \"coach\"   ) |>   count(coach, sort = TRUE) |>   slice_head(n = 5) #> # A tibble: 5 × 2 #>   coach              n #>   <chr>          <int> #> 1 Red Auerbach      10 #> 2 Pat Riley          9 #> 3 Phil Jackson       7 #> 4 Gregg Popovich     6 #> 5 Phil Jackon        6  # Top 5 Winning Coaches nba_finals |>   mutate(     winning_coach = case_when(       western_wins == 4 ~ western_coach,       eastern_wins == 4 ~ eastern_coach     )   ) |>   count(winning_coach, sort = TRUE) |>   slice_head(n = 5) #> # A tibble: 5 × 2 #>   winning_coach      n #>   <chr>          <int> #> 1 Red Auerbach       9 #> 2 Phil Jackon        6 #> 3 Gregg Popovich     5 #> 4 Pat Riley          5 #> 5 Phil Jackson       5"},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"NBA Finals Team Summary — nba_finals_teams","title":"NBA Finals Team Summary — nba_finals_teams","text":"dataset individual team summaries NBA Finals series 1950 2022. win Finals, team must win 4 games. maximum number games series 7.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NBA Finals Team Summary — nba_finals_teams","text":"","code":"nba_finals_teams"},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals_teams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NBA Finals Team Summary — nba_finals_teams","text":"data frame 33 rows 7 variables: team Team name. win Number NBA Championships won. loss Number NBA Championships lost. apps Number NBA Finals appearances. pct Win percentage. years_won Years team won Championship. years_lost Years team lost Championship.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals_teams.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NBA Finals Team Summary — nba_finals_teams","text":"List NBA Champions.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals_teams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NBA Finals Team Summary — nba_finals_teams","text":"Notes: Chicago Stags folded 1950, Washington Capitols 1951 Baltimore Bullets 1954. list uses current team names. example, Seattle SuperSonics list team moved became Oklahoma City Thunder.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_finals_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NBA Finals Team Summary — nba_finals_teams","text":"","code":"library(ggplot2) library(dplyr) library(openintro)  teams_with_apps <- nba_finals_teams |>   filter(apps != 0)  ggplot(teams_with_apps, aes(x = win)) +   geom_histogram(binwidth = 2) +   labs(     title = \"Number of NBA Finals series wins\",     x = \"Number of wins\",     y = \"Number of teams\"   )   ggplot(teams_with_apps, aes(x = apps, y = win)) +   geom_point(alpha = 0.3) +   labs(     title = \"Can we predict how many NBA Championships a team has based on the number of appearances?\",     x = \"Number of NBA Finals appearances\",     y = \"Number of NBA Finals series wins\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/nba_heights.html","id":null,"dir":"Reference","previous_headings":"","what":"NBA Player heights from 2008-9 — nba_heights","title":"NBA Player heights from 2008-9 — nba_heights","text":"Heights NBA players 2008-9 season.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_heights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NBA Player heights from 2008-9 — nba_heights","text":"","code":"nba_heights"},{"path":"https://openintrostat.github.io/openintro/reference/nba_heights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NBA Player heights from 2008-9 — nba_heights","text":"data frame 435 observations (players) following 4 variables. last_name Last name. first_name First name. h_meters Height, meters. h_in Height, inches.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_heights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NBA Player heights from 2008-9 — nba_heights","text":"Collected NBA.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_heights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NBA Player heights from 2008-9 — nba_heights","text":"","code":"qqnorm(nba_heights$h_meters)"},{"path":"https://openintrostat.github.io/openintro/reference/nba_players_19.html","id":null,"dir":"Reference","previous_headings":"","what":"NBA Players for the 2018-2019 season — nba_players_19","title":"NBA Players for the 2018-2019 season — nba_players_19","text":"Summary information NBA players 2018-2019 season.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_players_19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NBA Players for the 2018-2019 season — nba_players_19","text":"","code":"nba_players_19"},{"path":"https://openintrostat.github.io/openintro/reference/nba_players_19.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NBA Players for the 2018-2019 season — nba_players_19","text":"data frame 494 observations following 7 variables. first_name First name. last_name Last name. team Team name team_abbr 3-letter team abbreviation. position Player position. number Jersey number. height Height, inches.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_players_19.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NBA Players for the 2018-2019 season — nba_players_19","text":"https://www.nba.com/players","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nba_players_19.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NBA Players for the 2018-2019 season — nba_players_19","text":"","code":"hist(nba_players_19$height, 20)  table(nba_players_19$team) #>  #>      Blazers        Bucks        Bulls    Cavaliers      Celtics     Clippers  #>           15           18           17           15           16           17  #>    Grizzlies        Hawks         Heat      Hornets         Jazz        Kings  #>           16           17           16           16           17           17  #>       Knicks       Lakers        Magic    Mavericks         Nets      Nuggets  #>           17           17           17           17           17           17  #>       Pacers     Pelicans      Pistons      Raptors      Rockets       Sixers  #>           16           16           17           16           16           16  #>        Spurs         Suns      Thunder Timberwolves     Warriors      Wizards  #>           17           15           16           17           16           17"},{"path":"https://openintrostat.github.io/openintro/reference/ncbirths.html","id":null,"dir":"Reference","previous_headings":"","what":"North Carolina births, 1000 cases — ncbirths","title":"North Carolina births, 1000 cases — ncbirths","text":"2004, state North Carolina released public large dataset containing information births recorded state. dataset interest medical researchers studying relation habits practices expectant mothers birth children. random sample 1,000 cases dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ncbirths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"North Carolina births, 1000 cases — ncbirths","text":"","code":"ncbirths"},{"path":"https://openintrostat.github.io/openintro/reference/ncbirths.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"North Carolina births, 1000 cases — ncbirths","text":"data frame 1000 observations following 13 variables. fage Father's age years. mage Mother's age years. mature Maturity status mother. weeks Length pregnancy weeks. premie Whether birth classified premature (premie) full-term. visits Number hospital visits pregnancy. gained Weight gained mother pregnancy pounds. weight Weight baby birth pounds. lowbirthweight Whether baby classified low birthweight (low) (low). gender Gender baby, female male. habit Status mother nonsmoker smoker. marital Whether mother married married birth. whitemom Whether mom white white.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/ncbirths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"North Carolina births, 1000 cases — ncbirths","text":"","code":"library(ggplot2)  ggplot(ncbirths, aes(x = habit, y = weight)) +   geom_boxplot() +   labs(x = \"Smoking status of mother\", y = \"Birth weight of baby (in lbs)\")   ggplot(ncbirths, aes(x = whitemom, y = visits)) +   geom_boxplot() +   labs(x = \"Mother's race\", y = \"Number of doctor visits during pregnancy\") #> Warning: Removed 9 rows containing non-finite outside the scale range #> (`stat_boxplot()`).   ggplot(ncbirths, aes(x = mature, y = gained)) +   geom_boxplot() +   labs(x = \"Mother's age category\", y = \"Weight gained during pregnancy\") #> Warning: Removed 27 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":"https://openintrostat.github.io/openintro/reference/normTail.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal distribution tails — normTail","title":"Normal distribution tails — normTail","text":"Produce normal (t) distribution shaded tail.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/normTail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal distribution tails — normTail","text":"","code":"normTail(   m = 0,   s = 1,   L = NULL,   U = NULL,   M = NULL,   df = 1000,   curveColor = 1,   border = 1,   col = \"#CCCCCC\",   xlim = NULL,   ylim = NULL,   xlab = \"\",   ylab = \"\",   digits = 2,   axes = 1,   detail = 999,   xLab = c(\"number\", \"symbol\"),   cex.axis = 1,   xAxisIncr = 1,   add = FALSE,   ... )"},{"path":"https://openintrostat.github.io/openintro/reference/normTail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal distribution tails — normTail","text":"m Numerical value distribution mean. s Numerical value distribution standard deviation. L Numerical value representing cutoff shaded lower tail. U Numerical value representing cutoff shaded upper tail. M Numerical value representing cutoff shaded central region. df Numerical value describing degrees freedom.  Default 1000, results nearly normal distribution. Small values may useful emphasize small tails. curveColor color distribution curve. border color border shaded area. col color filling shaded area. xlim Limits x axis. ylim Limits y axis. xlab title x axis. ylab title y axis. digits maximum number digits past decimal use axes values. axes numeric value denoting whether draw axes (3), vertical axes (2), horizontal axes (1, default), axes (0). detail number describing number points use drawing normal curve. Smaller values correspond less smooth curve reduced memory usage final file. xLab \"number\", axis drawn mean, every standard deviation third standard deviation. \"symbol\", Greek letters used standard deviations three standard deviations mean. cex.axis Numerical value controlling size axis labels. xAxisIncr number describing often axis labels placed, scaled standard deviations. argument ignored xLab = \"symbol\". add Boolean indicating whether add normal curve existing plot. ... Additional arguments plot.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/normTail.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normal distribution tails — normTail","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/openintro/reference/normTail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normal distribution tails — normTail","text":"","code":"normTail(3, 2, 5)  normTail(3, 2, 1, xLab = \"symbol\")  normTail(3, 2, M = 1:2, xLab = \"symbol\", cex.axis = 0.8)  normTail(3, 2, U = 5, axes = FALSE)  normTail(L = -1, U = 2, M = c(0, 1), axes = 3, xAxisIncr = 2)  normTail(   L = -1, U = 2, M = c(0, 1),   xLab = \"symbol\", cex.axis = 0.8, xAxisIncr = 2 )"},{"path":"https://openintrostat.github.io/openintro/reference/nuclear_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Nuclear Arms Reduction Survey — nuclear_survey","title":"Nuclear Arms Reduction Survey — nuclear_survey","text":"simple random sample 1,028 US adults March 2013 found 56\\ support nuclear arms reduction.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nuclear_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nuclear Arms Reduction Survey — nuclear_survey","text":"","code":"nuclear_survey"},{"path":"https://openintrostat.github.io/openintro/reference/nuclear_survey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Nuclear Arms Reduction Survey — nuclear_survey","text":"data frame 1028 observations following variable.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nuclear_survey.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Nuclear Arms Reduction Survey — nuclear_survey","text":"Gallup report: U.S., 56 percent Favor U.S.-Russian Nuclear Arms Reductions. Available https://news.gallup.com/poll/161198/favor-russian-nuclear-arms-reductions.aspx.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nuclear_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nuclear Arms Reduction Survey — nuclear_survey","text":"","code":"table(nuclear_survey) #> arms_reduction #> against   favor  #>     452     576"},{"path":"https://openintrostat.github.io/openintro/reference/nyc.html","id":null,"dir":"Reference","previous_headings":"","what":"nyc — nyc","title":"nyc — nyc","text":"Zagat public survey anyone can provide scores restaurant. scores general public gathered produce ratings. dataset contains list 168 NYC restaurants Zagat Ratings.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nyc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nyc — nyc","text":"","code":"nyc"},{"path":"https://openintrostat.github.io/openintro/reference/nyc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"nyc — nyc","text":"data frame 168 observations following 6 variables. restaurant Name restaurant. price Price mean two, drinks, US $. food Zagat rating food. decor Zagat rating decor. service Zagat rating service. east Indicator variable location restaurant. 0 = west 5th Avenue, 1 = east 5th Avenue","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nyc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nyc — nyc","text":"category scales follows: 0 - 9: poor fair 10 - 15: fair good 16 - 19: good good 20 - 25: good excellent 25 - 30: extraordinary perfection","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nyc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nyc — nyc","text":"","code":"library(dplyr) library(ggplot2)  location_labs <- c(\"West\", \"East\") names(location_labs) <- c(0, 1)  ggplot(nyc, mapping = aes(x = price, group = east, fill = east)) +   geom_boxplot(alpha = 0.5) +   facet_grid(east ~ ., labeller = labeller(east = location_labs)) +   labs(     title = \"Is food more expensive east of 5th Avenue?\",     x = \"Price (US$)\"   ) +   guides(fill = \"none\") +   theme_minimal() +   theme(axis.text.y = element_blank())"},{"path":"https://openintrostat.github.io/openintro/reference/nyc_marathon.html","id":null,"dir":"Reference","previous_headings":"","what":"New York City Marathon Times — nyc_marathon","title":"New York City Marathon Times — nyc_marathon","text":"Marathon times runners Men Women divisions New York City Marathon, 1970 - 2023.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nyc_marathon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New York City Marathon Times — nyc_marathon","text":"","code":"nyc_marathon"},{"path":"https://openintrostat.github.io/openintro/reference/nyc_marathon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"New York City Marathon Times — nyc_marathon","text":"data frame 108 observations following 7 variables. year Year marathom. name Name winner. country Country winner. time Running time (HH:MM:SS). time_hrs Running time (hours). division Division: Men Women. note Note race winning time.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nyc_marathon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"New York City Marathon Times — nyc_marathon","text":"Wikipedia, List winners New York City Marathon. Retrieved 6 November, 2023.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nyc_marathon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New York City Marathon Times — nyc_marathon","text":"","code":"library(ggplot2)  ggplot(nyc_marathon, aes(x = year, y = time_hrs, color = division, shape = division)) +   geom_point() #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/openintro/reference/nycflights.html","id":null,"dir":"Reference","previous_headings":"","what":"Flights data — nycflights","title":"Flights data — nycflights","text":"-time data random sample flights departed NYC (.e. JFK, LGA EWR) 2013.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nycflights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flights data — nycflights","text":"","code":"nycflights"},{"path":"https://openintrostat.github.io/openintro/reference/nycflights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flights data — nycflights","text":"tbl_df 32,735 rows 16 variables: year,month,day Date departure. dep_time,arr_time Departure arrival times, local tz. dep_delay,arr_delay Departure arrival delays, minutes. Negative times represent early departures/arrivals. hour,minute Time departure broken hour minutes. carrier Two letter carrier abbreviation. See airlines nycflights13 package information google airline code. tailnum Plane tail number. flight Flight number. origin,dest Origin destination. See airports nycflights13 package information google airport code. air_time Amount time spent air. distance Distance flown.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nycflights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flights data — nycflights","text":"Hadley Wickham (2014). nycflights13: Data flights departing NYC 2013. R package version 0.1.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/nycflights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flights data — nycflights","text":"","code":"library(dplyr)  # Longest departure delays nycflights |>   select(flight, origin, dest, dep_delay, arr_delay) |>   arrange(desc(dep_delay)) #> # A tibble: 32,735 × 5 #>    flight origin dest  dep_delay arr_delay #>     <int> <chr>  <chr>     <dbl>     <dbl> #>  1     51 JFK    HNL        1301      1272 #>  2   1223 EWR    SLC         849       847 #>  3   2019 LGA    STL         803       802 #>  4    503 JFK    SAN         790       769 #>  5   2042 EWR    ATL         502       490 #>  6   4949 LGA    GSO         473       444 #>  7   1373 JFK    MIA         436       399 #>  8    479 LGA    IAH         427       435 #>  9   2226 LGA    MDW         423       422 #> 10    745 LGA    DEN         422       405 #> # ℹ 32,725 more rows  # Longest arrival delays nycflights |>   select(flight, origin, dest, dep_delay, arr_delay) |>   arrange(desc(arr_delay)) #> # A tibble: 32,735 × 5 #>    flight origin dest  dep_delay arr_delay #>     <int> <chr>  <chr>     <dbl>     <dbl> #>  1     51 JFK    HNL        1301      1272 #>  2   1223 EWR    SLC         849       847 #>  3   2019 LGA    STL         803       802 #>  4    503 JFK    SAN         790       769 #>  5   2042 EWR    ATL         502       490 #>  6   4949 LGA    GSO         473       444 #>  7    479 LGA    IAH         427       435 #>  8   1139 LGA    DFW         413       434 #>  9   2226 LGA    MDW         423       422 #> 10   3325 JFK    DFW         355       421 #> # ℹ 32,725 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/offshore_drilling.html","id":null,"dir":"Reference","previous_headings":"","what":"California poll on drilling off the California coast — offshore_drilling","title":"California poll on drilling off the California coast — offshore_drilling","text":"2010 survey asking randomly sample registered voters California position drilling oil natural gas Coast California.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/offshore_drilling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"California poll on drilling off the California coast — offshore_drilling","text":"","code":"offshore_drilling"},{"path":"https://openintrostat.github.io/openintro/reference/offshore_drilling.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"California poll on drilling off the California coast — offshore_drilling","text":"data frame 827 observations following 2 variables. college_grad factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/offshore_drilling.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"California poll on drilling off the California coast — offshore_drilling","text":"Survey USA, Election Poll #16804, data collected July 8-11, 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/offshore_drilling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"California poll on drilling off the California coast — offshore_drilling","text":"","code":"offshore_drilling #> # A tibble: 828 × 2 #>    v1       v2           #>    <fct>    <fct>        #>  1 position college_grad #>  2 support  yes          #>  3 support  yes          #>  4 support  yes          #>  5 support  yes          #>  6 support  yes          #>  7 support  yes          #>  8 support  yes          #>  9 support  yes          #> 10 support  yes          #> # ℹ 818 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/openintro-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openintro: Datasets and Supplemental Functions from 'OpenIntro' Textbooks and Labs — openintro-package","title":"openintro: Datasets and Supplemental Functions from 'OpenIntro' Textbooks and Labs — openintro-package","text":"Supplemental functions data 'OpenIntro' resources, includes open-source textbooks resources introductory statistics (https://www.openintro.org/). package contains datasets used open-source textbooks along custom plotting functions reproducing book figures. Note many functions examples include color transparency; plotting elements may show properly () run versions Windows operating system.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/openintro-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openintro: Datasets and Supplemental Functions from 'OpenIntro' Textbooks and Labs — openintro-package","text":"Maintainer: Mine Çetinkaya-Rundel cetinkaya.mine@gmail.com (ORCID) Authors: David Diez david.m.diez@gmail.com Andrew Bray andrew.bray@gmail.com Albert Y. Kim albert.ys.kim@gmail.com (ORCID) Ben Baumer ben.baumer@gmail.com Chester Ismay chester.ismay@gmail.com Nick Paterno nicholas.paterno@gmail.com Christopher Barr","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenIntro colors — openintro_colors","title":"OpenIntro colors — openintro_colors","text":"character string full colors IMSCOL[,1]","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenIntro colors — openintro_colors","text":"","code":"openintro_colors"},{"path":"https://openintrostat.github.io/openintro/reference/openintro_colors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenIntro colors — openintro_colors","text":"named character string 9 elements: \"blue\", \"green\", \"pink\", \"yellow\", \"red\", \"black\", \"gray\", \"lgray","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenIntro colors — openintro_colors","text":"","code":"openintro_colors #>      blue     green      pink    yellow       red     black      gray     lgray  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\" \"#F4DC00\" \"#F05133\" \"#000000\" \"#808080\" \"#D9D9D9\"   openintro_colors[\"blue\"] #>      blue  #> \"#569BBD\""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract OpenIntro IMS colors as hex codes — openintro_cols","title":"Function to extract OpenIntro IMS colors as hex codes — openintro_cols","text":"Uses full colors IMSCOL","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract OpenIntro IMS colors as hex codes — openintro_cols","text":"","code":"openintro_cols(...)"},{"path":"https://openintrostat.github.io/openintro/reference/openintro_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract OpenIntro IMS colors as hex codes — openintro_cols","text":"... Character names openintro_colors","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to extract OpenIntro IMS colors as hex codes — openintro_cols","text":"","code":"openintro_cols(\"blue\") #>      blue  #> \"#569BBD\"  openintro_cols(\"red\") #>       red  #> \"#F05133\""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Return function to interpolate an OpenIntro IMS color palette — openintro_pal","title":"Return function to interpolate an OpenIntro IMS color palette — openintro_pal","text":"exported","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return function to interpolate an OpenIntro IMS color palette — openintro_pal","text":"","code":"openintro_pal(palette = \"main\", reverse = FALSE, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/openintro_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return function to interpolate an OpenIntro IMS color palette — openintro_pal","text":"palette Character name palette openintro_palettes reverse Boolean indicating whether palette reversed ... Additional arguments pass grDevices::colorRampPalette()","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenIntro palettes — openintro_palettes","title":"OpenIntro palettes — openintro_palettes","text":"list  OpenIntro color palettes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenIntro palettes — openintro_palettes","text":"","code":"openintro_palettes"},{"path":"https://openintrostat.github.io/openintro/reference/openintro_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenIntro palettes — openintro_palettes","text":"list 8 color palettes: main, two, three, four, five, cool, hot, gray","code":""},{"path":"https://openintrostat.github.io/openintro/reference/openintro_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenIntro palettes — openintro_palettes","text":"","code":"openintro_palettes #> $main #>      blue     green      pink    yellow       red  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\" \"#F4DC00\" \"#F05133\"  #>  #> $two #>      blue     green  #> \"#569BBD\" \"#114B5F\"  #>  #> $three #>      blue     green      pink  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\"  #>  #> $four #>      blue     green      pink    yellow  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\" \"#F4DC00\"  #>  #> $five #>      blue     green      pink    yellow       red  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\" \"#F4DC00\" \"#F05133\"  #>  #> $six #>      blue     green      pink    yellow       red      gray  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\" \"#F4DC00\" \"#F05133\" \"#808080\"  #>  #> $cool #>      blue     green  #> \"#569BBD\" \"#114B5F\"  #>  #> $hot #>      pink    yellow       red  #> \"#D89A9E\" \"#F4DC00\" \"#F05133\"  #>  #> $gray #>     lgray      gray     black  #> \"#D9D9D9\" \"#808080\" \"#000000\"  #>   openintro_palettes$main #>      blue     green      pink    yellow       red  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\" \"#F4DC00\" \"#F05133\"  openintro_palettes$three #>      blue     green      pink  #> \"#569BBD\" \"#114B5F\" \"#D89A9E\"  openintro_palettes$cool #>      blue     green  #> \"#569BBD\" \"#114B5F\"  openintro_palettes$hot #>      pink    yellow       red  #> \"#D89A9E\" \"#F4DC00\" \"#F05133\""},{"path":"https://openintrostat.github.io/openintro/reference/opportunity_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Opportunity cost of purchases — opportunity_cost","title":"Opportunity cost of purchases — opportunity_cost","text":"study opportunity cost, 150 students given following statement: \"Imagine saving extra money side make purchases, recent visit video store come across special sale new video. video one favorite actor actress, favorite type movie (comedy, drama, thriller, etc.). particular video considering one thinking buying long time. available special sale price $14.99. situation? Please circle one options .\" Half students given following two options: () Buy entertaining video. (B) buy entertaining video. half given following two options (note modified option B): () Buy entertaining video. (B) buy entertaining video. Keep $14.99 purchases. results study dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/opportunity_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opportunity cost of purchases — opportunity_cost","text":"","code":"opportunity_cost"},{"path":"https://openintrostat.github.io/openintro/reference/opportunity_cost.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Opportunity cost of purchases — opportunity_cost","text":"data frame 150 observations following 2 variables. group factor levels control treatment decision factor levels buy video buy video","code":""},{"path":"https://openintrostat.github.io/openintro/reference/opportunity_cost.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Opportunity cost of purchases — opportunity_cost","text":"Frederick S, Novemsky N, Wang J, Dhar R, Nowlis S. 2009. Opportunity Cost Neglect. Journal Consumer Research 36: 553-561.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/opportunity_cost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opportunity cost of purchases — opportunity_cost","text":"","code":"library(ggplot2)  table(opportunity_cost) #>            decision #> group       buy video not buy video #>   control          56            19 #>   treatment        41            34  ggplot(opportunity_cost, aes(y = group, fill = decision)) +   geom_bar(position = \"fill\")"},{"path":"https://openintrostat.github.io/openintro/reference/orings.html","id":null,"dir":"Reference","previous_headings":"","what":"1986 Challenger disaster and O-rings — orings","title":"1986 Challenger disaster and O-rings — orings","text":"January 28, 1986, routine launch anticipated Challenger space shuttle. Seventy-three seconds flight, disaster happened: shuttle broke apart, killing seven crew members board. investigation cause disaster focused critical seal called O-ring, believed damage O-rings shuttle launch may related ambient temperature launch. table summarizes observational data O-rings 23 shuttle missions, mission order based temperature time launch.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/orings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1986 Challenger disaster and O-rings — orings","text":"","code":"orings"},{"path":"https://openintrostat.github.io/openintro/reference/orings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"1986 Challenger disaster and O-rings — orings","text":"data frame 23 observations following 4 variables. mission Shuttle mission number. temperature Temperature, Fahrenheit. damaged Number damaged O-rings (6). undamaged Number undamaged O-rings (6).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/orings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"1986 Challenger disaster and O-rings — orings","text":"https://archive.ics.uci.edu/dataset/92/challenger+usa+space+shuttle+o+ring","code":""},{"path":"https://openintrostat.github.io/openintro/reference/orings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"1986 Challenger disaster and O-rings — orings","text":"","code":"library(dplyr) library(forcats) library(tidyr) library(broom)  # This is a wide data frame. You can convert it to a long # data frame to predict probability of O-ring damage based # on temperature using logistic regression.  orings_long <- orings |>   pivot_longer(cols = c(damaged, undamaged), names_to = \"outcome\", values_to = \"n\") |>   uncount(n) |>   mutate(outcome = fct_relevel(outcome, \"undamaged\", \"damaged\"))  orings_mod <- glm(outcome ~ temperature, data = orings_long, family = \"binomial\") tidy(orings_mod) #> # A tibble: 2 × 5 #>   term        estimate std.error statistic   p.value #>   <chr>          <dbl>     <dbl>     <dbl>     <dbl> #> 1 (Intercept)   11.7      3.30        3.54 0.000403  #> 2 temperature   -0.216    0.0532     -4.07 0.0000477"},{"path":"https://openintrostat.github.io/openintro/reference/oscars.html","id":null,"dir":"Reference","previous_headings":"","what":"Oscar winners, 1929 to 2018 — oscars","title":"Oscar winners, 1929 to 2018 — oscars","text":"Best actor actress Oscar winners 1929 2018","code":""},{"path":"https://openintrostat.github.io/openintro/reference/oscars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oscar winners, 1929 to 2018 — oscars","text":"","code":"oscars"},{"path":"https://openintrostat.github.io/openintro/reference/oscars.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Oscar winners, 1929 to 2018 — oscars","text":"data frame 182 observations following 10 variables. oscar_no Oscar ceremony number. oscar_yr Year Oscar ceremony held. award Best actress Best actor. name Name winning actor actress. movie Name movie actor actress got Oscar . age Age actor actress won Oscar. birth_pl US State actor actress born, country foreign. birth_date Birth date actor actress. birth_mo Birth month actor actress. birth_d Birth day actor actress. birth_y Birth year actor actress.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/oscars.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Oscar winners, 1929 to 2018 — oscars","text":"Journal Statistical Education, http://jse.amstat.org/datasets/oscars.dat.txt, updated 2019 using information Oscars.org Wikipedia.org.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/oscars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Oscar winners, 1929 to 2018 — oscars","text":"Although 84 Oscar ceremonies 2012, 85 male winners 85 female winners ties happened two occasions (1933 best actor 1969 best actress).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/oscars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Oscar winners, 1929 to 2018 — oscars","text":"","code":"library(ggplot2) library(dplyr)  ggplot(oscars, aes(x = award, y = age)) +   geom_boxplot()   ggplot(oscars, aes(x = factor(birth_mo))) +   geom_bar()   oscars |>   count(birth_pl, sort = TRUE) #> # A tibble: 51 × 2 #>    birth_pl          n #>    <chr>         <int> #>  1 England          29 #>  2 California       25 #>  3 New York         23 #>  4 Connecticut       5 #>  5 Illinois          5 #>  6 Pennsylvania      5 #>  7 Massachusetts     4 #>  8 Missouri          4 #>  9 New Jersey        4 #> 10 Ohio              4 #> # ℹ 41 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated datasets for different types of outliers — outliers","title":"Simulated datasets for different types of outliers — outliers","text":"Data sets showing different types outliers","code":""},{"path":"https://openintrostat.github.io/openintro/reference/outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated datasets for different types of outliers — outliers","text":"","code":"outliers"},{"path":"https://openintrostat.github.io/openintro/reference/outliers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated datasets for different types of outliers — outliers","text":"data frame 50 observations following 5 variables. x numeric vector y numeric vector x_inf numeric vector y_lev numeric vector y_out numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated datasets for different types of outliers — outliers","text":"","code":"outliers #> # A tibble: 50 × 5 #>        x      y x_inf  y_lev  y_out #>    <int>  <dbl> <int>  <dbl>  <dbl> #>  1     1   6.18     1   6.18   6.18 #>  2     2  16.0      2  16.0   16.0  #>  3     3  12.4      3  12.4   12.4  #>  4     4  23.4      4  23.4   23.4  #>  5     5  24.9      5  24.9   24.9  #>  6     6   3.04     6   3.04   3.04 #>  7     7  24.7      7  24.7   24.7  #>  8     8 -10.2      8 -10.2  -10.2  #>  9     9  -2.92     9  -2.92  -2.92 #> 10    10   8.97    10   8.97   8.97 #> # ℹ 40 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/paralympic_1500.html","id":null,"dir":"Reference","previous_headings":"","what":"Race time for Olympic and Paralympic 1500m. — paralympic_1500","title":"Race time for Olympic and Paralympic 1500m. — paralympic_1500","text":"Compiled gold medal times 1500m race Olympic Games Paralympic Games. times given contestants competing Paralympic Games athletes different visual impairments; T11 indicates fully blind (option race guide-runner) T12 T13 lower levels visual impairment.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/paralympic_1500.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Race time for Olympic and Paralympic 1500m. — paralympic_1500","text":"","code":"paralympic_1500"},{"path":"https://openintrostat.github.io/openintro/reference/paralympic_1500.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Race time for Olympic and Paralympic 1500m. — paralympic_1500","text":"data frame 83 rows 10 variables. year Year games took place. city City games. country_of_games Country games. division Division: Men Women. type Type. name Name athlete. country_of_athlete Country athlete. time Time gold medal race, m:s. time_min Time gold medal race, decimal minutes (min + sec/60).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/paralympic_1500.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Race time for Olympic and Paralympic 1500m. — paralympic_1500","text":"https://www.paralympic.org/ https://en.wikipedia.org/wiki/1500_metres_at_the_Olympics.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/paralympic_1500.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Race time for Olympic and Paralympic 1500m. — paralympic_1500","text":"","code":"library(ggplot2) library(dplyr)  paralympic_1500 |>   mutate(     sight_level = case_when(       type == \"T11\" ~ \"total impairment\",       type == \"T12\" ~ \"some impairment\",       type == \"T13\" ~ \"some impairment\",       type == \"Olympic\" ~ \"no impairment\"     )   ) |>   filter(division == \"Men\", year > 1920) |>   filter(type == \"Olympic\" | type == \"T11\") |>   ggplot(aes(x = year, y = time_min, color = sight_level, shape = sight_level)) +   geom_point() +   scale_x_continuous(breaks = seq(1924, 2020, by = 8)) +   labs(     title = \"Men's Olympic and Paralympic 1500m race times\",     x = \"Year\",     y = \"Time of Race (minutes)\",     color = \"Sight level\",     shape = \"Sight level\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/penelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Guesses at the weight of Penelope (a cow) — penelope","title":"Guesses at the weight of Penelope (a cow) — penelope","text":"data collected Planet Money podcast test theory crowd-sourcing. Penelope's actual weight 1,355 pounds.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guesses at the weight of Penelope (a cow) — penelope","text":"","code":"penelope"},{"path":"https://openintrostat.github.io/openintro/reference/penelope.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Guesses at the weight of Penelope (a cow) — penelope","text":"data frame 17,184 observations following variable. weight Guesses Penelope's weight, pounds.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penelope.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Guesses at the weight of Penelope (a cow) — penelope","text":"https://www.npr.org/sections/money/2015/08/07/429720443/17-205-people-guessed--weight---cow-heres---","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guesses at the weight of Penelope (a cow) — penelope","text":"","code":"library(ggplot2)  ggplot(penelope, aes(x = weight)) +   geom_histogram(binwidth = 250)   summary(penelope$weight) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>     1.0   907.5  1245.0  1287.1  1542.0 14555.0"},{"path":"https://openintrostat.github.io/openintro/reference/penetrating_oil.html","id":null,"dir":"Reference","previous_headings":"","what":"What's the best way to loosen a rusty bolt? — penetrating_oil","title":"What's the best way to loosen a rusty bolt? — penetrating_oil","text":"channel Project Farm YouTube investigated penetrating oils options loosening rusty bolts. Eight options evaluated, including control group, determine effective.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penetrating_oil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What's the best way to loosen a rusty bolt? — penetrating_oil","text":"","code":"penetrating_oil"},{"path":"https://openintrostat.github.io/openintro/reference/penetrating_oil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"What's the best way to loosen a rusty bolt? — penetrating_oil","text":"data frame 30 observations following 2 variables. treatment different treatments tried: none (control), Heat (via blow torch), Acetone/ATF, AeroKroil, Liquid Wrench, PB Blaster, Royal Purple, WD-40. torque Torque required loosen rusty bolt, measured foot-pounds.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penetrating_oil.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"What's the best way to loosen a rusty bolt? — penetrating_oil","text":"https://www.youtube.com/watch?v=xUEob2oAKVs","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penetrating_oil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"What's the best way to loosen a rusty bolt? — penetrating_oil","text":"","code":"m <- lm(torque ~ treatment, data = penetrating_oil) anova(m) #> Analysis of Variance Table #>  #> Response: torque #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> treatment  7 3603.4  514.78  4.0263 0.005569 ** #> Residuals 22 2812.8  127.85                     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # There are 28 pairwise comparisons to be made. xbar <- tapply(penetrating_oil$torque, penetrating_oil$treatment, mean) n <- tapply(penetrating_oil$torque, penetrating_oil$treatment, length) s <- summary(m)$sigma df <- summary(m)$df[1]  diff <- c() se <- c() k <- 0 N <- length(n) K <- N * (N - 1) / 2 for (i in 1:(N - 1)) {   for (j in (i + 1):N) {     k <- k + 1     diff[k] <- xbar[i] - xbar[j]     se[k] <- s * sqrt(1 / n[i] + 1 / n[j])     if (2 * K * pt(-abs(diff[k] / se[k]), df) < 0.05) {       cat(\"0.05 - \", names(n)[c(i, j)], \"\\n\")     } else if (2 * K * pt(-abs(diff[k] / se[k]), df) < 0.1) {       cat(\"0.1 - \", names(n)[c(i, j)], \"\\n\")     } else if (2 * K * pt(-abs(diff[k] / se[k]), df) < 0.2) {       cat(\"0.2 - \", names(n)[c(i, j)], \"\\n\")     } else if (2 * K * pt(-abs(diff[k] / se[k]), df) < 0.3) {       cat(\"0.3 - \", names(n)[c(i, j)], \"\\n\")     }   } } #> 0.3 -  AeroKroil Heat  #> 0.3 -  AeroKroil Liquid Wrench  #> 0.3 -  Heat none  #> 0.3 -  Liquid Wrench none   # Smallest p-value using Bonferroni min(2 * K * pt(-abs(diff / se), df)) #> [1] 0.2030646   # Better pairwise comparison method. anova(m1 <- aov(torque ~ treatment, data = penetrating_oil)) #> Analysis of Variance Table #>  #> Response: torque #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> treatment  7 3603.4  514.78  4.0263 0.005569 ** #> Residuals 22 2812.8  127.85                     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 TukeyHSD(m1) #>   Tukey multiple comparisons of means #>     95% family-wise confidence level #>  #> Fit: aov(formula = torque ~ treatment, data = penetrating_oil) #>  #> $treatment #>                               diff        lwr        upr     p adj #> AeroKroil-Acetone/ATF       10.500 -16.194618 37.1946185 0.8842366 #> Heat-Acetone/ATF           -22.600 -55.294097 10.0940971 0.3327605 #> Liquid Wrench-Acetone/ATF  -16.775 -43.469618  9.9196185 0.4458126 #> PB Blaster-Acetone/ATF       7.975 -18.719618 34.6696185 0.9699935 #> Royal Purple-Acetone/ATF     5.200 -21.494618 31.8946185 0.9975362 #> WD-40-Acetone/ATF            7.250 -19.444618 33.9446185 0.9822024 #> none-Acetone/ATF            11.800 -14.894618 38.4946185 0.8116953 #> Heat-AeroKroil             -33.100 -65.794097 -0.4059029 0.0458145 #> Liquid Wrench-AeroKroil    -27.275 -53.969618 -0.5803815 0.0428856 #> PB Blaster-AeroKroil        -2.525 -29.219618 24.1696185 0.9999789 #> Royal Purple-AeroKroil      -5.300 -31.994618 21.3946185 0.9972260 #> WD-40-AeroKroil             -3.250 -29.944618 23.4446185 0.9998837 #> none-AeroKroil               1.300 -25.394618 27.9946185 0.9999998 #> Liquid Wrench-Heat           5.825 -26.869097 38.5190971 0.9985955 #> PB Blaster-Heat             30.575  -2.119097 63.2690971 0.0780794 #> Royal Purple-Heat           27.800  -4.894097 60.4940971 0.1354969 #> WD-40-Heat                  29.850  -2.844097 62.5440971 0.0905238 #> none-Heat                   34.400   1.705903 67.0940971 0.0344923 #> PB Blaster-Liquid Wrench    24.750  -1.944618 51.4446185 0.0823993 #> Royal Purple-Liquid Wrench  21.975  -4.719618 48.6696185 0.1600902 #> WD-40-Liquid Wrench         24.025  -2.669618 50.7196185 0.0986124 #> none-Liquid Wrench          28.575   1.880382 55.2696185 0.0302211 #> Royal Purple-PB Blaster     -2.775 -29.469618 23.9196185 0.9999599 #> WD-40-PB Blaster            -0.725 -27.419618 25.9696185 1.0000000 #> none-PB Blaster              3.825 -22.869618 30.5196185 0.9996572 #> WD-40-Royal Purple           2.050 -24.644618 28.7446185 0.9999949 #> none-Royal Purple            6.600 -20.094618 33.2946185 0.9895945 #> none-WD-40                   4.550 -22.144618 31.2446185 0.9989414 #>"},{"path":"https://openintrostat.github.io/openintro/reference/penny_ages.html","id":null,"dir":"Reference","previous_headings":"","what":"Penny Ages — penny_ages","title":"Penny Ages — penny_ages","text":"Sample pennies ages. Taken 2004.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penny_ages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Penny Ages — penny_ages","text":"","code":"penny_ages"},{"path":"https://openintrostat.github.io/openintro/reference/penny_ages.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Penny Ages — penny_ages","text":"data frame 648 observations following 2 variables. year Penny's year. age Age 2004.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/penny_ages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Penny Ages — penny_ages","text":"","code":"hist(penny_ages$year)"},{"path":"https://openintrostat.github.io/openintro/reference/pew_energy_2018.html","id":null,"dir":"Reference","previous_headings":"","what":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","title":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","text":"US-based survey support expanding six different sources energy, including solar, wind, offshore drilling, hydrolic fracturing (\"fracking\"), coal, nuclear.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pew_energy_2018.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","text":"","code":"pew_energy_2018"},{"path":"https://openintrostat.github.io/openintro/reference/pew_energy_2018.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","text":"format : List 6 $ solar_panel_farms : List responses solar farms.  $ wind_turbine_farms : List responses wind turbine farms.  $ offshore_drilling : List responses offshore drilling.  $ hydrolic_fracturing : List responses hydrolic fracturing.  $ coal_mining : List responses coal mining.  $ nuclear_power_plants: List responses nuclear.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pew_energy_2018.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","text":"https://www.pewresearch.org/science/2018/05/14/majorities-see-government-efforts--protect--environment--insufficient/","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pew_energy_2018.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","text":"access individual responses original dataset, took published percentages backed breakdown","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pew_energy_2018.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pew Survey on Energy Sources in 2018 — pew_energy_2018","text":"","code":"data(pew_energy_2018) lapply(pew_energy_2018, head) #> $solar_panel_farms #> [1] \"favor_increase\" \"favor_increase\" \"favor_increase\" \"no_increase\"    #> [5] \"favor_increase\" \"favor_increase\" #>  #> $wind_turbine_farms #> [1] \"favor_increase\" \"favor_increase\" \"favor_increase\" \"favor_increase\" #> [5] \"favor_increase\" \"favor_increase\" #>  #> $offshore_drilling #> [1] \"favor_increase\" \"no_increase\"    \"no_increase\"    \"no_increase\"    #> [5] \"favor_increase\" \"no_increase\"    #>  #> $hydrolic_fracturing #> [1] \"no_increase\" \"no_increase\" \"no_increase\" \"no_increase\" \"no_increase\" #> [6] \"no_increase\" #>  #> $coal_mining #> [1] \"favor_increase\" \"no_increase\"    \"no_increase\"    \"favor_increase\" #> [5] \"no_increase\"    \"favor_increase\" #>  #> $nuclear_power_plants #> [1] \"no_increase\"    \"no_increase\"    \"favor_increase\" \"no_increase\"    #> [5] \"no_increase\"    \"favor_increase\" #>  lapply(pew_energy_2018, length) #> $solar_panel_farms #> [1] 2541 #>  #> $wind_turbine_farms #> [1] 2541 #>  #> $offshore_drilling #> [1] 2541 #>  #> $hydrolic_fracturing #> [1] 2541 #>  #> $coal_mining #> [1] 2541 #>  #> $nuclear_power_plants #> [1] 2541 #>  lapply(pew_energy_2018, table) #> $solar_panel_farms #>  #> favor_increase    no_increase  #>           2261            280  #>  #> $wind_turbine_farms #>  #> favor_increase    no_increase  #>           2160            381  #>  #> $offshore_drilling #>  #> favor_increase    no_increase  #>            991           1550  #>  #> $hydrolic_fracturing #>  #> favor_increase    no_increase  #>            991           1550  #>  #> $coal_mining #>  #> favor_increase    no_increase  #>            940           1601  #>  #> $nuclear_power_plants #>  #> favor_increase    no_increase  #>           1118           1423  #>  Prop <- function(x) {   table(x) / length(x) } lapply(pew_energy_2018, Prop) #> $solar_panel_farms #> x #> favor_increase    no_increase  #>      0.8898072      0.1101928  #>  #> $wind_turbine_farms #> x #> favor_increase    no_increase  #>       0.850059       0.149941  #>  #> $offshore_drilling #> x #> favor_increase    no_increase  #>      0.3900039      0.6099961  #>  #> $hydrolic_fracturing #> x #> favor_increase    no_increase  #>      0.3900039      0.6099961  #>  #> $coal_mining #> x #> favor_increase    no_increase  #>      0.3699331      0.6300669  #>  #> $nuclear_power_plants #> x #> favor_increase    no_increase  #>      0.4399843      0.5600157  #>"},{"path":"https://openintrostat.github.io/openintro/reference/photo_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Photo classifications: fashion or not — photo_classify","title":"Photo classifications: fashion or not — photo_classify","text":"simulated dataset photo classifications based machine learning algorithm versus true classification photos. data real, resemble performance reasonable expect well-built classifier.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/photo_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Photo classifications: fashion or not — photo_classify","text":"","code":"photo_classify"},{"path":"https://openintrostat.github.io/openintro/reference/photo_classify.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Photo classifications: fashion or not — photo_classify","text":"data frame 1822 observations following 2 variables. mach_learn prediction machine learning system whether photo fashion . truth actual classification photo team humans.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/photo_classify.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Photo classifications: fashion or not — photo_classify","text":"data simulated / hypothetical.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/photo_classify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Photo classifications: fashion or not — photo_classify","text":"hypothetical ML algorithm precision 90\\ photos claims fashion, 90\\ recall ML algorithm 64\\ fashion, correctly predicts fashion 64\\ time.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/photo_classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Photo classifications: fashion or not — photo_classify","text":"","code":"data(photo_classify) table(photo_classify) #>               truth #> mach_learn     fashion  not #>   pred_fashion     197   22 #>   pred_not         112 1491"},{"path":"https://openintrostat.github.io/openintro/reference/piracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Piracy and PIPA/SOPA — piracy","title":"Piracy and PIPA/SOPA — piracy","text":"dataset contains observations 100 US Senators 434 325 US Congressional Representatives related support anti-piracy legislation introduced end 2011.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/piracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Piracy and PIPA/SOPA — piracy","text":"","code":"piracy"},{"path":"https://openintrostat.github.io/openintro/reference/piracy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Piracy and PIPA/SOPA — piracy","text":"data frame 534 observations following 8 variables. name Name legislator. party Party affiliation democrat (D), Republican (R), Independent (). state Two letter state abbreviation. money_pro Amount money dollars contributed legislator's campaign 2010 groups generally thought supportive PIPA/SOPA: movie TV studios, record labels. money_con Amount money dollars contributed legislator's campaign 2010 groups generally thought opposed PIPA/SOPA: computer internet companies. years Number years service Congress. stance Degree support PIPA/SOPA levels Leaning , , Undecided, Unknown, Yes chamber Whether legislator member either house senate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/piracy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Piracy and PIPA/SOPA — piracy","text":"https://projects.propublica.org/sopa list may slightly date since many politician's perspectives legislation flux time data collection.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/piracy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Piracy and PIPA/SOPA — piracy","text":"Stop Online Piracy Act (SOPA) Protect Intellectual Property Act (PIPA) two bills introduced US House Representatives US Senate, respectively, curtail copyright infringement.  bill controversial concerns bill limited free speech rights.  ProPublica, independent non-profit news organization, compiled dataset compare stance legislators towards bills amount campaign funds received groups considered supportive opposition legislation. background legislation formulation money_pro money_con, read documentation ProPublica, linked .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/piracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Piracy and PIPA/SOPA — piracy","text":"","code":"library(dplyr) library(ggplot2)  pipa <- filter(piracy, chamber == \"senate\")  pipa |>   group_by(stance) |>   summarise(money_pro_mean = mean(money_pro, na.rm = TRUE)) |>   ggplot(aes(x = stance, y = money_pro_mean)) +   geom_col() +   labs(     x = \"Stance\", y = \"Average contribution, in $\",     title = \"Average contribution to the legislator's campaign in 2010\",     subtitle = \"by groups supportive of PIPA/SOPA (movie and TV studios, record labels)\"   )   ggplot(pipa, aes(x = stance, y = money_pro)) +   geom_boxplot() +   labs(     x = \"Stance\", y = \"Contribution, in $\",     title = \"Contribution by groups supportive of PIPA/SOPA\",     subtitle = \"Movie and TV studios, record labels\"   ) #> Warning: Removed 6 rows containing non-finite outside the scale range #> (`stat_boxplot()`).   ggplot(pipa, aes(x = stance, y = money_con)) +   geom_boxplot() +   labs(     x = \"Stance\", y = \"Contribution, in $\",     title = \"Contribution by groups opposed to PIPA/SOPA\",     subtitle = \"Computer and internet companies\"   ) #> Warning: Removed 6 rows containing non-finite outside the scale range #> (`stat_boxplot()`).   pipa |>   filter(     money_pro > 0,     money_con > 0   ) |>   mutate(for_pipa = ifelse(stance == \"yes\", \"yes\", \"no\")) |>   ggplot(aes(x = money_pro, y = money_con, color = for_pipa)) +   geom_point() +   scale_color_manual(values = c(\"gray\", \"red\")) +   scale_y_log10() +   scale_x_log10() +   labs(     x = \"Contribution by pro-PIPA groups\",     y = \"Contribution by anti-PIPA groups\",     color = \"For PIPA\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/playing_cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of Playing Cards in 52-Card Deck — playing_cards","title":"Table of Playing Cards in 52-Card Deck — playing_cards","text":"table describing 52 cards deck.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/playing_cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of Playing Cards in 52-Card Deck — playing_cards","text":"","code":"playing_cards"},{"path":"https://openintrostat.github.io/openintro/reference/playing_cards.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Table of Playing Cards in 52-Card Deck — playing_cards","text":"data frame 52 observations following 2 variables. number number card type. suit Card suit, takes one four values: Club, Diamond, Heart, Spade. face_card Whether card counts face card.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/playing_cards.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Table of Playing Cards in 52-Card Deck — playing_cards","text":"extremely complex dataset generated scratch.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/playing_cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of Playing Cards in 52-Card Deck — playing_cards","text":"","code":"playing_cards <- data.frame(   number = rep(c(2:10, \"J\", \"Q\", \"K\", \"A\"), 4),   suit = rep(c(\"Spade\", \"Diamond\", \"Club\", \"Heart\"), rep(13, 4)) ) playing_cards$face_card <-   ifelse(playing_cards$number %in% c(2:10, \"A\"), \"no\", \"yes\")"},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2011_durham.html","id":null,"dir":"Reference","previous_headings":"","what":"Air quality for Durham, NC — pm25_2011_durham","title":"Air quality for Durham, NC — pm25_2011_durham","text":"Daily air quality measured air quality index (AQI) reported Environmental Protection Agency 2011.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2011_durham.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Air quality for Durham, NC — pm25_2011_durham","text":"","code":"pm25_2011_durham"},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2011_durham.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Air quality for Durham, NC — pm25_2011_durham","text":"data frame 449 observations following 20 variables. date Date aqs_site_id numeric site ID. poc numeric vector, Parameter Occurance Code. daily_mean_pm2_5_concentration numeric vector average daily concentration fine particulates, particulate matter 2.5. units character vector value ug/m3 LC. daily_aqi_value numeric vector daily air quality index. daily_obs_count numeric vector. percent_complete numeric vector. aqs_parameter_code numeric vector. aqs_parameter_desc factor levels PM2.5 - Local Conditions Acceptable PM2.5 AQI & Speciation Mass. cbsa_code numeric vector. cbsa_name character vector value Durham, NC. state_code numeric vector. state character vector value North Carolina. county_code numeric vector. county character vector value Durham. site_latitude numeric vector latitude. site_longitude numeric vector longitude. csa_code numeric vector csa_name factor levels Raleigh-Durham-Cary, NC","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2011_durham.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Air quality for Durham, NC — pm25_2011_durham","text":"US Environmental Protection Agency, AirData, 2011. http://www3.epa.gov/airdata/ad_data_daily.html","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2011_durham.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Air quality for Durham, NC — pm25_2011_durham","text":"","code":"library(ggplot2)  ggplot(pm25_2011_durham, aes(x = date, y = daily_mean_pm2_5_concentration, group = 1)) +   geom_line()"},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2022_durham.html","id":null,"dir":"Reference","previous_headings":"","what":"Air quality for Durham, NC — pm25_2022_durham","title":"Air quality for Durham, NC — pm25_2022_durham","text":"Daily air quality measured air quality index (AQI) reported Environmental Protection Agency 2022.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2022_durham.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Air quality for Durham, NC — pm25_2022_durham","text":"","code":"pm25_2022_durham"},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2022_durham.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Air quality for Durham, NC — pm25_2022_durham","text":"data frame 356 observations following 20 variables. date Date. aqs_site_id numeric site ID. poc numeric vector, Parameter Occurance Code. daily_mean_pm2_5_concentration numeric vector average daily concentration fine particulates, particulate matter 2.5. units character vector value ug/m3 LC. daily_aqi_value numeric vector daily air quality index. daily_obs_count numeric vector. percent_complete numeric vector. aqs_parameter_code numeric vector. aqs_parameter_desc factor vector level PM2.5 - Local Conditions. cbsa_code numeric vector. cbsa_name character vector value Durham-Chapel Hill, NC. state_code numeric vector. state character vector value North Carolina. county_code numeric vector. county character vector value Durham. site_latitude numeric vector latitude. site_longitude numeric vector longitude. site_name character vector value Durham Armory.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2022_durham.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Air quality for Durham, NC — pm25_2022_durham","text":"US Environmental Protection Agency, AirData, 2022. http://www3.epa.gov/airdata/ad_data_daily.html","code":""},{"path":"https://openintrostat.github.io/openintro/reference/pm25_2022_durham.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Air quality for Durham, NC — pm25_2022_durham","text":"","code":"library(ggplot2)  ggplot(pm25_2022_durham, aes(x = date, y = daily_mean_pm2_5_concentration, group = 1)) +   geom_line()"},{"path":"https://openintrostat.github.io/openintro/reference/poker.html","id":null,"dir":"Reference","previous_headings":"","what":"Poker winnings during 50 sessions — poker","title":"Poker winnings during 50 sessions — poker","text":"Poker winnings (losses) 50 days professional poker player.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/poker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poker winnings during 50 sessions — poker","text":"","code":"poker"},{"path":"https://openintrostat.github.io/openintro/reference/poker.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Poker winnings during 50 sessions — poker","text":"data frame 49 observations following variable. winnings Poker winnings losses, US dollars.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/poker.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Poker winnings during 50 sessions — poker","text":"Anonymity requested player.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/poker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Poker winnings during 50 sessions — poker","text":"","code":"library(ggplot2)  ggplot(poker, aes(x = winnings)) +   geom_histogram(binwidth = 250)"},{"path":"https://openintrostat.github.io/openintro/reference/possum.html","id":null,"dir":"Reference","previous_headings":"","what":"Possums in Australia and New Guinea — possum","title":"Possums in Australia and New Guinea — possum","text":"Data representing possums Australia New Guinea. copy dataset name DAAG package, however, dataset included includes fewer variables.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/possum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possums in Australia and New Guinea — possum","text":"","code":"possum"},{"path":"https://openintrostat.github.io/openintro/reference/possum.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possums in Australia and New Guinea — possum","text":"data frame 104 observations following 8 variables. site site number possum trapped. pop Population, either Vic (Victoria) (New South Wales Queensland). sex Gender, either m (male) f (female). age Age. head_l Head length, mm. skull_w Skull width, mm. total_l Total length, cm. tail_l Tail length, cm.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/possum.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Possums in Australia and New Guinea — possum","text":"Lindenmayer, D. B., Viggers, K. L., Cunningham, R. B., Donnelly, C. F. 1995. Morphological variation among columns mountain brushtail possum, Trichosurus caninus Ogilby (Phalangeridae: Marsupiala). Australian Journal Zoology 43: 449-458.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/possum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Possums in Australia and New Guinea — possum","text":"","code":"library(ggplot2)  # Skull width vs. head length ggplot(possum, aes(x = head_l, y = skull_w)) +   geom_point()   # Total length vs. sex ggplot(possum, aes(x = total_l, fill = sex)) +   geom_density(alpha = 0.5)"},{"path":"https://openintrostat.github.io/openintro/reference/ppp_201503.html","id":null,"dir":"Reference","previous_headings":"","what":"US Poll on who it is better to raise taxes on — ppp_201503","title":"US Poll on who it is better to raise taxes on — ppp_201503","text":"poll 691 people, party affiliation collected, asked whether think better raise taxes rich raise taxes poor.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ppp_201503.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Poll on who it is better to raise taxes on — ppp_201503","text":"","code":"ppp_201503"},{"path":"https://openintrostat.github.io/openintro/reference/ppp_201503.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Poll on who it is better to raise taxes on — ppp_201503","text":"data frame 691 observations following 2 variables. taxes Support raise taxes .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ppp_201503.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Poll on who it is better to raise taxes on — ppp_201503","text":"Public Policy Polling, Americans College Degrees, Classic Literature, Seasons, , data collected Feb 20-22, 2015.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ppp_201503.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Poll on who it is better to raise taxes on — ppp_201503","text":"","code":"library(ggplot2)  ggplot(ppp_201503, aes(x = party, fill = taxes)) +   geom_bar(position = \"fill\") +   labs(x = \"Party\", x = \"Proportion\", fill = \"Taxes\")"},{"path":"https://openintrostat.github.io/openintro/reference/present.html","id":null,"dir":"Reference","previous_headings":"","what":"Birth counts — present","title":"Birth counts — present","text":"updated version historical Arbuthnot dataset. Numbers boys girls born United States 1940 2002.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Birth counts — present","text":"","code":"present"},{"path":"https://openintrostat.github.io/openintro/reference/present.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Birth counts — present","text":"data frame 63 observations following 3 variables. year Year. boys Number boys born. girls Number girls born.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/present.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Birth counts — present","text":"Mathews, T. J., Brady E. Hamilton. \"Trend analysis sex ratio birth United States.\" National vital statistics reports 53.20 (2005): 1-17.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/present.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Birth counts — present","text":"","code":"library(ggplot2)  ggplot(present, mapping = aes(x = year, y = boys / girls)) +   geom_line()"},{"path":"https://openintrostat.github.io/openintro/reference/president.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Presidental History — president","title":"United States Presidental History — president","text":"Summary changes president vice president United States America.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/president.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Presidental History — president","text":"","code":"president"},{"path":"https://openintrostat.github.io/openintro/reference/president.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States Presidental History — president","text":"data frame 67 observations following 5 variables. potus President United States party Political party president start Start year end End year vpotus Vice President United States","code":""},{"path":"https://openintrostat.github.io/openintro/reference/president.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States Presidental History — president","text":"Presidents United States (table) -- infoplease.com (visited: Nov 2nd, 2010) https://www.infoplease.com/us/government/executive-branch/presidents https://www.infoplease.com/us/government/executive-branch/vice-presidents","code":""},{"path":"https://openintrostat.github.io/openintro/reference/president.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United States Presidental History — president","text":"","code":"president #> # A tibble: 67 × 5 #>    potus             party                   start   end vpotus             #>    <fct>             <fct>                   <int> <dbl> <fct>              #>  1 George Washington \" \"                      1789  1797 John Adams         #>  2 John Adams        \"Federalist\"             1797  1801 Thomas Jefferson   #>  3 Thomas Jefferson  \"Democratic-Republican\"  1801  1805 Aaron Burr         #>  4 Thomas Jefferson  \"Democratic-Republican\"  1805  1809 George Clinton     #>  5 James Madison     \"Democratic-Republican\"  1809  1812 George Clinton     #>  6 James Madison     \"Democratic-Republican\"  1812  1813 No Vice President  #>  7 James Madison     \"Democratic-Republican\"  1813  1814 Elbridge Gerry     #>  8 James Madison     \"Democratic-Republican\"  1814  1817 No Vice President  #>  9 James Monroe      \"Democratic-Republican\"  1817  1825 Daniel D. Tompkins #> 10 John Quincy Adams \"Democratic-Republican\"  1825  1829 John C. Calhoun    #> # ℹ 57 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/prison.html","id":null,"dir":"Reference","previous_headings":"","what":"Prison isolation experiment — prison","title":"Prison isolation experiment — prison","text":"Subjects Central Prison Raleigh, NC, volunteered experiment involving \"isolation\" experience. goal experiment find treatment reduces subjects' psychopathic deviant T scores. score measures person's need control rebellion control, part commonly used mental health test called Minnesota Multiphasic Personality Inventory (MMPI) test.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/prison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prison isolation experiment — prison","text":"","code":"prison"},{"path":"https://openintrostat.github.io/openintro/reference/prison.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prison isolation experiment — prison","text":"data frame 14 observations following 6 variables. pre_trt1 Pre-treatment 1. post_trt1 Post-treatment 1. pre_trt2 Pre-treatment 2. post_trt2 Post-treatment 2. pre_trt3 Pre-treatment 3. post_trt3 Post-treatment 3.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/prison.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prison isolation experiment — prison","text":"https://stat.duke.edu/datasets/prison-isolation","code":""},{"path":"https://openintrostat.github.io/openintro/reference/prison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prison isolation experiment — prison","text":"","code":"prison #> # A tibble: 14 × 6 #>    pre_trt1 post_trt1 pre_trt2 post_trt2 pre_trt3 post_trt3 #>       <int>     <int>    <int>     <int>    <int>     <int> #>  1       67        74       88        79       86        90 #>  2       86        50       79        81       53        53 #>  3       64        64       67        83       81       102 #>  4       69        76       83        74       69        67 #>  5       67        64       79        76       81        76 #>  6       79        81       76        69       76        81 #>  7       67        74       71        71       74        69 #>  8       67        50       67        75       60        60 #>  9       69        60       69        64       67        69 #> 10       57        57       67        64       86        83 #> 11       76        62       67        64       86       107 #> 12       90        76       74        71       74        71 #> 13       71        71       81        74       71        71 #> 14       93        76       81        64       71        81"},{"path":"https://openintrostat.github.io/openintro/reference/prius_mpg.html","id":null,"dir":"Reference","previous_headings":"","what":"User reported fuel efficiency for 2017 Toyota Prius Prime — prius_mpg","title":"User reported fuel efficiency for 2017 Toyota Prius Prime — prius_mpg","text":"Fueleconomy.gov, official US government source fuel economy information, allows users share gas mileage information vehicles. data come 19 users sharing gas mileage 2017 Toyota Prius Prime. Note data user estimates since sources data verified, accuracy estimates guaranteed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/prius_mpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User reported fuel efficiency for 2017 Toyota Prius Prime — prius_mpg","text":"","code":"prius_mpg"},{"path":"https://openintrostat.github.io/openintro/reference/prius_mpg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"User reported fuel efficiency for 2017 Toyota Prius Prime — prius_mpg","text":"data frame 19 observations following 10 variables. average_mpg Average mileage estimated user. state US State user lives . stop_and_go Proportion stop go driving. highway Proportion highway driving. last_updated Date estimate last updated.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/prius_mpg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"User reported fuel efficiency for 2017 Toyota Prius Prime — prius_mpg","text":"Fueleconomy.gov, https://www.fueleconomy.gov/mpg/MPG.?action=mpgData&vehicleID=38531&browser=true&details=, retrieved 2019-04-14.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/prius_mpg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User reported fuel efficiency for 2017 Toyota Prius Prime — prius_mpg","text":"","code":"library(ggplot2) library(dplyr)  ggplot(prius_mpg, aes(x = average_mpg)) +   geom_histogram(binwidth = 25)"},{"path":"https://openintrostat.github.io/openintro/reference/qqnormsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated QQ plots — qqnormsim","title":"Generate simulated QQ plots — qqnormsim","text":"Create 3 x 3 grid quantile-quantile plots, first corresponds input data. eight plots arise simulating random normal data mean, standard deviation, length data. use comparing known-normal qqplots observed qqplot assess normality.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/qqnormsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated QQ plots — qqnormsim","text":"","code":"qqnormsim(sample, data)"},{"path":"https://openintrostat.github.io/openintro/reference/qqnormsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated QQ plots — qqnormsim","text":"sample variable plotted. data data frame use.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/qqnormsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated QQ plots — qqnormsim","text":"3 x 3 grid qqplots.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/race_justice.html","id":null,"dir":"Reference","previous_headings":"","what":"Yahoo! News Race and Justice poll results — race_justice","title":"Yahoo! News Race and Justice poll results — race_justice","text":"Results Yahoo! News poll conducted YouGov May 29-31, 2020. total 1060 U.S. adults asked series questions regarding race justice wake killing George Floyd police officer. Results dataset percentages question, \"think Blacks Whites receive equal treatment police?\" particular question 1059 respondents.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/race_justice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yahoo! News Race and Justice poll results — race_justice","text":"","code":"race_justice"},{"path":"https://openintrostat.github.io/openintro/reference/race_justice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Yahoo! News Race and Justice poll results — race_justice","text":"data frame 1,059 rows 2 variables. race_eth Race/ethnicity respondent, levels White, Black, Hispanic, . response Response question \"think Black White people receive equal treatment police?\", levels Yes, , sure.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/race_justice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Yahoo! News Race and Justice poll results — race_justice","text":"Yahoo! News Race Justice - May 31, 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/race_justice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Yahoo! News Race and Justice poll results — race_justice","text":"","code":"library(ggplot2) library(dplyr)  # Conditional probabilities of response for each race/ethnicity race_justice |>   count(race_eth, response) |>   group_by(race_eth) |>   mutate(prop = n / sum(n)) #> # A tibble: 12 × 4 #> # Groups:   race_eth [4] #>    race_eth response     n   prop #>    <fct>    <fct>    <int>  <dbl> #>  1 White    Yes        201 0.260  #>  2 White    No         486 0.630  #>  3 White    Not sure    85 0.110  #>  4 Black    Yes          6 0.0594 #>  5 Black    No          92 0.911  #>  6 Black    Not sure     3 0.0297 #>  7 Hispanic Yes         15 0.144  #>  8 Hispanic No          75 0.721  #>  9 Hispanic Not sure    14 0.135  #> 10 Other    Yes         14 0.171  #> 11 Other    No          47 0.573  #> 12 Other    Not sure    21 0.256   # Stacked bar plot of counts ggplot(race_justice, aes(x = race_eth, fill = response)) +   geom_bar() +   labs(     x = \"Race / ethnicity\",     y = \"Count\",     title = \"Do you think Black and White people receive equal treatment from the police?\",     fill = \"Response\"   )   # Stacked bar plot of proportions ggplot(race_justice, aes(x = race_eth, fill = response)) +   geom_bar(position = \"fill\") +   labs(     x = \"Race / ethnicity\",     y = \"Proportion\",     title = \"Do you think Black and White people receive equal treatment from the police?\",     fill = \"Response\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/reddit_finance.html","id":null,"dir":"Reference","previous_headings":"","what":"Reddit Survey on Financial Independence. — reddit_finance","title":"Reddit Survey on Financial Independence. — reddit_finance","text":"reduced set official results 2020 FI Survey Reddit (r/financialindependence). responses represent respondent (contributors household) listed. include retired individuals. per instructed, respondents give dollar values native currency.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/reddit_finance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reddit Survey on Financial Independence. — reddit_finance","text":"","code":"reddit_finance"},{"path":"https://openintrostat.github.io/openintro/reference/reddit_finance.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reddit Survey on Financial Independence. — reddit_finance","text":"data frame 1998 rows 65 variables. num_incomes many individuals contribute household income? pan_inc_chg result pandemic, earned income increase, decrease, remain ? pan_inc_chg_pct much earned income change? pan_exp_chg result pandemic, expenses increase, decrease, remain ? pan_exp_chg_pct much expenses change? pan_fi_chg result pandemic, FI (financially independent) number... pan_ret_date_chg result pandemic, planned RE (retirement) date... pan_financial_impact Overall, characterize pandemic's impact finances? political political party closely identify?  need registered party select , answer based personal views. race_eth race/ethnicity?  Select apply. gender gender? age age? edu highest level education completed? rel_status relationship status? children children? country country ? fin_indy financially independent?  Meaning need work money, regardless whether work money. fin_indy_num amount invested consider Financially Independent? (FI number?) fin_indy_pct percent FI ? (percent FI number currently ?) retire_invst_num amount invested intend retire? (RE number) tgt_sf_wthdrw_rt target safe withdrawal rate?  (answer 3.5%, enter 3.5) max_retire_sup much annual income expect sources selected question T5 point utilizing (majority intend use time)? Enter answer dollar amount. retire_exp much money (savings sources) intend spend year retired? Enter answer dollar amount. whn_fin_indy_num amount invested consider Financially Independent? (AKA \"FI number\") fin_indy_lvl following considered time reached Financial Independence: retire_age age intend retire? stp_whn_fin_indy intend stop working money reach financial independence? industry following best describes industry currently recently work(ed)? employer following best describes current recent employer? role following best describes current recent job role? ft_status current employment status? - Full Time pt_status current employment status? - Part Time, Regular gig_status current employment status? -Side Gig, Intermittent ne_status current employment status? -Employed edu_status current educational status? housing current housing situation? home_value Primary residence value. brokerage_accts_tax Brokerage accounts (Taxable). retirement_accts_tax Retirement accounts (Tax Advantaged). cash Cash / cash equivalents (Savings, Checking, C.D.s, Money Market). invst_accts Dedicated Savings/Investment Accounts (Healthcare, Education). spec_crypto Speculation (Crypto, P2P Lending, Gold, etc.). invst_prop_bus_own investment properties / owned business(es). other_val assets. student_loans Outstanding student loans. mortgage Outstanding mortgage / HELOC. auto_loan Outstanding auto loans. credit_personal_loan Outstanding credit cards / personal loans. medical_debt Outstanding medical debt. invst_prop_bus_own_debt Debt investment properties / owned business. other_debt Debt sources. 2020_gross_inc 2020 gross (pre-tax, pre-deductions) annual household income? 2020_housing_exp Housing expenses(rent, mortgage, insurance, taxes, upkeep). 2020_utilities_exp Utilities expenses(phone, internet, gas, electric, water, sewer). 2020_transp_exp Transportation expenses(car payment, bus / subway tickets, gas, insurance, maintenance). 2020_necessities_exp Necessities expenses(Groceries, Clothing, Personal Care, Household Supplies). 2020_lux_exp Luxury expenses (Restaurants/Dining, Entertainment, Hobbies, Travel, Pets, Gifts). 2020_child_exp Children expenses(child care, soccer team, etc.). 2020_debt_repay Debt repayment (excluding mortgage/auto). 2020_invst_save Investments / savings. 2020_charity Charity / Tithing. 2020_healthcare_exp Healthcare expenses(direct costs, co-pays, insurance pay). 2020_taxes Taxes (sum taxes paid, including amounts deducted paychecks). 2020_edu_exp Education expenses. 2020_other_exp expenses.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/reddit_finance.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Reddit Survey on Financial Independence. — reddit_finance","text":"Reddit Official 2020 FI Survey Results, https://www.reddit.com/r/financialindependence/comments/m1q8ia/official_2020_fi_survey_results.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/reddit_finance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reddit Survey on Financial Independence. — reddit_finance","text":"","code":"library(ggplot2)  # Histogram of Expected Retirement Age. ggplot(reddit_finance, aes(retire_age)) +   geom_bar(na.rm = TRUE) +   labs(     title = \"At what age do you expect to retire?\",     x = \"Age Bracket\",     y = \"Number of Respondents\"   )   # Histogram of Dollar Amount at Which FI was reached. ggplot(reddit_finance, aes(whn_fin_indy_num)) +   geom_histogram(na.rm = TRUE, bins = 20) +   labs(     title = \"At what amount invested did you consider\\nyourself Financially Independent?\",     x = \"Dollar Amount (in local currency)\",     y = \"Number of Respondents\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for regression — res_demo_1","title":"Simulated data for regression — res_demo_1","text":"Simulated data regression","code":""},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for regression — res_demo_1","text":"","code":"res_demo_1"},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for regression — res_demo_1","text":"data frame 100 observations following 3 variables. x numeric vector y_lin numeric vector y_fan_back numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated data for regression — res_demo_1","text":"","code":"res_demo_1 #> # A tibble: 100 × 3 #>        x y_lin y_fan_back #>    <int> <dbl>      <dbl> #>  1     1  9.33      -48.3 #>  2     2 -7.22       76.6 #>  3     3 47.0       102.  #>  4     4 25.0        29.3 #>  5     5 16.7        59.0 #>  6     6 15.7        97.8 #>  7     7 13.9       -38.5 #>  8     8 29.4        85.5 #>  9     9 37.2        16.9 #> 10    10 38.7        38.9 #> # ℹ 90 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for regression — res_demo_2","title":"Simulated data for regression — res_demo_2","text":"Simulated data regression","code":""},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for regression — res_demo_2","text":"","code":"res_demo_2"},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for regression — res_demo_2","text":"data frame 300 observations following 3 variables. x numeric vector y_fan numeric vector y_log numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/res_demo_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated data for regression — res_demo_2","text":"","code":"res_demo_2 #> # A tibble: 300 × 3 #>        x  y_fan  y_log #>    <int>  <dbl>  <dbl> #>  1     1  3.03  -0.249 #>  2     2  1.29   1.46  #>  3     3  2.82   1.81  #>  4     4  0.696  2.04  #>  5     5  6.98   1.19  #>  6     6 17.2    0.591 #>  7     7  3.15   1.45  #>  8     8 -7.10   2.37  #>  9     9  6.12   3.02  #> 10    10 11.7    1.40  #> # ℹ 290 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/resume.html","id":null,"dir":"Reference","previous_headings":"","what":"Which resume attributes drive job callbacks? — resume","title":"Which resume attributes drive job callbacks? — resume","text":"experiment data comes study sought understand influence race gender job application callback rates. study monitored job postings Boston Chicago several months 2001 2002 used build set test cases. time period, researchers randomly generating resumes go job posting, years experience education details, create realistic-looking resume. randomly assigned name resume communicate applicant's gender race. first names chosen study selected names predominantly recognized belonging black white individuals. example, Lakisha name survey indicated interpreted black woman, Greg name generally interpreted associated white male.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/resume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which resume attributes drive job callbacks? — resume","text":"","code":"resume"},{"path":"https://openintrostat.github.io/openintro/reference/resume.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Which resume attributes drive job callbacks? — resume","text":"data frame 4870 observations, representing 4870 resumes, 30 different variables describe job details, outcome (received_callback), attributes resume. job_ad_id Unique ID associated advertisement. job_city City job located. job_industry Industry job. job_type Type role. job_fed_contractor Indicator employer federal contractor. job_equal_opp_employer Indicator employer Equal Opportunity Employer. job_ownership type company, e.g. nonprofit private company. job_req_any Indicator job requirements listed. , job_req_* fields give detail. job_req_communication Indicator communication skills required. job_req_education Indicator level education required. job_req_min_experience Amount experience required. job_req_computer Indicator computer skills required. job_req_organization Indicator organization skills required. job_req_school Level education required. received_callback Indicator callback job posting person listed resume. firstname first name used resume. race Inferred race associated first name resume. gender Inferred gender associated first name resume. years_college Years college education listed resume. college_degree Indicator resume listed college degree. honors Indicator resume listed candidate awarded honors. worked_during_school Indicator resume listed working school. years_experience Years experience listed resume. computer_skills Indicator computer skills listed resume. skills adapted listings, though skills assigned independently details resume. special_skills Indicator special skills listed resume. volunteer Indicator volunteering listed resume. military Indicator military experience listed resume. employment_holes Indicator holes person's employment history. has_email_address Indicator resume lists email address. resume_quality resume generally classified either lower higher quality.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/resume.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Which resume attributes drive job callbacks? — resume","text":"Bertrand M, Mullainathan S. 2004. \"Emily Greg Employable Lakisha Jamal? Field Experiment Labor Market Discrimination\". American Economic Review 94:4 (991-1013). doi:10.3386/w9873 .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/resume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Which resume attributes drive job callbacks? — resume","text":"experiment, race gender attributes randomly assigned resumes, can conclude statistically significant difference callback rates causally linked attributes. think reasonable make causal conclusion? may health skepticism. However, take care appreciate experiment: first name (inferred race gender) randomly assigned resumes, quality attributes resume assigned independent race gender. means effects observe fact causal, effects related race statistically significant large: white applicants 50\\ still doubts lingering back mind validity study?  Maybe counterargument standard conclusions study may apply? article summarizing results exceptionally well-written, addresses many potential concerns study's approach. feeling skeptical conclusions, please find link explore!","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/resume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Which resume attributes drive job callbacks? — resume","text":"","code":"head(resume, 5) #> # A tibble: 5 × 30 #>   job_ad_id job_city job_industry  job_type   job_fed_contractor #>       <dbl> <chr>    <chr>         <chr>                   <dbl> #> 1       384 Chicago  manufacturing supervisor                 NA #> 2       384 Chicago  manufacturing supervisor                 NA #> 3       384 Chicago  manufacturing supervisor                 NA #> 4       384 Chicago  manufacturing supervisor                 NA #> 5       385 Chicago  other_service secretary                   0 #> # ℹ 25 more variables: job_equal_opp_employer <dbl>, job_ownership <chr>, #> #   job_req_any <dbl>, job_req_communication <dbl>, job_req_education <dbl>, #> #   job_req_min_experience <chr>, job_req_computer <dbl>, #> #   job_req_organization <dbl>, job_req_school <chr>, received_callback <dbl>, #> #   firstname <chr>, race <chr>, gender <chr>, years_college <int>, #> #   college_degree <dbl>, honors <int>, worked_during_school <int>, #> #   years_experience <int>, computer_skills <int>, special_skills <int>, …  # Some checks to confirm balance between race and # other attributes of a resume. There should be # some minor differences due to randomness, but # each variable should be (and is) generally # well-balanced. table(resume$race, resume$years_college) #>         #>            0    1    2    3    4 #>   black   28   22  132  493 1760 #>   white   18   18  142  513 1744 table(resume$race, resume$college_degree) #>         #>            0    1 #>   black  675 1760 #>   white  691 1744 table(resume$race, resume$honors) #>         #>            0    1 #>   black 2310  125 #>   white 2303  132 table(resume$race, resume$worked_during_school) #>         #>            0    1 #>   black 1069 1366 #>   white 1076 1359 table(resume$race, resume$years_experience) #>         #>           1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>   black  19 177  95 259 264 409 274 288  78  72  86  33  80  78  21  43   2  36 #>   white  26 175  99 278 243 408 267 290  81  58  87  36  74  71  13  51   1  41 #>         #>          19  20  21  22  23  25  26  44 #>   black  24  11  21   4   4   3  53   1 #>   white  22  24  26   4   5   4  51   0 table(resume$race, resume$computer_skills) #>         #>            0    1 #>   black  408 2027 #>   white  466 1969 table(resume$race, resume$special_skills) #>         #>            0    1 #>   black 1638  797 #>   white 1631  804 table(resume$race, resume$volunteer) #>         #>            0    1 #>   black 1426 1009 #>   white 1440  995 table(resume$race, resume$military) #>         #>            0    1 #>   black 2187  248 #>   white 2210  225 table(resume$race, resume$employment_holes) #>         #>            0    1 #>   black 1349 1086 #>   white 1339 1096 table(resume$race, resume$has_email_address) #>         #>            0    1 #>   black 1267 1168 #>   white 1269 1166 table(resume$race, resume$resume_quality) #>         #>         high  low #>   black 1223 1212 #>   white 1223 1212  # Regarding the callback outcome for race, # we observe a very large difference. tapply(   resume$received_callback,   resume[c(\"race\", \"gender\")],   mean ) #>        gender #> race             f          m #>   black 0.06627784 0.05828780 #>   white 0.09892473 0.08869565  # Natural question: is this statisticaly significant? # A proper analysis would take into account the # paired nature of the data. For each ad, let's # compute the following statistic: #     <callback rate for white candidates> #     - <callback rate for black candidates> # First contruct the callbacks for white and # black candidates by ad ID: table(resume$race) #>  #> black white  #>  2435  2435  cb_white <- with(   subset(resume, race == \"white\"),   tapply(received_callback, job_ad_id, mean) ) cb_black <- with(   subset(resume, race == \"black\"),   tapply(received_callback, job_ad_id, mean) ) # Next, compute the differences, where the # names(cb_white) part ensures we matched up the # job ad IDs. diff <- cb_white - cb_black[names(cb_white)] # Finally, we can apply a t-test on the differences: t.test(diff) #>  #> \tOne Sample t-test #>  #> data:  diff #> t = 5.1896, df = 1322, p-value = 0.0000002437 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  0.02021562 0.04478816 #> sample estimates: #>  mean of x  #> 0.03250189  #>  # There is very strong evidence of an effect.  # Here's a similar check with gender. There are # more female-inferred candidates used on the resumes. table(resume$gender) #>  #>    f    m  #> 3746 1124  cb_male <- with(   subset(resume, gender == \"m\"),   tapply(received_callback, job_ad_id, mean) ) cb_female <- with(   subset(resume, gender == \"f\"),   tapply(received_callback, job_ad_id, mean) ) diff <- cb_female - cb_male[names(cb_female)] # The `na.rm = TRUE` part ensures we limit to jobs # where both a male and female resume were sent. t.test(diff, na.rm = TRUE) #>  #> \tOne Sample t-test #>  #> data:  diff #> t = 0.80699, df = 465, p-value = 0.4201 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  -0.01283147  0.03071416 #> sample estimates: #>   mean of x  #> 0.008941345  #>  # There is no statistically significant difference.  # Was that the best analysis? Absolutely not! # However, the analysis was unbiased. To get more # precision on the estimates, we could build a # multivariate model that includes many characteristics # of the resumes sent, e.g. years of experience. # Since those other characteristics were assigned # independently of the race characteristics, this # means the race finding will almost certainy will # hold. However, it is possible that we'll find # more interesting results with the gender investigation."},{"path":"https://openintrostat.github.io/openintro/reference/rosling_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Responses to Two Public Health Questions — rosling_responses","title":"Sample Responses to Two Public Health Questions — rosling_responses","text":"Public health improved evolved, public's knowledge changed ? dataset explores sample responses two survey questions posed Hans Rosling lectures wide array well-educated audiences.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/rosling_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Responses to Two Public Health Questions — rosling_responses","text":"","code":"rosling_responses"},{"path":"https://openintrostat.github.io/openintro/reference/rosling_responses.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Responses to Two Public Health Questions — rosling_responses","text":"data frame 278 rows 3 variables: question ID question posed. response Noting whether response correct incorrect. prob_random_correct probability person guessed answer correctly guessing completely randomly.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/rosling_responses.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Responses to Two Public Health Questions — rosling_responses","text":"samples describe plausible based exact rates observed larger samples. info actual rates observed, visit https://www.gapminder.org. Another relevant reference book Hans Rosling, Anna Rosling Ronnlund, Ola Rosling called Factfulness.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/rosling_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Responses to Two Public Health Questions — rosling_responses","text":"","code":"frac_correct <- tapply(   rosling_responses$response == \"correct\",   rosling_responses$question,   mean ) frac_correct #>                    children_in_2100 children_with_1_or_more_vaccination  #>                           0.1491228                           0.2400000  n <- table(rosling_responses$question) n #>  #>                    children_in_2100 children_with_1_or_more_vaccination  #>                                 228                                  50  expected <- tapply(   rosling_responses$prob_random_correct,   rosling_responses$question,   mean )  # Construct confidence intervals. se <- sqrt(frac_correct * (1 - frac_correct) / n) # Lower bounds. frac_correct - 1.96 * se #>                    children_in_2100 children_with_1_or_more_vaccination  #>                           0.1028853                           0.1216186  # Upper bounds. frac_correct + 1.96 * se #>                    children_in_2100 children_with_1_or_more_vaccination  #>                           0.1953603                           0.3583814   # Construct Z-scores and p-values. z <- (frac_correct - expected) / se pt(z, df = n - 1) #>                    children_in_2100 children_with_1_or_more_vaccination  #>               0.0000000000001058928               0.0643556683546200603"},{"path":"https://openintrostat.github.io/openintro/reference/russian_influence_on_us_election_2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","title":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","text":"Survey Russian citizens whether believed government tried influence 2016 US election. survey taken Spring 2018 Pew Research.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/russian_influence_on_us_election_2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","text":"","code":"russian_influence_on_us_election_2016"},{"path":"https://openintrostat.github.io/openintro/reference/russian_influence_on_us_election_2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","text":"data frame 506 observations following variable. influence_2016 Response Russian survey participant question whether government tried influence 2016 election United States.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/russian_influence_on_us_election_2016.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","text":"https://www.pewresearch.org/global/2018/08/21/russians-say--government---try--influence-u-s-presidential-election/","code":""},{"path":"https://openintrostat.github.io/openintro/reference/russian_influence_on_us_election_2016.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","text":"actual sample size 1000. However, original data simple random sample; accounting design, equivalent sample size 506, used dataset keep things simpler intro stat analyses.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/russian_influence_on_us_election_2016.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Russians' Opinions on US Election Influence in 2016 — russian_influence_on_us_election_2016","text":"","code":"table(russian_influence_on_us_election_2016) #> influence_2016 #> Did not try     Did try  Don't know  #>         359          76          71"},{"path":"https://openintrostat.github.io/openintro/reference/sa_gdp_elec.html","id":null,"dir":"Reference","previous_headings":"","what":"Sustainability and Economic Indicators for South Africa. — sa_gdp_elec","title":"Sustainability and Economic Indicators for South Africa. — sa_gdp_elec","text":"Includes yearly data gdp, gni, co2 emissions, start costs.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sa_gdp_elec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sustainability and Economic Indicators for South Africa. — sa_gdp_elec","text":"","code":"sa_gdp_elec"},{"path":"https://openintrostat.github.io/openintro/reference/sa_gdp_elec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sustainability and Economic Indicators for South Africa. — sa_gdp_elec","text":"data frame 16 rows 7 variables. year Year data collected. access_elec Access electricity percentage population. startup cost business startup procedures percent GNI. co2 CO2 emission kt (kiloton). gdp GDP per capita, PPP constant 2017 international dollars. gni GNI per capita, PPP constant 2017 international dollars. co2_kg_ppp kg per 2017 PPP dollars GDP.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sa_gdp_elec.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sustainability and Economic Indicators for South Africa. — sa_gdp_elec","text":"World Bank World Bank II Carbon Dioxide Information Analysis Center, Environmental Sciences Division, Oak Ridge National Laboratory","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sa_gdp_elec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sustainability and Economic Indicators for South Africa. — sa_gdp_elec","text":"","code":"library(ggplot2)  ggplot(sa_gdp_elec, aes(year, access_elec)) +   geom_point(alpha = 0.3) +   labs(     x = \"Year\",     y = \"Percent of Population\",     title = \"Access to Electricity in South Africa 2003 - 2018\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/salinity.html","id":null,"dir":"Reference","previous_headings":"","what":"Salinity in Bimini Lagoon, Bahamas — salinity","title":"Salinity in Bimini Lagoon, Bahamas — salinity","text":"Data collected three different water masses Bimini Lagoon, Bahamas.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/salinity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salinity in Bimini Lagoon, Bahamas — salinity","text":"","code":"salinity"},{"path":"https://openintrostat.github.io/openintro/reference/salinity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salinity in Bimini Lagoon, Bahamas — salinity","text":"data frame 30 rows 2 variables. site_number Location measurements taken. salinity_ppt Salinity value parts per thousand.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/salinity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Salinity in Bimini Lagoon, Bahamas — salinity","text":"Till, R. (1974) Statistical Methods Earth Scientist: Introduction. London: Macmillon, 104.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/salinity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Salinity in Bimini Lagoon, Bahamas — salinity","text":"","code":"library(ggplot2) library(broom)  ggplot(salinity, aes(x = salinity_ppt)) +   geom_dotplot() +   facet_wrap(~site_number, ncol = 1) #> Bin width defaults to 1/30 of the range of the data. Pick better value with #> `binwidth`.   tidy(aov(salinity_ppt ~ site_number, data = salinity)) #> # A tibble: 2 × 6 #>   term           df sumsq meansq statistic   p.value #>   <chr>       <dbl> <dbl>  <dbl>     <dbl>     <dbl> #> 1 site_number     2 39.1  19.6        56.5  2.24e-10 #> 2 Residuals      27  9.35  0.346      NA   NA"},{"path":"https://openintrostat.github.io/openintro/reference/sat_improve.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for SAT score improvement — sat_improve","title":"Simulated data for SAT score improvement — sat_improve","text":"Fake data score improvements students took course SAT score improvement company.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sat_improve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for SAT score improvement — sat_improve","text":"","code":"sat_improve"},{"path":"https://openintrostat.github.io/openintro/reference/sat_improve.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for SAT score improvement — sat_improve","text":"data frame 30 observations following variable. sat_improve numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sat_improve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated data for SAT score improvement — sat_improve","text":"","code":"sat_improve #> # A tibble: 30 × 1 #>    sat_improve #>          <int> #>  1          57 #>  2         133 #>  3         231 #>  4          41 #>  5         114 #>  6         129 #>  7         170 #>  8         103 #>  9         259 #> 10         110 #> # ℹ 20 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/satgpa.html","id":null,"dir":"Reference","previous_headings":"","what":"SAT and GPA data — satgpa","title":"SAT and GPA data — satgpa","text":"SAT GPA data 1000 students unnamed college.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/satgpa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SAT and GPA data — satgpa","text":"","code":"satgpa"},{"path":"https://openintrostat.github.io/openintro/reference/satgpa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SAT and GPA data — satgpa","text":"data frame 1000 observations following 6 variables. sex Gender student. sat_v Verbal SAT percentile. sat_m Math SAT percentile. sat_sum Total verbal math SAT percentiles. hs_gpa High school grade point average. fy_gpa First year (college) grade point average.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/satgpa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SAT and GPA data — satgpa","text":"Educational Testing Service originally collected data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/satgpa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SAT and GPA data — satgpa","text":"https://chance.dartmouth.edu/course/Syllabi/Princeton96/ETSValidation.html","code":""},{"path":"https://openintrostat.github.io/openintro/reference/satgpa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SAT and GPA data — satgpa","text":"","code":"library(ggplot2) library(broom)  # Verbal scores ggplot(satgpa, aes(x = sat_v, fy_gpa)) +   geom_point() +   geom_smooth(method = \"lm\") +   labs(     x = \"Verbal SAT percentile\",     y = \"First year (college) grade point average\"   ) #> `geom_smooth()` using formula = 'y ~ x'   mod <- lm(fy_gpa ~ sat_v, data = satgpa) tidy(mod) #> # A tibble: 2 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)   0.701    0.129        5.41 7.71e- 8 #> 2 sat_v         0.0361   0.00261     13.8  5.30e-40  # Math scores ggplot(satgpa, aes(x = sat_m, fy_gpa)) +   geom_point() +   geom_smooth(method = \"lm\") +   labs(     x = \"Math SAT percentile\",     y = \"First year (college) grade point average\"   ) #> `geom_smooth()` using formula = 'y ~ x'   mod <- lm(fy_gpa ~ sat_m, data = satgpa) tidy(mod) #> # A tibble: 2 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)   0.622    0.141        4.42 1.12e- 5 #> 2 sat_m         0.0339   0.00256     13.3  4.24e-37"},{"path":"https://openintrostat.github.io/openintro/reference/scale_color_openintro.html","id":null,"dir":"Reference","previous_headings":"","what":"Color scale constructor for OpenIntro IMS colors — scale_color_openintro","title":"Color scale constructor for OpenIntro IMS colors — scale_color_openintro","text":"Color scale constructor OpenIntro IMS colors","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scale_color_openintro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color scale constructor for OpenIntro IMS colors — scale_color_openintro","text":"","code":"scale_color_openintro(palette = \"main\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/scale_color_openintro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color scale constructor for OpenIntro IMS colors — scale_color_openintro","text":"palette Character name palette openintro_palettes discrete Boolean indicating whether color aesthetic discrete reverse Boolean indicating whether palette reversed ... Additional arguments passed ggplot2::discrete_scale() ggplot2::scale_color_gradientn(), used respectively discrete TRUE FALSE","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scale_color_openintro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color scale constructor for OpenIntro IMS colors — scale_color_openintro","text":"","code":"library(ggplot2)  # Categorical variable with three levels ggplot(evals, aes(   x = bty_avg, y = score,   color = rank, shape = rank )) +   geom_jitter(size = 2, alpha = 0.6) +   scale_color_openintro(\"three\")   # Categorical variable with two levels ggplot(evals, aes(   x = bty_avg, y = score,   color = language, shape = language )) +   geom_jitter(size = 2, alpha = 0.6) +   scale_color_openintro(\"two\")   # Continuous variable # Generates a palette, but not recommended ggplot(evals, aes(   x = bty_avg, y = score,   color = score )) +   geom_jitter(size = 2, alpha = 0.8) +   scale_color_openintro(discrete = FALSE)   # For continous palettes # use scale_color_gradient instead ggplot(evals, aes(   x = bty_avg, y = score,   color = score )) +   geom_jitter(size = 2) +   scale_color_gradient(low = IMSCOL[\"blue\", \"full\"], high = IMSCOL[\"blue\", \"f6\"])   ggplot(evals, aes(   x = bty_avg, y = score,   color = cls_perc_eval )) +   geom_jitter(size = 2) +   scale_color_gradient(low = COL[\"red\", \"full\"], high = COL[\"red\", \"f8\"])"},{"path":"https://openintrostat.github.io/openintro/reference/scale_fill_openintro.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill scale constructor for OpenIntro IMS colors — scale_fill_openintro","title":"Fill scale constructor for OpenIntro IMS colors — scale_fill_openintro","text":"Fill scale constructor OpenIntro IMS colors","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scale_fill_openintro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill scale constructor for OpenIntro IMS colors — scale_fill_openintro","text":"","code":"scale_fill_openintro(palette = \"main\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"https://openintrostat.github.io/openintro/reference/scale_fill_openintro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill scale constructor for OpenIntro IMS colors — scale_fill_openintro","text":"palette Character name palette openintro_palettes discrete Boolean indicating whether color aesthetic discrete reverse Boolean indicating whether palette reversed ... Additional arguments passed ggplot2::discrete_scale() ggplot2::scale_fill_gradientn(), used respectively discrete TRUE FALSE","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scale_fill_openintro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill scale constructor for OpenIntro IMS colors — scale_fill_openintro","text":"","code":"library(ggplot2) library(dplyr)  # Categorical variable with two levels ggplot(evals, aes(x = ethnicity, fill = ethnicity)) +   geom_bar() +   scale_fill_openintro(\"two\")   # Categorical variable with three levels ggplot(evals, aes(x = rank, fill = rank)) +   geom_bar() +   scale_fill_openintro(\"three\")   # Continuous variable with levels # Generates a palette, but may not be the best palette # in terms of color-blind and grayscale friendliness ggplot(diamonds, aes(x = clarity, fill = clarity)) +   geom_bar() +   scale_fill_openintro()   # For continuous palettes # use scale_color_gradient instead ggplot(evals, aes(   x = bty_avg, y = score,   color = score )) +   geom_jitter(size = 2) +   scale_color_gradient(low = IMSCOL[\"blue\", \"full\"], high = IMSCOL[\"blue\", \"f6\"])   ggplot(evals, aes(   x = bty_avg, y = score,   color = cls_perc_eval )) +   geom_jitter(size = 2) +   scale_color_gradient(low = IMSCOL[\"green\", \"full\"], high = IMSCOL[\"green\", \"f6\"])"},{"path":"https://openintrostat.github.io/openintro/reference/scotus_healthcare.html","id":null,"dir":"Reference","previous_headings":"","what":"Public Opinion with SCOTUS ruling on American Healthcare Act — scotus_healthcare","title":"Public Opinion with SCOTUS ruling on American Healthcare Act — scotus_healthcare","text":"June 28, 2012 U.S. Supreme Court upheld much debated 2010 healthcare law, declaring constitutional. Gallup poll released day decision indicates 46% 1,012 Americans agree decision.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scotus_healthcare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Public Opinion with SCOTUS ruling on American Healthcare Act — scotus_healthcare","text":"","code":"scotus_healthcare"},{"path":"https://openintrostat.github.io/openintro/reference/scotus_healthcare.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Public Opinion with SCOTUS ruling on American Healthcare Act — scotus_healthcare","text":"data frame 1012 observations following variable. response Response values reported agree .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scotus_healthcare.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Public Opinion with SCOTUS ruling on American Healthcare Act — scotus_healthcare","text":"Gallup, Americans Issue Split Decision Healthcare Ruling, retrieved 2012-06-28.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/scotus_healthcare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Public Opinion with SCOTUS ruling on American Healthcare Act — scotus_healthcare","text":"","code":"table(scotus_healthcare) #> response #> agree other  #>   466   546"},{"path":"https://openintrostat.github.io/openintro/reference/seattlepets.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of pets in Seattle — seattlepets","title":"Names of pets in Seattle — seattlepets","text":"Names registered pets Seattle, WA, 2003 2018, provided city's Open Data Portal.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/seattlepets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of pets in Seattle — seattlepets","text":"","code":"seattlepets"},{"path":"https://openintrostat.github.io/openintro/reference/seattlepets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Names of pets in Seattle — seattlepets","text":"data frame 52,519 rows 7 variables: license_issue_date Date animal registered Seattle license_number Unique license number animal_name Animal's name species Animal's species (dog, cat, goat, etc.) primary_breed Primary breed animal secondary_breed Secondary breed mixed zip_code Zip code animal registered ","code":""},{"path":"https://openintrostat.github.io/openintro/reference/seattlepets.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Names of pets in Seattle — seattlepets","text":"data come Seattle's Open Data Portal, https://data.seattle.gov/Community/Seattle-Pet-Licenses/jguv-t9rb","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sex_discrimination.html","id":null,"dir":"Reference","previous_headings":"","what":"Bank manager recommendations based on sex — sex_discrimination","title":"Bank manager recommendations based on sex — sex_discrimination","text":"Study 1970s whether sex influences hiring recommendations.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sex_discrimination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bank manager recommendations based on sex — sex_discrimination","text":"","code":"sex_discrimination"},{"path":"https://openintrostat.github.io/openintro/reference/sex_discrimination.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bank manager recommendations based on sex — sex_discrimination","text":"data frame 48 observations following 2 variables. sex factor levels female male decision factor levels promoted promoted","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sex_discrimination.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bank manager recommendations based on sex — sex_discrimination","text":"Rosen B Jerdee T. 1974. Influence sex role stereotypes personnel decisions. Journal Applied Psychology 59(1):9-14.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sex_discrimination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bank manager recommendations based on sex — sex_discrimination","text":"","code":"library(ggplot2)  table(sex_discrimination) #>         decision #> sex      promoted not promoted #>   male         21            3 #>   female       14           10  ggplot(sex_discrimination, aes(y = sex, fill = decision)) +   geom_bar(position = \"fill\")"},{"path":"https://openintrostat.github.io/openintro/reference/simpsons_paradox_covid.html","id":null,"dir":"Reference","previous_headings":"","what":"Simpson's Paradox: Covid — simpsons_paradox_covid","title":"Simpson's Paradox: Covid — simpsons_paradox_covid","text":"dataset Delta Variant Covid-19 cases UK. dataset gives great example Simpson's Paradox. aggregating results without regard age group, death rate vaccinated individuals higher -- much higher risk population. look populations comparable risks (breakout age groups), see vaccinated group tends lower risk risk-bucketed group many higher risk patients gotten vaccinated. dataset brought OpenIntro's attention Matthew T. Brenneman Embry-Riddle Aeronautical University. Note: totals original source differ cases ages associated .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simpsons_paradox_covid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simpson's Paradox: Covid — simpsons_paradox_covid","text":"","code":"simpsons_paradox_covid"},{"path":"https://openintrostat.github.io/openintro/reference/simpsons_paradox_covid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simpson's Paradox: Covid — simpsons_paradox_covid","text":"data frame 286,166 rows 3 variables: age_group Age person. Levels: 50,  50 +. vaccine_status Vaccination status person. Note: vaccinated group includes partially vaccinated. Levels: vaccinated, unvaccinated outcome person die Delta variant? Levels: death survived.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simpsons_paradox_covid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simpson's Paradox: Covid — simpsons_paradox_covid","text":"Public Health England: Technical briefing 20","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simpsons_paradox_covid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simpson's Paradox: Covid — simpsons_paradox_covid","text":"","code":"library(dplyr) library(scales) # Calculate the mortality rate for all cases by vaccination status simpsons_paradox_covid |>   group_by(vaccine_status, outcome) |>   summarize(count = n()) |>   ungroup() |>   group_by(vaccine_status) |>   mutate(total = sum(count)) |>   filter(outcome == \"death\") |>   select(c(vaccine_status, count, total)) |>   mutate(mortality_rate = label_percent(accuracy = 0.01)(round(count / total, 4))) |>   select(-c(count, total)) #> `summarise()` has grouped output by 'vaccine_status'. You can override using #> the `.groups` argument. #> # A tibble: 2 × 2 #> # Groups:   vaccine_status [2] #>   vaccine_status mortality_rate #>   <chr>          <chr>          #> 1 unvaccinated   0.17%          #> 2 vaccinated     0.41%           # Calculate mortality rate by age group and vaccination status simpsons_paradox_covid |>   group_by(age_group, vaccine_status, outcome) |>   summarize(count = n()) |>   ungroup() |>   group_by(age_group, vaccine_status) |>   mutate(total = sum(count)) |>   filter(outcome == \"death\") |>   select(c(age_group, vaccine_status, count, total)) |>   mutate(mortality_rate = label_percent(accuracy = 0.01)(round(count / total, 4))) |>   select(-c(count, total)) #> `summarise()` has grouped output by 'age_group', 'vaccine_status'. You can #> override using the `.groups` argument. #> # A tibble: 4 × 3 #> # Groups:   age_group, vaccine_status [4] #>   age_group vaccine_status mortality_rate #>   <chr>     <chr>          <chr>          #> 1 50 +      unvaccinated   5.96%          #> 2 50 +      vaccinated     1.68%          #> 3 under 50  unvaccinated   0.03%          #> 4 under 50  vaccinated     0.02%"},{"path":"https://openintrostat.github.io/openintro/reference/simulated_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated datasets, not necessarily drawn from a normal distribution. — simulated_dist","title":"Simulated datasets, not necessarily drawn from a normal distribution. — simulated_dist","text":"Data simulated R, simulations represent data actual normal distributions.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simulated_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated datasets, not necessarily drawn from a normal distribution. — simulated_dist","text":"","code":"simulated_dist"},{"path":"https://openintrostat.github.io/openintro/reference/simulated_dist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated datasets, not necessarily drawn from a normal distribution. — simulated_dist","text":"format : List 4 $ d1: dataset 100 observations.  $ d2: dataset 50 observations.  $ d3: num dataset 500 observations.  $ d4: dataset 15 observations.  $ d5: num dataset 25 observations.  $ d6: dataset 50 observations.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simulated_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated datasets, not necessarily drawn from a normal distribution. — simulated_dist","text":"","code":"data(simulated_dist) lapply(simulated_dist, qqnorm)       #> $d1 #> $d1$x #>   [1]  0.93458929 -0.16365849 -1.05812162 -1.15034938 -0.97411388  0.51007346 #>   [7]  0.21470157 -0.42614801  0.37185609  0.29237490 -0.37185609 -1.51410189 #>  [13]  0.03760829 -0.13830421  1.69539771  0.39885507 -1.01522203  0.31863936 #>  [19] -0.26631061 -1.95996398 -1.69539771  0.16365849 -0.34512553  0.65883769 #>  [25]  1.81191067  1.10306256  0.75541503  1.15034938  0.45376219 -0.65883769 #>  [31]  0.24042603 -0.06270678 -1.10306256  1.25356544  0.18911843 -0.89647336 #>  [37] -1.37220381 -0.93458929 -0.08784484 -0.69030882  0.11303854  0.34512553 #>  [43] -0.21470157 -0.59776013  1.20035886  0.56805150 -0.51007346  0.13830421 #>  [49] -0.29237490  0.42614801 -0.18911843 -1.43953147  1.01522203 -2.57582930 #>  [55] -0.03760829 -0.11303854 -0.82389363 -0.31863936 -0.24042603 -1.31057911 #>  [61]  1.95996398  0.06270678  1.37220381  0.59776013  0.26631061 -0.72247905 #>  [67]  2.17009038  0.01253347 -1.20035886  1.51410189 -2.17009038  0.85961736 #>  [73]  1.05812162 -1.59819314  0.89647336 -0.48172685  1.43953147 -0.39885507 #>  [79]  0.53883603 -1.81191067  0.69030882  2.57582930 -0.78919165 -0.56805150 #>  [85]  0.78919165 -0.01253347 -0.85961736 -0.75541503  0.48172685  0.72247905 #>  [91]  1.31057911  1.59819314  0.08784484  0.97411388 -0.53883603  0.82389363 #>  [97] -1.25356544 -0.62800601 -0.45376219  0.62800601 #>  #> $d1$y #>   [1]  94.26  79.54  68.06  63.96  68.19  89.73  85.41  76.29  87.96  87.32 #>  [11]  77.23  58.01  82.76  80.17 111.07  88.07  68.12  87.58  78.14  39.64 #>  [21]  54.84  84.88  77.49  91.56 112.59  97.78  92.86 100.78  88.17  71.69 #>  [31]  86.64  80.79  64.77 103.20  84.88  69.51  60.65  68.41  80.48  71.39 #>  [41]  84.21  87.66  78.76  74.04 101.89  89.83  74.83  84.47  77.82  88.07 #>  [51]  79.19  58.31  96.49   4.27  81.02  80.36  69.74  77.78  78.58  62.12 #>  [61] 116.55  83.32 103.85  90.29  86.96  71.35 119.21  82.68  63.13 109.77 #>  [71]  30.63  93.48  97.25  56.43  94.07  74.97 105.69  76.50  89.74  47.85 #>  [81]  92.37 128.92  70.12  74.07  92.88  81.49  69.54  70.66  88.60  92.74 #>  [91] 103.38 109.85  83.35  94.64  74.30  93.15  62.33  72.77  75.63  91.18 #>  #>  #> $d2 #> $d2$x #>  [1]  0.49585035 -0.61281299 -0.17637416 -0.43991317 -0.95416525  1.88079361 #>  [7] -0.49585035 -0.38532047  0.55338472  0.27931903  1.47579103  0.33185335 #> [13]  1.64485363  0.80642125  1.22652812 -0.87789630 -1.64485363  0.87789630 #> [19]  0.02506891  1.12639113 -0.22754498 -0.80642125 -1.47579103 -1.34075503 #> [25]  0.61281299 -0.07526986 -1.88079361 -1.12639113 -0.67448975 -0.73884685 #> [31]  1.34075503 -0.12566135  2.32634787 -1.22652812 -0.02506891  0.17637416 #> [37]  0.95416525  0.38532047 -1.03643339  0.12566135 -0.33185335  0.43991317 #> [43] -0.55338472  0.22754498  1.03643339 -0.27931903  0.73884685 -2.32634787 #> [49]  0.07526986  0.67448975 #>  #> $d2$y #>  [1] 10.410  8.256  9.035  8.487  7.985 12.801  8.367  8.619 10.431  9.883 #> [11] 12.596  9.962 12.641 11.221 12.362  8.111  5.772 11.269  9.259 12.357 #> [21]  8.928  8.173  6.020  6.590 10.582  9.163  5.017  7.320  8.195  8.181 #> [31] 12.547  9.042 13.811  7.195  9.215  9.873 11.662 10.123  7.784  9.383 #> [41]  8.754 10.248  8.332  9.878 11.794  8.868 11.171  4.703  9.362 10.648 #>  #>  #> $d3 #> $d3$x #>   [1] -0.603764838 -0.493017814 -1.075837361  0.866894167 -1.287270563 #>   [6]  0.052663527 -0.266310613  0.250759572 -0.990356294 -1.084823128 #>  [11]  1.066937632  0.926858513  2.074854734  0.715985990  0.143367435 #>  [16]  0.420664620  0.409735480 -1.439531471 -0.845198535  1.926836573 #>  [21]  0.082813292  1.210727133  0.504371986  1.298836633  0.448212281 #>  [26]  1.049387085 -0.102953344 -1.334622287 -0.313369439 -0.194224628 #>  [31] -1.006864279  0.002506631  1.425544037 -0.287146694 -0.562170292 #>  [36]  1.287270563 -0.852385798  0.261119960  0.224973358 -0.382622075 #>  [41] -1.190118042 -0.245589523  0.493017814 -1.131130901 -0.404289290 #>  [46] -0.158579730 -0.302855481  0.568051498 -0.057684425 -0.573952419 #>  [51]  0.017547298 -1.425544037 -0.189118426  0.709522974 -0.214701568 #>  [56]  0.690308824  0.459326111 -0.118085389  0.585814766  1.346938626 #>  [61] -1.995393310  1.695397710 -2.365618127 -0.128188248 -2.575829304 #>  [66] -1.483280127 -0.297611102  1.716886018  0.163658486 -0.481726850 #>  [71]  0.168741468  0.476104403 -0.281926330 -1.231863709 -0.163658486 #>  [76]  1.093897353  0.276713637 -0.533048511 -1.895697924  1.580466818 #>  [81]  1.995393310  1.398376621 -0.409735480  2.170090378  0.184017151 #>  [86] -0.308108202  0.334503036  1.546433122 -0.123135248 -0.585814766 #>  [91]  0.521526572 -0.261119960 -0.527278791  0.696684917  1.253565438 #>  [96]  0.178920660  0.287146694 -0.255936332  0.573952419 -0.361133034 #> [101]  0.022561568  0.426148008  0.748763107  0.199335898 -0.153505060 #> [106]  2.365618127 -1.346938626 -0.017547298  0.230118101  0.911560735 #> [111]  0.845198535  1.221227222 -0.782365165 -0.027576406  0.481726850 #> [116]  0.087844838 -1.140687476  0.510073457  2.747781385  0.658837693 #> [121]  0.802956288  1.616436371 -0.683960672  0.266310613  0.102953344 #> [126] -1.200358858 -1.739197665  0.533048511 -2.290367878  1.359462745 #> [131] -0.889005731 -0.768820293 -1.411830078  0.538836030 -0.775574943 #> [136] -0.442676144 -0.742144154  0.437153541 -0.762100541 -0.007519956 #> [141] -0.240426031 -0.138304208  0.128188248 -0.640265509  2.033520149 #> [146]  0.057684425 -1.112321367  1.439531471 -1.563223647  0.072756358 #> [151] -0.448212281  0.355787114 -1.040731886  0.062706778  1.084823128 #> [156]  0.823893630 -1.546433122  1.895697924  1.468383798  0.209574223 #> [161] -0.755415026 -0.077783842 -0.789191653  0.677639965  0.388021666 #> [166] -0.809895915 -0.510073457 -1.580466818 -1.264641136  1.598193140 #> [171]  1.674664889  1.453806359 -1.616436371  0.077783842  1.190118042 #> [176] -1.275874179  0.235268941  0.703089460  1.264641136  0.214701568 #> [181]  1.739197665 -0.072756358 -1.032153958 -0.097914734  1.483280127 #> [186] -0.550465695 -1.058121618  0.255936332 -0.729002718 -1.695397710 #> [191]  0.366489294  0.118085389 -0.042625585  0.012533470 -2.074854734 #> [196] -0.318639364  0.775574943 -1.180000540 -0.148434341  1.275874179 #> [201]  0.889005731 -0.974113877 -1.253565438 -1.498513068  0.782365165 #> [206] -0.184017151  0.442676144  2.226211769 -0.204452382 -1.023651312 #> [211] -0.292374896  1.121676528 -0.437153541 -0.579873392  0.640265509 #> [216]  0.729002718 -2.120071690  1.131130901 -1.674664889  0.609791399 #> [221]  0.591776891  0.302855481  1.372203809 -0.966088297 -0.002506631 #> [226] -1.786613365  1.180000540 -0.012533470 -0.350451343  0.107994569 #> [231]  0.350451343 -0.609791399 -0.420664620  1.242641419 -0.715985990 #> [236]  1.170002408 -1.762410298 -0.230118101 -0.919182735  0.762100541 #> [241] -0.903991328  0.393432594 -0.665078946  0.579873392  0.646431416 #> [246] -0.859617364  1.032153958  0.240426031  0.398855066  0.123135248 #> [251] -1.298836633 -0.092878609 -0.143367435 -1.385171608 -0.393432594 #> [256] -0.634123849 -0.671346215 -0.377233617 -1.926836573 -0.334503036 #> [261] -1.635234015  0.603764838 -1.530067588  1.866295743 -1.398376621 #> [266]  1.103062556  0.982202695 -0.371856089 -1.160119883 -0.735557557 #> [271]  0.966088297  1.322505137 -0.556308467 -0.487364565 -0.235268941 #> [276] -0.830953321 -0.067730713 -0.748763107  1.635234015 -1.468383798 #> [281]  0.852385798 -0.866894167 -0.464904288 -0.597760126 -0.621911596 #> [286]  0.318639364 -0.329205984  1.006864279 -0.209574223  1.563223647 #> [291]  0.007519956 -0.415193851  0.838054670 -1.121676528 -0.911560735 #> [296] -3.090232306 -0.178920660 -0.276713637 -0.398855066 -2.457263390 #> [301]  0.313369439  2.457263390 -0.982202695  0.809895915  1.530067588 #> [306]  1.310579112 -1.654627902 -1.093897353  1.150349380 -1.322505137 #> [311] -0.047643956  0.148434341 -1.221227222  0.415193851  0.498686864 #> [316] -0.958124465  0.158579730  0.735557557 -0.926858513  1.838423669 #> [321] -1.453806359  0.329205984 -0.366489294 -0.199335898  0.323918153 #> [326] -0.709522974  1.654627902  0.173828813  0.597760126  0.990356294 #> [331] -0.677639965  1.498513068 -1.514101888 -0.703089460  0.628006014 #> [336]  0.683960672  0.092878609 -1.372203809  0.404289290  0.371856089 #> [341] -1.716886018  0.722479052  0.189118426 -0.504371986 -2.170090378 #> [346]  1.959963985 -1.866295743 -1.959963985  0.067730713  0.896473364 #> [351]  0.042625585  0.527278791  0.027576406 -1.049387085  0.830953321 #> [356] -0.133244524  0.816874766  0.958124465  0.037608288  0.047643956 #> [361]  1.023651312 -0.628006014  2.120071690 -0.521526572 -1.242641419 #> [366] -0.323918153  0.515791557  1.811910673  0.665078946 -0.345125531 #> [371]  0.097914734 -0.431644239  0.339809491  0.297611102 -0.950220942 #> [376] -0.052663527  0.487364565 -0.032591937 -0.896473364 -0.796055117 #> [381] -1.310579112 -0.802956288  0.950220942 -0.224973358 -0.271508452 #> [386] -0.459326111  0.634123849 -0.498686864  0.544641655  0.194224628 #> [391] -1.170002408 -0.942376333  0.934589291  0.652621998  0.204452382 #> [396]  0.550465695 -0.113038541  0.796055117 -0.062706778  1.160119883 #> [401] -1.103062556  0.903991328  0.153505060 -0.355787114 -1.359462745 #> [406] -0.591776891  0.859617364 -0.838054670  0.133244524 -1.838423669 #> [411]  0.345125531 -0.881587347 -0.476104403  0.556308467  0.942376333 #> [416]  1.514101888 -0.426148008 -0.250759572  0.562170292  0.032591937 #> [421] -0.823893630 -2.747781385  0.361133034 -1.150349380  0.998576271 #> [426]  0.881587347 -1.015222033 -0.816874766 -0.722479052  0.755415026 #> [431]  1.786613365 -0.022561568 -0.087844838  0.974113877 -0.339809491 #> [436]  1.140687476  0.138304208  1.385171608  1.411830078  0.768820293 #> [441]  0.308108202  0.245589523  0.742144154  0.113038541  1.762410298 #> [446]  0.453762190  1.200358858 -0.646431416 -0.568051498 -1.598193140 #> [451]  1.112321367  0.271508452  0.615840189  1.015222033 -0.168741468 #> [456] -0.219834564 -0.107994569  0.464904288 -0.934589291  0.919182735 #> [461] -0.690308824 -0.696684917  0.671346215  1.058121618 -1.066937632 #> [466]  1.334622287 -0.544641655 -0.615840189 -0.658837693 -0.453762190 #> [471] -0.082813292 -0.515791557  0.219834564  2.575829304  0.789191653 #> [476]  0.621911596 -0.874217165  3.090232306  0.431644239 -0.652621998 #> [481] -0.388021666 -0.538836030 -0.998576271 -1.210727133 -2.033520149 #> [486]  1.040731886  1.075837361 -0.470496968  2.290367878 -0.173828813 #> [491] -1.811910673  0.377233617  0.292374896  0.874217165 -2.226211769 #> [496] -0.037608288  0.382622075  0.281926330  1.231863709  0.470496968 #>  #> $d3$y #>   [1] -2.271 -2.205 -2.516 -1.583 -2.641 -1.948 -2.109 -1.847 -2.484 -2.523 #>  [11] -1.458 -1.544 -0.976 -1.652 -1.894 -1.781 -1.788 -2.733 -2.422 -1.015 #>  [21] -1.939 -1.381 -1.754 -1.358 -1.770 -1.460 -2.018 -2.659 -2.137 -2.064 #>  [31] -2.503 -1.969 -1.309 -2.121 -2.247 -1.361 -2.423 -1.846 -1.851 -2.164 #>  [41] -2.579 -2.094 -1.758 -2.553 -2.175 -2.037 -2.134 -1.728 -2.008 -2.269 #>  [51] -1.962 -2.729 -2.063 -1.657 -2.076 -1.678 -1.766 -2.022 -1.716 -1.330 #>  [61] -3.047 -1.198 -3.141 -2.026 -3.251 -2.766 -2.127 -1.191 -1.879 -2.203 #>  [71] -1.871 -1.762 -2.114 -2.617 -2.041 -1.446 -1.844 -2.224 -3.023 -1.231 #>  [81] -1.001 -1.324 -2.180 -0.937 -1.862 -2.136 -1.821 -1.245 -2.025 -2.270 #>  [91] -1.746 -2.103 -2.224 -1.676 -1.369 -1.865 -1.841 -2.098 -1.728 -2.152 #> [101] -1.959 -1.781 -1.635 -1.856 -2.037 -0.793 -2.663 -1.976 -1.851 -1.548 #> [111] -1.594 -1.375 -2.372 -1.983 -1.761 -1.937 -2.559 -1.753 -0.600 -1.688 #> [121] -1.605 -1.215 -2.310 -1.846 -1.919 -2.582 -2.923 -1.740 -3.141 -1.330 #> [131] -2.460 -2.361 -2.727 -1.740 -2.372 -2.187 -2.339 -1.777 -2.358 -1.973 #> [141] -2.094 -2.028 -1.905 -2.289 -1.001 -1.948 -2.550 -1.304 -2.810 -1.943 #> [151] -2.190 -1.809 -2.509 -1.948 -1.455 -1.600 -2.810 -1.021 -1.264 -1.853 #> [161] -2.357 -2.012 -2.379 -1.681 -1.795 -2.390 -2.217 -2.812 -2.625 -1.219 #> [171] -1.210 -1.303 -2.825 -1.940 -1.388 -2.627 -1.850 -1.661 -1.369 -1.853 #> [181] -1.177 -2.011 -2.505 -2.017 -1.262 -2.238 -2.513 -1.847 -2.333 -2.874 #> [191] -1.802 -1.914 -2.002 -1.963 -3.067 -2.139 -1.611 -2.574 -2.037 -1.368 #> [201] -1.574 -2.480 -2.620 -2.770 -1.608 -2.062 -1.773 -0.881 -2.073 -2.505 #> [211] -2.122 -1.438 -2.187 -2.270 -1.692 -1.647 -3.085 -1.436 -2.867 -1.702 #> [221] -1.708 -1.837 -1.327 -2.478 -1.971 -2.941 -1.395 -1.975 -2.145 -1.919 #> [231] -1.810 -2.276 -2.183 -1.370 -2.328 -1.408 -2.925 -2.092 -2.462 -1.629 #> [241] -2.461 -1.795 -2.299 -1.725 -1.690 -2.434 -1.472 -1.849 -1.793 -1.906 #> [251] -2.643 -2.016 -2.032 -2.696 -2.169 -2.285 -2.301 -2.154 -3.027 -2.141 #> [261] -2.835 -1.704 -2.788 -1.029 -2.727 -1.444 -1.508 -2.153 -2.570 -2.339 #> [271] -1.515 -1.356 -2.242 -2.204 -2.093 -2.410 -2.009 -2.357 -1.214 -2.751 #> [281] -1.587 -2.438 -2.194 -2.271 -2.278 -1.829 -2.140 -1.503 -2.075 -1.235 #> [291] -1.965 -2.183 -1.596 -2.551 -2.462 -3.723 -2.059 -2.113 -2.174 -3.183 #> [301] -1.831 -0.748 -2.482 -1.605 -1.250 -1.358 -2.845 -2.539 -1.431 -2.654 #> [311] -2.003 -1.891 -2.593 -1.782 -1.756 -2.477 -1.882 -1.637 -2.467 -1.089 #> [321] -2.739 -1.822 -2.153 -2.073 -1.828 -2.325 -1.213 -1.869 -1.708 -1.508 #> [331] -2.310 -1.262 -2.788 -2.320 -1.697 -1.681 -1.935 -2.677 -1.792 -1.802 #> [341] -2.876 -1.652 -1.861 -2.209 -3.094 -1.013 -2.992 -3.040 -1.948 -1.572 #> [351] -1.950 -1.742 -1.958 -2.513 -1.599 -2.027 -1.605 -1.520 -1.955 -1.950 #> [361] -1.474 -2.284 -0.960 -2.222 -2.618 -2.140 -1.752 -1.108 -1.687 -2.145 #> [371] -1.921 -2.184 -1.818 -1.840 -2.474 -2.005 -1.760 -1.991 -2.461 -2.383 #> [381] -2.652 -2.385 -1.529 -2.079 -2.112 -2.192 -1.696 -2.206 -1.737 -1.858 #> [391] -2.573 -2.474 -1.539 -1.689 -1.854 -1.737 -2.021 -1.606 -2.009 -1.419 #> [401] -2.550 -1.558 -1.887 -2.149 -2.666 -2.271 -1.587 -2.419 -1.902 -2.953 #> [411] -1.811 -2.449 -2.200 -1.736 -1.537 -1.260 -2.184 -2.096 -1.730 -1.958 #> [421] -2.400 -3.378 -1.808 -2.565 -1.508 -1.577 -2.504 -2.399 -2.333 -1.634 #> [431] -1.110 -1.980 -2.014 -1.509 -2.143 -1.432 -1.899 -1.325 -1.320 -1.617 #> [441] -1.834 -1.849 -1.636 -1.916 -1.166 -1.768 -1.388 -2.293 -2.254 -2.814 #> [451] -1.440 -1.846 -1.699 -1.499 -2.043 -2.077 -2.020 -1.765 -2.472 -1.547 #> [461] -2.317 -2.318 -1.686 -1.460 -2.514 -1.343 -2.233 -2.277 -2.298 -2.191 #> [471] -2.014 -2.219 -1.853 -0.720 -1.607 -1.699 -2.443 -0.588 -1.780 -2.298 #> [481] -2.168 -2.230 -2.497 -2.585 -3.055 -1.472 -1.456 -2.195 -0.845 -2.057 #> [491] -2.952 -1.802 -1.841 -1.580 -3.105 -1.996 -1.799 -1.844 -1.373 -1.764 #>  #>  #> $d4 #> $d4$x #>  [1]  0.0000000 -0.7279133  0.7279133  0.1678940 -1.2815516 -0.3406948 #>  [7] -0.5244005  1.8339146  1.2815516 -0.9674216 -0.1678940  0.9674216 #> [13] -1.8339146  0.5244005  0.3406948 #>  #> $d4$y #>  [1]  -2.428  -9.492  22.085   0.348 -11.842  -7.309  -8.679  62.640  44.868 #> [10] -11.637  -3.771  29.815 -15.360  15.987   0.455 #>  #>  #> $d5 #> $d5$x #>  [1] -0.4124631  1.2815516  0.5244005  0.1004337  2.0537489 -1.0803193 #>  [7]  0.2018935  0.0000000 -0.9153651 -1.5547736  0.4124631  0.7721932 #> [13]  0.6433454 -0.6433454 -2.0537489 -0.2018935 -0.5244005  1.0803193 #> [19]  0.9153651 -0.1004337  0.3054808  1.5547736 -0.3054808 -0.7721932 #> [25] -1.2815516 #>  #> $d5$y #>  [1] 0.12518967 1.38523336 0.42932262 0.21216231 2.53849858 0.04294709 #>  [7] 0.21375044 0.17849823 0.07541986 0.03460717 0.23392294 0.59369095 #> [13] 0.49266181 0.11147559 0.03079079 0.17256864 0.12017394 0.89772151 #> [19] 0.74596607 0.17359324 0.21682191 1.58918002 0.16736924 0.08512960 #> [25] 0.04107185 #>  #>  #> $d6 #> $d6$x #>  [1]  0.87789630 -0.95416525  1.47579103 -0.17637416 -1.64485363  0.49585035 #>  [7]  0.38532047  0.55338472  0.17637416 -0.22754498 -0.87789630  0.73884685 #> [13]  1.34075503  0.07526986  1.22652812 -0.02506891  0.43991317  2.32634787 #> [19] -0.27931903  0.12566135 -0.55338472 -0.61281299 -1.12639113 -0.43991317 #> [25] -0.49585035  0.22754498 -1.03643339 -1.34075503  0.61281299  0.95416525 #> [31] -0.33185335 -0.73884685 -2.32634787 -0.80642125 -1.22652812 -0.67448975 #> [37]  1.12639113  1.88079361  1.64485363  0.02506891 -1.47579103  0.80642125 #> [43] -0.07526986 -1.88079361  0.27931903 -0.38532047  1.03643339  0.33185335 #> [49]  0.67448975 -0.12566135 #>  #> $d6$y #>  [1] 14.979326  9.946512 15.267467 13.884563  8.135965 14.765309 14.629173 #>  [8] 14.796962 14.408737 13.766357 10.659862 14.946915 15.157319 14.236819 #> [15] 15.151479 14.210461 14.759770 15.651468 13.575074 14.374748 11.889450 #> [22] 11.751174  9.527796 12.479665 12.148917 14.418519  9.778454  9.366277 #> [29] 14.817677 14.989029 13.424924 11.140661  4.230451 10.704645  9.469232 #> [36] 11.718060 15.108169 15.596360 15.511591 14.215638  9.088439 14.947458 #> [43] 14.115836  6.887186 14.611961 12.864070 15.016325 14.616036 14.879602 #> [50] 14.107728 #>  #>"},{"path":"https://openintrostat.github.io/openintro/reference/simulated_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated datasets, drawn from a normal distribution. — simulated_normal","title":"Simulated datasets, drawn from a normal distribution. — simulated_normal","text":"Data simulated using rnorm.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simulated_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated datasets, drawn from a normal distribution. — simulated_normal","text":"","code":"simulated_normal"},{"path":"https://openintrostat.github.io/openintro/reference/simulated_normal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated datasets, drawn from a normal distribution. — simulated_normal","text":"format : List 3 $ n40 : 40 observations standard normal distribution.  $ n100: 100 observations standard normal distribution.  $ n400: 400 observations standard normal distribution.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simulated_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated datasets, drawn from a normal distribution. — simulated_normal","text":"","code":"data(simulated_normal) lapply(simulated_normal, qqnorm)    #> $n40 #> $n40$x #>  [1] -0.15731068  1.53412054  1.78046434  0.09413741 -0.28584087 -0.79777685 #>  [7] -0.35178434 -1.09162037  0.48877641  0.28584087  0.88714656  0.22111871 #> [13] -0.22111871  1.09162037  0.35178434 -0.56070303 -0.48877641  0.98423496 #> [19] -0.98423496  0.71436744 -1.35631175 -1.78046434  2.24140273 -0.09413741 #> [25] -2.24140273 -1.53412054  0.63565701  0.03133798 -0.41929575  1.21333962 #> [31]  0.56070303 -1.21333962  0.15731068 -0.03133798  0.41929575 -0.71436744 #> [37]  0.79777685 -0.63565701 -0.88714656  1.35631175 #>  #> $n40$y #>  [1] -0.010  1.390  1.598  0.383 -0.084 -0.475 -0.105 -1.062  0.607  0.539 #> [11]  0.871  0.450 -0.039  1.256  0.550 -0.333 -0.252  1.187 -0.916  0.677 #> [21] -1.324 -1.773  1.813  0.023 -2.291 -1.361  0.642  0.249 -0.132  1.345 #> [31]  0.629 -1.274  0.435  0.043  0.550 -0.465  0.756 -0.396 -0.767  1.348 #>  #>  #> $n100 #> $n100$x #>   [1] -0.82389363 -0.62800601  0.03760829  0.39885507 -0.97411388  1.01522203 #>   [7] -0.01253347  0.16365849 -0.45376219  0.53883603 -1.51410189  0.65883769 #>  [13] -0.21470157  0.56805150  0.11303854 -0.16365849  1.51410189  0.72247905 #>  [19]  0.42614801 -0.29237490 -0.85961736  0.26631061 -0.31863936 -0.48172685 #>  [25]  0.78919165  0.24042603 -0.13830421 -0.51007346  1.59819314  0.97411388 #>  [31]  1.15034938 -1.15034938 -0.24042603 -0.42614801  1.05812162  0.93458929 #>  [37] -0.37185609 -1.01522203  0.18911843 -1.05812162 -2.57582930 -0.03760829 #>  [43] -0.65883769  0.89647336 -0.69030882  1.10306256 -1.37220381  0.48172685 #>  [49]  1.25356544  0.75541503 -0.75541503  0.29237490  1.69539771  2.17009038 #>  [55] -0.34512553 -1.95996398  1.31057911  1.37220381 -0.56805150  1.43953147 #>  [61] -0.26631061 -0.06270678 -1.31057911 -0.53883603  0.51007346 -1.69539771 #>  [67] -0.72247905 -1.20035886  2.57582930 -1.81191067  0.45376219  0.08784484 #>  [73]  0.59776013 -0.78919165  0.34512553  0.69030882  0.06270678 -0.18911843 #>  [79] -1.59819314 -1.25356544  0.85961736  1.81191067 -0.11303854 -0.39885507 #>  [85]  0.62800601 -0.89647336 -0.59776013  0.01253347  1.95996398  1.20035886 #>  [91] -0.08784484  0.37185609  0.31863936  0.21470157 -2.17009038 -1.43953147 #>  [97] -0.93458929 -1.10306256  0.13830421  0.82389363 #>  #> $n100$y #>   [1] -0.780 -0.552 -0.027  0.330 -0.964  0.865 -0.112  0.075 -0.392  0.365 #>  [11] -1.738  0.491 -0.245  0.436  0.016 -0.202  1.322  0.515  0.333 -0.280 #>  [21] -0.843  0.181 -0.284 -0.409  0.542  0.117 -0.194 -0.415  1.362  0.826 #>  [31]  1.099 -1.243 -0.265 -0.387  0.901  0.706 -0.353 -1.050  0.081 -1.102 #>  [41] -2.705 -0.142 -0.608  0.661 -0.616  1.025 -1.384  0.337  1.140  0.523 #>  [51] -0.662  0.190  1.468  2.380 -0.351 -2.125  1.141  1.149 -0.448  1.166 #>  [61] -0.269 -0.145 -1.319 -0.445  0.340 -1.789 -0.626 -1.302  2.441 -2.016 #>  [71]  0.333 -0.019  0.457 -0.706  0.236  0.496 -0.020 -0.228 -1.756 -1.309 #>  [81]  0.564  1.597 -0.172 -0.369  0.478 -0.854 -0.520 -0.045  1.654  1.122 #>  [91] -0.155  0.281  0.205  0.096 -2.303 -1.399 -0.877 -1.205  0.020  0.563 #>  #>  #> $n400 #> $n400$x #>   [1]  0.678428569 -0.499396620 -0.726552721 -0.059567630 -1.380281464 #>   [6] -0.402250065  0.368500597  1.074720238  0.751253680  0.639496484 #>  [11] -0.793476939  0.375215774  1.981814554 -0.654949917 -0.224330687 #>  [16]  0.237202109  0.009399994 -1.504316083 -1.795965526  1.206823821 #>  [21]  2.028590667 -0.308765388  0.409054045 -0.328544505 -0.135141499 #>  [26] -1.052653124 -0.979161881 -2.376030842  0.485248616  2.281819484 #>  [31]  0.535216728 -0.819502108  0.302199481 -0.751253680 -0.609036871 #>  [36] -0.443367416 -0.109885730 -0.103583352 -1.097323504 -0.710329226 #>  [41]  1.260469622  0.549736672  1.085952518 -2.281819484  0.443367416 #>  [46] -0.040743980 -3.023341440 -0.571737242 -0.901166123 -1.063621938 #>  [51] -0.855092394 -0.205092316  1.120501767 -0.864160004 -0.429581633 #>  [56] -0.282578452 -0.810766110 -1.939010990  1.288706908 -1.274461242 #>  [61] -0.579132162  1.544364727  0.422719399 -0.436464156  0.243652454 #>  [66]  0.072128055  0.192309216 -2.138206341 -0.321937557 -0.084699869 #>  [71]  0.873299230  1.485165457  0.891800264  0.631826891 -1.862731867 #>  [76] -2.204346288  0.047016597 -0.837164694  1.052653124  1.380281464 #>  [81] -1.587055832 -0.217909019 -1.132319821  1.587055832 -0.457237983 #>  [86]  0.097285085 -1.609532291  0.616597870 -0.678428569 -1.333096920 #>  [91] -0.154139175  0.147800772  0.078412413 -0.381947913 -0.694290576 #>  [96]  2.376030842 -0.594018110  0.594018110 -0.734736478  1.736361133 #> [101] -0.034472965 -0.959116617 -0.256583906  0.864160004 -0.185929561 #> [106]  0.154139175 -0.122503846 -0.702287319  1.108838172 -0.097285085 #> [111] -0.295646576  1.430756549  1.504316083 -1.233203098 -1.524034873 #> [116]  0.624194284  0.429581633  1.009990169 -0.828301100  1.156443004 #> [121] -0.485248616 -0.759589496 -0.355119592  0.003133290 -0.409054045 #> [126] -0.269558410  0.211496324  1.565353693 -0.999608517  1.682355113 #> [131]  0.269558410 -0.237202109 -0.639496484  2.204346288 -0.053291064 #> [136] -1.206823821  0.601510531 -1.085952518  1.765379538 -0.147800772 #> [141]  0.015667068 -0.003133290  0.395464657  0.250112952 -0.230761619 #> [146] -1.219907348  0.021934756 -1.009990169  0.256583906 -0.624194284 #> [151] -0.784920810  0.759589496 -1.156443004  0.939449517  1.939010990 #> [156] -0.631826891 -0.375215774 -0.670561368 -0.166834846 -1.736361133 #> [161] -1.413529819 -0.891800264 -0.276062581 -0.802091554 -0.647203881 #> [166]  0.837164694  2.080278453  0.173192651  1.219907348 -0.616597870 #> [171] -0.718417337 -0.513645303 -1.466544527 -1.565353693 -0.929751042 #> [176]  0.355119592  1.132319821  1.181258621  1.413529819 -0.557040146 #> [181] -0.128820101  0.381947913 -0.263065623  0.929751042 -1.632852606 #> [186] -0.586558889 -0.601510531 -0.471197085  0.819502108  0.527999043 #> [191] -1.485165457  0.122503846  0.464206227  3.023341440  0.436464156 #> [196]  0.341801873  0.263065623  1.448418657  0.160483777  0.361801997 #> [201] -0.065846544 -0.388697408 -0.949237172  1.466544527  0.499396620 #> [206] -2.028590667 -1.396712645 -0.302199481  2.138206341  0.328544505 #> [211]  0.308765388  0.882511988  1.396712645 -0.341801873  0.828301100 #> [216] -1.364214709  1.144298175 -1.041809519 -0.021934756 -0.910611707 #> [221]  1.795965526 -0.535216728 -1.260469622  0.230761619 -0.969090575 #> [226] -1.120501767 -0.395464657  0.471197085  0.141468301  0.564373456 #> [231]  0.289106343  1.168760845 -1.020481835  0.609036871 -1.288706908 #> [236]  0.348453007  0.224330687 -0.250112952 -1.430756549  0.053291064 #> [241] -1.657096335 -0.028203307 -1.348492596  0.205092316  2.497705474 #> [246] -1.108838172 -2.673787315  0.084699869 -0.415877014 -0.361801997 #> [251]  0.734736478  1.333096920  1.097323504 -0.920139242 -0.767978430 #> [256] -0.846094551  1.632852606  0.726552721 -0.315344633 -0.009399994 #> [261] -0.047016597 -0.090990676 -0.478211048 -1.448418657  0.166834846 #> [266]  0.776421761 -0.520808760  0.571737242  0.116192476 -0.179557465 #> [271]  0.457237983  0.402250065  1.862731867 -0.289106343  0.710329226 #> [276]  0.109885730 -1.031087050  0.579132162  1.193943679  0.969090575 #> [281]  1.348492596  1.657096335 -0.422719399  1.246720498  0.450291871 #> [286]  0.217909019  0.647203881  0.542462404  0.506508107  0.694290576 #> [291] -0.776421761  1.828330267  0.999608517 -1.828330267  1.318010897 #> [296]  0.034472965  0.901166123  0.979161881  1.609532291 -0.492310300 #> [301]  0.670561368  0.388697408 -0.527999043 -0.211496324  0.654949917 #> [306]  0.784920810  1.364214709 -0.686337987 -0.450291871  0.198696707 #> [311]  0.742969742 -1.193943679  0.282578452 -0.348453007  0.040743980 #> [316] -0.141468301  0.065846544  0.855092394 -2.080278453  0.557040146 #> [321] -2.497705474  0.662735452 -1.074720238  0.103583352  0.802091554 #> [326]  0.793476939  1.020481835 -1.708735258  1.274461242  0.810766110 #> [331] -0.742969742 -0.116192476  0.492310300 -0.989333498 -1.981814554 #> [336] -1.181258621  0.059567630  0.128820101  0.586558889 -1.682355113 #> [341] -0.160483777  2.673787315 -0.873299230 -1.144298175  1.041809519 #> [346] -0.564373456 -0.015667068  1.233203098  0.315344633 -0.549736672 #> [351] -0.192309216  0.135141499 -0.173192651 -0.939449517 -0.198696707 #> [356] -1.303219015  0.910611707  0.718417337  1.063621938  0.702287319 #> [361]  1.303219015  0.949237172  0.686337987  0.415877014 -1.544364727 #> [366] -1.765379538  0.179557465  0.335165825 -0.464206227  1.708735258 #> [371] -0.335165825  0.028203307  0.520808760  0.090990676  0.846094551 #> [376] -1.899490611 -0.368500597  0.959116617 -0.882511988  1.031087050 #> [381]  0.513645303 -0.072128055  1.899490611 -0.542462404 -0.078412413 #> [386] -0.506508107  0.989333498  0.767978430  1.524034873 -1.246720498 #> [391] -0.662735452 -1.168760845 -0.243652454  0.276062581  0.185929561 #> [396]  0.295646576  0.321937557 -1.318010897  0.478211048  0.920139242 #>  #> $n400$y #>   [1]  0.673 -0.538 -0.703 -0.004 -1.395 -0.354  0.415  1.097  0.740  0.657 #>  [11] -0.759  0.415  2.094 -0.662 -0.161  0.293  0.057 -1.487 -1.822  1.192 #>  [21]  2.186 -0.260  0.453 -0.267 -0.049 -1.075 -0.959 -2.338  0.512  2.365 #>  [31]  0.560 -0.812  0.363 -0.731 -0.644 -0.448 -0.024 -0.024 -1.133 -0.692 #>  [41]  1.233  0.566  1.109 -2.215  0.494  0.011 -2.785 -0.590 -0.895 -1.084 #>  [51] -0.848 -0.129  1.132 -0.851 -0.419 -0.232 -0.789 -2.018  1.302 -1.276 #>  [61] -0.592  1.578  0.474 -0.437  0.300  0.145  0.263 -2.189 -0.265 -0.020 #>  [71]  0.850  1.523  0.938  0.651 -1.866 -2.202  0.083 -0.816  1.082  1.448 #>  [81] -1.563 -0.145 -1.168  1.633 -0.472  0.173 -1.592  0.623 -0.674 -1.336 #>  [91] -0.059  0.209  0.152 -0.345 -0.686  2.494 -0.616  0.615 -0.718  1.748 #> [101]  0.011 -0.936 -0.196  0.839 -0.099  0.216 -0.036 -0.687  1.126 -0.024 #> [111] -0.239  1.475  1.548 -1.254 -1.513  0.635  0.482  1.068 -0.814  1.171 #> [121] -0.509 -0.733 -0.320  0.050 -0.359 -0.220  0.269  1.581 -0.967  1.725 #> [131]  0.322 -0.176 -0.655  2.362 -0.004 -1.209  0.622 -1.125  1.767 -0.053 #> [141]  0.066  0.049  0.450  0.302 -0.172 -1.237  0.072 -1.007  0.312 -0.647 #> [151] -0.759  0.753 -1.179  0.984  1.947 -0.653 -0.340 -0.669 -0.066 -1.774 #> [161] -1.409 -0.875 -0.225 -0.775 -0.657  0.812  2.278  0.250  1.206 -0.646 #> [171] -0.693 -0.545 -1.440 -1.548 -0.924  0.408  1.135  1.173  1.472 -0.578 #> [181] -0.040  0.422 -0.214  0.983 -1.605 -0.600 -0.641 -0.501  0.795  0.542 #> [191] -1.471  0.185  0.504  3.559  0.487  0.406  0.318  1.485  0.217  0.409 #> [201] -0.005 -0.351 -0.932  1.504  0.528 -2.061 -1.405 -0.256  2.293  0.385 #> [211]  0.363  0.928  1.455 -0.317  0.804 -1.358  1.137 -1.072  0.015 -0.905 #> [221]  1.768 -0.562 -1.268  0.284 -0.952 -1.163 -0.352  0.507  0.194  0.579 #> [231]  0.345  1.171 -1.009  0.622 -1.311  0.407  0.277 -0.191 -1.417  0.089 #> [241] -1.607  0.012 -1.355  0.267  2.723 -1.160 -2.613  0.161 -0.371 -0.331 #> [251]  0.726  1.389  1.111 -0.911 -0.740 -0.818  1.667  0.714 -0.262  0.045 #> [261]  0.009 -0.022 -0.508 -1.423  0.229  0.765 -0.549  0.587  0.183 -0.091 #> [271]  0.501  0.452  1.927 -0.237  0.697  0.181 -1.044  0.605  1.178  1.047 #> [281]  1.405  1.686 -0.382  1.217  0.499  0.271  0.662  0.562  0.528  0.684 #> [291] -0.751  1.843  1.063 -1.828  1.345  0.077  0.943  1.048  1.637 -0.535 #> [301]  0.664  0.433 -0.559 -0.141  0.663  0.777  1.442 -0.685 -0.451  0.265 #> [311]  0.727 -1.206  0.339 -0.320  0.079 -0.052  0.097  0.827 -2.121  0.570 #> [321] -2.563  0.663 -1.115  0.176  0.786  0.783  1.068 -1.734  1.255  0.790 #> [331] -0.721 -0.028  0.514 -0.963 -2.052 -1.195  0.091  0.187  0.610 -1.610 #> [341] -0.066  2.733 -0.853 -1.175  1.079 -0.580  0.033  1.213  0.367 -0.567 #> [351] -0.107  0.188 -0.091 -0.932 -0.110 -1.312  0.968  0.698  1.089  0.695 #> [361]  1.309  1.017  0.677  0.471 -1.524 -1.820  0.256  0.397 -0.489  1.734 #> [371] -0.297  0.075  0.533  0.165  0.814 -1.915 -0.332  1.035 -0.858  1.070 #> [381]  0.532 -0.016  1.932 -0.564 -0.018 -0.542  1.048  0.759  1.575 -1.263 #> [391] -0.667 -1.195 -0.179  0.337  0.257  0.356  0.375 -1.326  0.509  0.975 #>  #>"},{"path":"https://openintrostat.github.io/openintro/reference/simulated_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for sample scatterplots — simulated_scatter","title":"Simulated data for sample scatterplots — simulated_scatter","text":"Fake data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simulated_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for sample scatterplots — simulated_scatter","text":"","code":"simulated_scatter"},{"path":"https://openintrostat.github.io/openintro/reference/simulated_scatter.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for sample scatterplots — simulated_scatter","text":"data frame 500 observations following 3 variables. group Group, representing data specific plot. x x-value. y y-value.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/simulated_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated data for sample scatterplots — simulated_scatter","text":"","code":"library(ggplot2)  ggplot(simulated_scatter, aes(x = x, y = y)) +   geom_point() +   facet_wrap(~group)"},{"path":"https://openintrostat.github.io/openintro/reference/sinusitis.html","id":null,"dir":"Reference","previous_headings":"","what":"Sinusitis and antibiotic experiment — sinusitis","title":"Sinusitis and antibiotic experiment — sinusitis","text":"Researchers studying effect antibiotic treatment acute sinusitis one two groups: treatment control.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sinusitis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sinusitis and antibiotic experiment — sinusitis","text":"","code":"sinusitis"},{"path":"https://openintrostat.github.io/openintro/reference/sinusitis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sinusitis and antibiotic experiment — sinusitis","text":"data frame 166 observations following 2 variables. group factor levels control  treatment self_reported_improvement factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sinusitis.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sinusitis and antibiotic experiment — sinusitis","text":"J.M. Garbutt et al. Amoxicillin Acute Rhinosinusitis: Randomized Controlled Trial. : JAMA: Journal American Medical Association 307.7 (2012), pp. 685-692.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sinusitis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sinusitis and antibiotic experiment — sinusitis","text":"","code":"sinusitis #> # A tibble: 166 × 2 #>    group     self_reported_improvement #>    <fct>     <fct>                     #>  1 treatment yes                       #>  2 treatment yes                       #>  3 treatment yes                       #>  4 treatment yes                       #>  5 treatment yes                       #>  6 treatment yes                       #>  7 treatment yes                       #>  8 treatment yes                       #>  9 treatment yes                       #> 10 treatment yes                       #> # ℹ 156 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/sleep_deprivation.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey on sleep deprivation and transportation workers — sleep_deprivation","title":"Survey on sleep deprivation and transportation workers — sleep_deprivation","text":"National Sleep Foundation conducted survey sleep habits randomly sampled transportation workers control sample non-transportation workers.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sleep_deprivation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey on sleep deprivation and transportation workers — sleep_deprivation","text":"","code":"sleep_deprivation"},{"path":"https://openintrostat.github.io/openintro/reference/sleep_deprivation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey on sleep deprivation and transportation workers — sleep_deprivation","text":"data frame 1087 observations following 2 variables. sleep factor levels <6, 6-8, >8 profession factor levels bus / taxi / limo drivers, control, pilots, train operators, truck drivers","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sleep_deprivation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey on sleep deprivation and transportation workers — sleep_deprivation","text":"National Sleep Foundation, 2012 Sleep America Poll: Transportation Workers' Sleep, 2012. https://www.sleepfoundation.org/professionals/sleep-americar-polls/2012-sleep-america-poll-transportation-workers-sleep","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sleep_deprivation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey on sleep deprivation and transportation workers — sleep_deprivation","text":"","code":"sleep_deprivation #> # A tibble: 1,087 × 2 #>    sleep profession #>    <fct> <fct>      #>  1 <6    control    #>  2 <6    control    #>  3 <6    control    #>  4 <6    control    #>  5 <6    control    #>  6 <6    control    #>  7 <6    control    #>  8 <6    control    #>  9 <6    control    #> 10 <6    control    #> # ℹ 1,077 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/smallpox.html","id":null,"dir":"Reference","previous_headings":"","what":"Smallpox vaccine results — smallpox","title":"Smallpox vaccine results — smallpox","text":"sample 6,224 individuals year 1721 exposed smallpox Boston.  received vaccine (inoculated) others .  Doctors time believed inoculation, involves exposing person disease controlled form, reduce likelihood death.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/smallpox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smallpox vaccine results — smallpox","text":"","code":"smallpox"},{"path":"https://openintrostat.github.io/openintro/reference/smallpox.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Smallpox vaccine results — smallpox","text":"data frame 6224 observations following 2 variables. result Whether person died lived. inoculated Whether person received inoculated.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/smallpox.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Smallpox vaccine results — smallpox","text":"Fenner F. 1988.  Smallpox Eradication (History International Public Health, . 6).  Geneva: World Health Organization. ISBN 92-4-156110-6.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/smallpox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smallpox vaccine results — smallpox","text":"","code":"data(smallpox) table(smallpox) #>        inoculated #> result    no  yes #>   died   844    6 #>   lived 5136  238"},{"path":"https://openintrostat.github.io/openintro/reference/smoking.html","id":null,"dir":"Reference","previous_headings":"","what":"UK Smoking Data — smoking","title":"UK Smoking Data — smoking","text":"Survey data smoking habits UK. dataset can used analyzing demographic characteristics smokers types tobacco consumed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/smoking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK Smoking Data — smoking","text":"","code":"smoking"},{"path":"https://openintrostat.github.io/openintro/reference/smoking.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK Smoking Data — smoking","text":"data frame 1691 observations following 12 variables. gender Gender levels Female Male. age Age. marital_status Marital status levels Divorced, Married, Separated, Single Widowed. highest_qualification Highest education level levels Levels, Degree, GCSE/CSE, GCSE/O Level, Higher/Sub Degree, Qualification, ONC/BTEC /Sub Degree nationality Nationality levels British, English, Irish, Scottish, Welsh, , Refused Unknown. ethnicity Ethnicity levels Asian, Black, Chinese, Mixed, White Refused Unknown. gross_income Gross income levels 2,600, 2,600 5,200, 5,200 10,400, 10,400 15,600, 15,600 20,800, 20,800 28,600, 28,600 36,400, 36,400, Refused Unknown. region Region levels London, Midlands & East Anglia, Scotland, South East, South West, North Wales smoke Smoking status levels Yes amt_weekends Number cigarettes smoked per day weekends. amt_weekdays Number cigarettes smoked per day weekdays. type Type cigarettes smoked levels Packets, Hand-Rolled, /Mainly Packets /Mainly Hand-Rolled","code":""},{"path":"https://openintrostat.github.io/openintro/reference/smoking.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK Smoking Data — smoking","text":"National STEM Centre, Large Datasets stats4schools, https://www.stem.org.uk/resources/elibrary/resource/28452/large-datasets-stats4schools.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/smoking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UK Smoking Data — smoking","text":"","code":"library(ggplot2)  ggplot(smoking, aes(x = amt_weekends)) +   geom_histogram(binwidth = 5) #> Warning: Removed 1270 rows containing non-finite outside the scale range (`stat_bin()`).   ggplot(smoking, aes(x = amt_weekdays)) +   geom_histogram(binwidth = 5) #> Warning: Removed 1270 rows containing non-finite outside the scale range (`stat_bin()`).   ggplot(smoking, aes(x = gender, fill = smoke)) +   geom_bar(position = \"fill\")   ggplot(smoking, aes(x = marital_status, fill = smoke)) +   geom_bar(position = \"fill\")"},{"path":"https://openintrostat.github.io/openintro/reference/snowfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Snowfall at Paradise, Mt. Rainier National Park — snowfall","title":"Snowfall at Paradise, Mt. Rainier National Park — snowfall","text":"Annual snowfall data Paradise, Mt. Rainier National Park. include full winter season, snowfall recorded July 1 June 30. Data 1943-1946 available due road closure World War II. Records also unavailable 1948-1954.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/snowfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snowfall at Paradise, Mt. Rainier National Park — snowfall","text":"","code":"snowfall"},{"path":"https://openintrostat.github.io/openintro/reference/snowfall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Snowfall at Paradise, Mt. Rainier National Park — snowfall","text":"data frame 100 rows 3 variables. year_start year snowfall measurement began July 1. year_end year snowfall measurement ended June 30. total_snow Snowfall measured inches.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/snowfall.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Snowfall at Paradise, Mt. Rainier National Park — snowfall","text":"National Parks Services.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/snowfall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Snowfall at Paradise, Mt. Rainier National Park — snowfall","text":"","code":"library(ggplot2)  ggplot(snowfall, aes(x = total_snow)) +   geom_histogram(binwidth = 50) +   labs(     title = \"Annual Snowfall\",     subtitle = \"Paradise, Mt. Rainier National Park\",     x = \"Snowfall (in.)\",     y = \"Number of Years\",     caption = \"Source: National Parks Services\"   ) #> Warning: Removed 9 rows containing non-finite outside the scale range (`stat_bin()`).   ggplot(snowfall, aes(x = year_start, y = total_snow, group = 1)) +   geom_line() +   labs(     title = \"Annual Snowfall\",     subtitle = \"Paradise, Mt. Rainier National Park\",     y = \"Snowfall (in.)\",     x = \"Year\",     caption = \"Source: National Parks Services\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/socialexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Social experiment — socialexp","title":"Social experiment — socialexp","text":"\"social experiment\" conducted TV program questioned people see obviously bruised woman getting picked boyfriend. two different occasions restaurant, couple depicted. one scenario woman dressed \"provocatively\" scenario woman dressed \"conservatively\". table shows many restaurant diners present scenario, whether intervened.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/socialexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Social experiment — socialexp","text":"","code":"socialexp"},{"path":"https://openintrostat.github.io/openintro/reference/socialexp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Social experiment — socialexp","text":"data frame 45 observations following 2 variables. intervene Whether diners intervened . scenario woman dressed.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/socialexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Social experiment — socialexp","text":"","code":"table(socialexp) #>          scenario #> intervene conservative provocative #>       no            10          15 #>       yes           15           5"},{"path":"https://openintrostat.github.io/openintro/reference/soda.html","id":null,"dir":"Reference","previous_headings":"","what":"soda — soda","title":"soda — soda","text":"randomly generated dataset soda preference (cola orange) based location.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/soda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"soda — soda","text":"","code":"soda"},{"path":"https://openintrostat.github.io/openintro/reference/soda.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"soda — soda","text":"data frame 60 observations following 2 variables. drink Soda preference, cola orange. location person West coast East coast?","code":""},{"path":"https://openintrostat.github.io/openintro/reference/soda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"soda — soda","text":"","code":"library(dplyr)  soda |>   count(location, drink) #>   location  drink  n #> 1     East   Cola 28 #> 2     East Orange  6 #> 3     West   Cola 19 #> 4     West Orange  7"},{"path":"https://openintrostat.github.io/openintro/reference/solar.html","id":null,"dir":"Reference","previous_headings":"","what":"Energy Output From Two Solar Arrays in San Francisco — solar","title":"Energy Output From Two Solar Arrays in San Francisco — solar","text":"data provide energy output several months two roof-top solar arrays San Francisco. city known highly variable weather, two arrays 1 mile apart , Inner Sunset location tends fog.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/solar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Energy Output From Two Solar Arrays in San Francisco — solar","text":"","code":"solar"},{"path":"https://openintrostat.github.io/openintro/reference/solar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Energy Output From Two Solar Arrays in San Francisco — solar","text":"data frame 284 observations following 3 variables. row represents single day one arrays. location Location array. date Date. kwh Number kWh","code":""},{"path":"https://openintrostat.github.io/openintro/reference/solar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Energy Output From Two Solar Arrays in San Francisco — solar","text":"data provided Larry Rosenfeld, resident San Francisco.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/solar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Energy Output From Two Solar Arrays in San Francisco — solar","text":"Haight-Ashbury array 10.4 kWh array, Inner Sunset array 2.8 kWh array. kWh units represents kilowatt-hours, unit energy typically used electricity bills. cost per kWh San Francisco $0.25 2016.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/solar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Energy Output From Two Solar Arrays in San Francisco — solar","text":"","code":"solar.is <- subset(solar, location == \"Inner_Sunset\") solar.ha <- subset(solar, location == \"Haight_Ashbury\") plot(solar.is$date, solar.is$kwh, type = \"l\", ylim = c(0, max(solar$kwh))) lines(solar.ha$date, solar.ha$kwh, col = 4)   d <- merge(solar.ha, solar.is, by = \"date\") plot(d$date, d$kwh.x / d$kwh.y, type = \"l\")"},{"path":"https://openintrostat.github.io/openintro/reference/sowc_child_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"SOWC Child Mortality Data. — sowc_child_mortality","title":"SOWC Child Mortality Data. — sowc_child_mortality","text":"Child mortality data UNICEF's State World's Children 2019 Statistical Tables.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_child_mortality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOWC Child Mortality Data. — sowc_child_mortality","text":"","code":"sowc_child_mortality"},{"path":"https://openintrostat.github.io/openintro/reference/sowc_child_mortality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SOWC Child Mortality Data. — sowc_child_mortality","text":"data frame 195 rows 19 variables. countries_and_areas Country area name. under5_mortality_1990 -5 mortality rate (deaths per 1,000 live births) 1990. under5_mortality_2000 -5 mortality rate (deaths per 1,000 live births) 2000. under5_mortality_2018 -5 mortality rate (deaths per 1,000 live births) 2018. under5_reduction Annual rate reduction -5 mortality rate (%)2000–2018. under5_mortality_2018_male -5 mortality rate male (deaths per 1,000 live births) 2018. under5_mortality_2018_female -5 mortality rate female (deaths per 1,000 live births) 2018. infant_mortality_1990 Infant mortality rate (deaths per 1,000 live births) 1990 infant_mortality_2018 Infant mortality rate (deaths per 1,000 live births) 2018 neonatal_mortality_1990 Neonatal mortality rate (deaths per 1,000 live births) 1990. neonatal_mortality_2000 Neonatal mortality rate (deaths per 1,000 live births) 2000. neonatal_mortality_2018 Neonatal mortality rate (deaths per 1,000 live births) 2018. prob_dying_age5to14_1990 Probability dying among children aged 5–14 (deaths per 1,000 children aged 5) 1990. prob_dying_age5to14_2018 Probability dying among children aged 5–14 (deaths per 1,000 children aged 5) 2018. under5_deaths_2018 Annual number -5 deaths (thousands) 2018. neonatal_deaths_2018 Annual number neonatal deaths (thousands) 2018. neonatal_deaths_percent_under5 Neonatal deaths proportion -5 deaths (%) 2018. age5to14_deaths_2018 Number deaths among children aged 5–14 (thousands) 2018.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_child_mortality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SOWC Child Mortality Data. — sowc_child_mortality","text":"United Nations Children's Emergency Fund (UNICEF)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_child_mortality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOWC Child Mortality Data. — sowc_child_mortality","text":"","code":"library(dplyr) library(ggplot2)  # List countries and areas whose children aged 5 and under have a higher probability of dying in # 2018 than they did in 1990 sowc_child_mortality |>   mutate(decrease_prob_dying = prob_dying_age5to14_1990 - prob_dying_age5to14_2018) |>   select(countries_and_areas, decrease_prob_dying) |>   filter(decrease_prob_dying < 0) |>   arrange(decrease_prob_dying) #>                countries_and_areas decrease_prob_dying #> 1             Syrian Arab Republic                  -3 #> 2                         Eswatini                  -2 #> 3                          Grenada                  -2 #> 4                             Niue                  -1 #> 5 Saint Vincent and the Grenadines                  -1  # List countries and areas and their relative rank for neonatal mortality in 2018 sowc_child_mortality |>   mutate(rank = round(rank(-neonatal_mortality_2018))) |>   select(countries_and_areas, rank, neonatal_mortality_2018) |>   arrange(rank) #>                       countries_and_areas rank neonatal_mortality_2018 #> 1                                Pakistan    1                      42 #> 2                Central African Republic    2                      41 #> 3                             South Sudan    3                      40 #> 4                                 Somalia    4                      38 #> 5                             Afghanistan    6                      37 #> 6                           Guinea-Bissau    6                      37 #> 7                                 Nigeria    7                      36 #> 8                                 Lesotho    8                      35 #> 9                                    Chad   10                      34 #> 10                          Cote d'Ivoire   10                      34 #> 11                                   Mali   12                      33 #> 12                             Mauritania   12                      33 #> 13                           Sierra Leone   12                      33 #> 14                                Comoros   14                      32 #> 15                               Djibouti   14                      32 #> 16                                  Benin   16                      31 #> 17                                 Guinea   16                      31 #> 18                      Equatorial Guinea   18                      30 #> 19                                  Sudan   19                      29 #> 20                                 Angola   22                      28 #> 21       Democratic Republic of the Congo   22                      28 #> 22                               Dominica   22                      28 #> 23                               Ethiopia   22                      28 #> 24                             Mozambique   22                      28 #> 25                               Cameroon   26                      27 #> 26                                  Yemen   26                      27 #> 27                                 Gambia   28                      26 #> 28                                  Haiti   28                      26 #> 29                           Burkina Faso   30                      25 #> 30                                  Niger   30                      25 #> 31                                   Togo   30                      25 #> 32                               Botswana   33                      24 #> 33                                  Ghana   33                      24 #> 34                                Liberia   33                      24 #> 35                                  India   37                      23 #> 36                               Kiribati   37                      23 #> 37       Lao People's Democratic Republic   37                      23 #> 38                                Myanmar   37                      23 #> 39                                 Zambia   37                      23 #> 40                                Burundi   41                      22 #> 41                                 Malawi   41                      22 #> 42                       Papua New Guinea   41                      22 #> 43                                  Gabon   46                      21 #> 44                             Madagascar   46                      21 #> 45                                Senegal   46                      21 #> 46                           Turkmenistan   46                      21 #> 47            United Republic of Tanzania   46                      21 #> 48                               Zimbabwe   46                      21 #> 49                                  Congo   52                      20 #> 50                                  Kenya   52                      20 #> 51                                  Nauru   52                      20 #> 52                                  Nepal   52                      20 #> 53                            Timor-Leste   52                      20 #> 54                                 Uganda   52                      20 #> 55                     Dominican Republic   55                      19 #> 56                                Eritrea   56                      18 #> 57                                 Guyana   56                      18 #> 58                             Bangladesh   58                      17 #> 59                               Eswatini   58                      17 #> 60                                 Bhutan   62                      16 #> 61       Micronesia (Federated States of)   62                      16 #> 62                                Namibia   62                      16 #> 63                                 Rwanda   62                      16 #> 64                                 Tuvalu   62                      16 #> 65                                Algeria   67                      15 #> 66                                   Iraq   67                      15 #> 67                       Marshall Islands   67                      15 #> 68                             Tajikistan   67                      15 #> 69     Venezuela (Bolivarian Republic of)   67                      15 #> 70       Bolivia (Plurinational State of)   72                      14 #> 71                               Cambodia   72                      14 #> 72                                Morocco   72                      14 #> 73                            Philippines   72                      14 #> 74                  Sao Tome and Principe   72                      14 #> 75                              Indonesia   76                      13 #> 76                             Kyrgyzstan   76                      13 #> 77                             Cabo Verde   80                      12 #> 78                              Guatemala   80                      12 #> 79                                   Niue   80                      12 #> 80                    Republic of Moldova   80                      12 #> 81                            Saint Lucia   80                      12 #> 82                    Trinidad and Tobago   80                      12 #> 83                             Uzbekistan   80                      12 #> 84                                Vanuatu   80                      12 #> 85                             Azerbaijan   88                      11 #> 86                                  Egypt   88                      11 #> 87                                   Fiji   88                      11 #> 88                               Paraguay   88                      11 #> 89                           South Africa   88                      11 #> 90                     State of Palestine   88                      11 #> 91                                Tunisia   88                      11 #> 92                               Viet Nam   88                      11 #> 93  Democratic People's Republic of Korea   96                      10 #> 94                                Grenada   96                      10 #> 95                               Honduras   96                      10 #> 96                                Jamaica   96                      10 #> 97       Saint Vincent and the Grenadines   96                      10 #> 98                               Suriname   96                      10 #> 99                                 Belize  103                       9 #> 100            Iran (Islamic Republic of)  103                       9 #> 101                                Jordan  103                       9 #> 102                             Mauritius  103                       9 #> 103                              Mongolia  103                       9 #> 104                             Nicaragua  103                       9 #> 105                                 Palau  103                       9 #> 106                            Seychelles  103                       9 #> 107                  Syrian Arab Republic  103                       9 #> 108                              Barbados  112                       8 #> 109                                Brazil  112                       8 #> 110                              Colombia  112                       8 #> 111                                Mexico  112                       8 #> 112                                Panama  112                       8 #> 113                 Saint Kitts and Nevis  112                       8 #> 114                                 Samoa  112                       8 #> 115                       Solomon Islands  112                       8 #> 116                               Albania  118                       7 #> 117                               Ecuador  118                       7 #> 118                           El Salvador  118                       7 #> 119                       North Macedonia  118                       7 #> 120                                  Peru  118                       7 #> 121                                 Tonga  118                       7 #> 122                             Argentina  124                       6 #> 123                               Armenia  124                       6 #> 124                            Costa Rica  124                       6 #> 125                               Georgia  124                       6 #> 126                            Kazakhstan  124                       6 #> 127                                 Libya  124                       6 #> 128                               Bahamas  132                       5 #> 129                     Brunei Darussalam  132                       5 #> 130                                 Chile  132                       5 #> 131                              Maldives  132                       5 #> 132                                 Malta  132                       5 #> 133                                  Oman  132                       5 #> 134                              Thailand  132                       5 #> 135                                Turkey  132                       5 #> 136                               Ukraine  132                       5 #> 137                               Uruguay  132                       5 #> 138                Bosnia and Herzegovina  144                       4 #> 139                              Bulgaria  144                       4 #> 140                                 China  144                       4 #> 141                          Cook Islands  144                       4 #> 142                                Kuwait  144                       4 #> 143                               Lebanon  144                       4 #> 144                              Malaysia  144                       4 #> 145                                 Qatar  144                       4 #> 146                          Saudi Arabia  144                       4 #> 147                             Sri Lanka  144                       4 #> 148                  United Arab Emirates  144                       4 #> 149                         United States  144                       4 #> 150                   Antigua and Barbuda  157                       3 #> 151                               Bahrain  157                       3 #> 152                                Canada  157                       3 #> 153                               Croatia  157                       3 #> 154                               Denmark  157                       3 #> 155                                France  157                       3 #> 156                                Greece  157                       3 #> 157                           New Zealand  157                       3 #> 158                                Poland  157                       3 #> 159                               Romania  157                       3 #> 160                    Russian Federation  157                       3 #> 161                                Serbia  157                       3 #> 162                              Slovakia  157                       3 #> 163                           Switzerland  157                       3 #> 164                        United Kingdom  157                       3 #> 165                             Australia  174                       2 #> 166                               Austria  174                       2 #> 167                               Belgium  174                       2 #> 168                                  Cuba  174                       2 #> 169                               Czechia  174                       2 #> 170                               Germany  174                       2 #> 171                               Hungary  174                       2 #> 172                               Ireland  174                       2 #> 173                                Israel  174                       2 #> 174                                 Italy  174                       2 #> 175                                Latvia  174                       2 #> 176                             Lithuania  174                       2 #> 177                                Monaco  174                       2 #> 178                            Montenegro  174                       2 #> 179                           Netherlands  174                       2 #> 180                              Portugal  174                       2 #> 181                                 Spain  174                       2 #> 182                                Sweden  174                       2 #> 183                               Andorra  189                       1 #> 184                               Belarus  189                       1 #> 185                                Cyprus  189                       1 #> 186                               Estonia  189                       1 #> 187                               Finland  189                       1 #> 188                               Iceland  189                       1 #> 189                                 Japan  189                       1 #> 190                            Luxembourg  189                       1 #> 191                                Norway  189                       1 #> 192                     Republic of Korea  189                       1 #> 193                            San Marino  189                       1 #> 194                             Singapore  189                       1 #> 195                              Slovenia  189                       1"},{"path":"https://openintrostat.github.io/openintro/reference/sowc_demographics.html","id":null,"dir":"Reference","previous_headings":"","what":"SOWC Demographics Data. — sowc_demographics","title":"SOWC Demographics Data. — sowc_demographics","text":"Demographic data UNICEF's State World's Children 2019 Statistical Tables.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_demographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOWC Demographics Data. — sowc_demographics","text":"","code":"sowc_demographics"},{"path":"https://openintrostat.github.io/openintro/reference/sowc_demographics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SOWC Demographics Data. — sowc_demographics","text":"data frame 202 rows 18 variables. countries_and_areas Country area name. total_pop_2018 Population 2018 thousands. under18_pop_2018 Population age 18 2018 thousands. under5_pop_2018 Population age 5 2018 thousands. pop_growth_rate_2018 Rate population growing 2018. pop_growth_rate_2030 Rate population estimated grow 2030. births_2018 Number births 2018 thousands. fertility_2018 Number live births per woman 2018.total fertility level 2.1 called replacement level represents level population remain size. life_expectancy_1970 Life expectancy birth 1970. life_expectancy_2000 Life expectancy birth 2000. life_expectancy_2018 Life expectancy birth 2018. dependency_ratio_total ratio -working-age population working-age population 15 - 64 years. dependency_ratio_child ratio 15 population working-age population 15 - 64 years. dependency_ratio_oldage ratio  64 population working-age population 15 - 64 years. percent_urban_2018 Percent population living urban areas. pop_urban_growth_rate_2018 Annual urban population growth rate 2000 2018. pop_urban_growth_rate_2030 Estimated annual urban population growth rate 2018 2030. migration_rate Net migration rate per 1000 population 2015 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_demographics.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SOWC Demographics Data. — sowc_demographics","text":"United Nations Children's Emergency Fund (UNICEF)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_demographics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOWC Demographics Data. — sowc_demographics","text":"","code":"library(dplyr) library(ggplot2)  # List countries and areas' life expectancy, ordered by rank of life expectancy in 2018 sowc_demographics |>   mutate(life_expectancy_change = life_expectancy_2018 - life_expectancy_1970) |>   mutate(rank_life_expectancy = round(rank(-life_expectancy_2018), 0)) |>   select(     countries_and_areas, rank_life_expectancy, life_expectancy_2018,     life_expectancy_change   ) |>   arrange(rank_life_expectancy) #>                       countries_and_areas rank_life_expectancy #> 1                                   Japan                    2 #> 2                             Switzerland                    2 #> 3                               Australia                    7 #> 4                                  France                    7 #> 5                                 Iceland                    7 #> 6                                  Israel                    7 #> 7                                   Italy                    7 #> 8                       Republic of Korea                    7 #> 9                               Singapore                    7 #> 10                                  Spain                    7 #> 11                                 Sweden                    7 #> 12                                 Canada                   16 #> 13                                Finland                   16 #> 14                                 Greece                   16 #> 15                                Ireland                   16 #> 16                             Luxembourg                   16 #> 17                                  Malta                   16 #> 18                            Netherlands                   16 #> 19                            New Zealand                   16 #> 20                                 Norway                   16 #> 21                               Portugal                   16 #> 22                                Austria                   25 #> 23                                Belgium                   25 #> 24                                 Cyprus                   25 #> 25                                Denmark                   25 #> 26                                Germany                   25 #> 27                               Slovenia                   25 #> 28                         United Kingdom                   25 #> 29                                  Chile                   30 #> 30                             Costa Rica                   30 #> 31                                  Qatar                   30 #> 32                               Barbados                   36 #> 33                                   Cuba                   36 #> 34                                Czechia                   36 #> 35                                Estonia                   36 #> 36                                Lebanon                   36 #> 37                               Maldives                   36 #> 38                                 Poland                   36 #> 39                          United States                   36 #> 40                                Albania                   42 #> 41                                Croatia                   42 #> 42                                   Oman                   42 #> 43                                 Panama                   42 #> 44                   United Arab Emirates                   42 #> 45                                Uruguay                   42 #> 46                                Algeria                   54 #> 47                    Antigua and Barbuda                   54 #> 48                              Argentina                   54 #> 49                                Bahrain                   54 #> 50                 Bosnia and Herzegovina                   54 #> 51                                  China                   54 #> 52                               Colombia                   54 #> 53                                Ecuador                   54 #> 54                                Hungary                   54 #> 55                             Montenegro                   54 #> 56                                   Peru                   54 #> 57                               Slovakia                   54 #> 58                              Sri Lanka                   54 #> 59                               Thailand                   54 #> 60                                Tunisia                   54 #> 61                                 Turkey                   54 #> 62                                 Brazil                   66 #> 63                      Brunei Darussalam                   66 #> 64             Iran (Islamic Republic of)                   66 #> 65                              Lithuania                   66 #> 66                               Malaysia                   66 #> 67                                Morocco                   66 #> 68                        North Macedonia                   66 #> 69                                Romania                   66 #> 70                            Saint Lucia                   66 #> 71                                 Serbia                   66 #> 72                                Armenia                   76 #> 73                                Belarus                   76 #> 74                               Bulgaria                   76 #> 75                               Honduras                   76 #> 76                                 Kuwait                   76 #> 77                                 Latvia                   76 #> 78                              Mauritius                   76 #> 79                                 Mexico                   76 #> 80                           Saudi Arabia                   76 #> 81                               Viet Nam                   76 #> 82                                Bahamas                   86 #> 83                                 Belize                   86 #> 84                     Dominican Republic                   86 #> 85                                Georgia                   86 #> 86                              Guatemala                   86 #> 87                                Jamaica                   86 #> 88                                 Jordan                   86 #> 89                              Nicaragua                   86 #> 90                               Paraguay                   86 #> 91                     State of Palestine                   86 #> 92                             Azerbaijan                   96 #> 93                             Cabo Verde                   96 #> 94                            El Salvador                   96 #> 95                             Kazakhstan                   96 #> 96                                  Libya                   96 #> 97                                  Samoa                   96 #> 98                             Seychelles                   96 #> 99                        Solomon Islands                   96 #> 100                   Trinidad and Tobago                   96 #> 101                            Bangladesh                  107 #> 102 Democratic People's Republic of Korea                  107 #> 103                                 Egypt                  107 #> 104                               Grenada                  107 #> 105                             Indonesia                  107 #> 106                   Republic of Moldova                  107 #> 107                    Russian Federation                  107 #> 108      Saint Vincent and the Grenadines                  107 #> 109                              Suriname                  107 #> 110                  Syrian Arab Republic                  107 #> 111                               Ukraine                  107 #> 112                            Uzbekistan                  107 #> 113    Venezuela (Bolivarian Republic of)                  107 #> 114                                Bhutan                  116 #> 115      Bolivia (Plurinational State of)                  116 #> 116                            Kyrgyzstan                  116 #> 117                           Philippines                  116 #> 118                            Tajikistan                  116 #> 119                                 Tonga                  116 #> 120                              Cambodia                  123 #> 121                                Guyana                  123 #> 122                                  Iraq                  123 #> 123                              Mongolia                  123 #> 124                                 Nepal                  123 #> 125                 Sao Tome and Principe                  123 #> 126                               Vanuatu                  123 #> 127                              Botswana                  128 #> 128                                 India                  128 #> 129                                Rwanda                  128 #> 130                           Timor-Leste                  128 #> 131                              Kiribati                  133 #> 132      Lao People's Democratic Republic                  133 #> 133      Micronesia (Federated States of)                  133 #> 134                               Senegal                  133 #> 135                          Turkmenistan                  133 #> 136                              Djibouti                  138 #> 137                                  Fiji                  138 #> 138                            Madagascar                  138 #> 139                               Myanmar                  138 #> 140                              Pakistan                  138 #> 141                               Eritrea                  143 #> 142                              Ethiopia                  143 #> 143                                 Gabon                  143 #> 144                                 Kenya                  143 #> 145                                 Yemen                  143 #> 146                            Mauritania                  147 #> 147                                 Sudan                  147 #> 148           United Republic of Tanzania                  147 #> 149                           Afghanistan                  154 #> 150                               Comoros                  154 #> 151                                 Congo                  154 #> 152                                 Ghana                  154 #> 153                                 Haiti                  154 #> 154                               Liberia                  154 #> 155                                Malawi                  154 #> 156                      Papua New Guinea                  154 #> 157                          South Africa                  154 #> 158                                Zambia                  154 #> 159                               Namibia                  160 #> 160                                Uganda                  160 #> 161                                Gambia                  162 #> 162                                 Niger                  162 #> 163                                Angola                  166 #> 164                                 Benin                  166 #> 165                          Burkina Faso                  166 #> 166                               Burundi                  166 #> 167                                Guinea                  166 #> 168                                  Togo                  166 #> 169                              Zimbabwe                  166 #> 170      Democratic Republic of the Congo                  170 #> 171                            Mozambique                  170 #> 172                              Cameroon                  173 #> 173                              Eswatini                  173 #> 174                                  Mali                  173 #> 175                     Equatorial Guinea                  176 #> 176                         Guinea-Bissau                  176 #> 177                           South Sudan                  176 #> 178                         Cote d'Ivoire                  178 #> 179                               Somalia                  178 #> 180                                  Chad                  182 #> 181                               Lesotho                  182 #> 182                               Nigeria                  182 #> 183                          Sierra Leone                  182 #> 184              Central African Republic                  184 #> 185                               Andorra                  185 #> 186                              Anguilla                  186 #> 187                British Virgin Islands                  187 #> 188                          Cook Islands                  188 #> 189                              Dominica                  189 #> 190                              Holy See                  190 #> 191                         Liechtenstein                  191 #> 192                      Marshall Islands                  192 #> 193                                Monaco                  193 #> 194                            Montserrat                  194 #> 195                                 Nauru                  195 #> 196                                  Niue                  196 #> 197                                 Palau                  197 #> 198                 Saint Kitts and Nevis                  198 #> 199                            San Marino                  199 #> 200                               Tokelau                  200 #> 201              Turks and Caicos Islands                  201 #> 202                                Tuvalu                  202 #>     life_expectancy_2018 life_expectancy_change #> 1                     84                     12 #> 2                     84                     11 #> 3                     83                     12 #> 4                     83                     11 #> 5                     83                      9 #> 6                     83                     11 #> 7                     83                     11 #> 8                     83                     22 #> 9                     83                     15 #> 10                    83                     11 #> 11                    83                      9 #> 12                    82                      9 #> 13                    82                     12 #> 14                    82                     11 #> 15                    82                     11 #> 16                    82                     12 #> 17                    82                     11 #> 18                    82                      8 #> 19                    82                     11 #> 20                    82                      8 #> 21                    82                     15 #> 22                    81                     11 #> 23                    81                     10 #> 24                    81                      8 #> 25                    81                      8 #> 26                    81                     10 #> 27                    81                     12 #> 28                    81                      9 #> 29                    80                     18 #> 30                    80                     14 #> 31                    80                     12 #> 32                    79                     10 #> 33                    79                      9 #> 34                    79                      9 #> 35                    79                      9 #> 36                    79                     13 #> 37                    79                     35 #> 38                    79                      9 #> 39                    79                      8 #> 40                    78                     11 #> 41                    78                     10 #> 42                    78                     28 #> 43                    78                     12 #> 44                    78                     17 #> 45                    78                      9 #> 46                    77                     27 #> 47                    77                     11 #> 48                    77                     11 #> 49                    77                     14 #> 50                    77                     11 #> 51                    77                     18 #> 52                    77                     15 #> 53                    77                     19 #> 54                    77                      8 #> 55                    77                      7 #> 56                    77                     23 #> 57                    77                      7 #> 58                    77                     13 #> 59                    77                     18 #> 60                    77                     26 #> 61                    77                     25 #> 62                    76                     17 #> 63                    76                     13 #> 64                    76                     25 #> 65                    76                      5 #> 66                    76                     11 #> 67                    76                     23 #> 68                    76                     10 #> 69                    76                      8 #> 70                    76                     12 #> 71                    76                      8 #> 72                    75                      5 #> 73                    75                      4 #> 74                    75                      4 #> 75                    75                     22 #> 76                    75                      9 #> 77                    75                      5 #> 78                    75                     12 #> 79                    75                     14 #> 80                    75                     22 #> 81                    75                     15 #> 82                    74                      8 #> 83                    74                      8 #> 84                    74                     16 #> 85                    74                      7 #> 86                    74                     21 #> 87                    74                      6 #> 88                    74                     14 #> 89                    74                     20 #> 90                    74                      9 #> 91                    74                     18 #> 92                    73                     10 #> 93                    73                     20 #> 94                    73                     18 #> 95                    73                     10 #> 96                    73                     17 #> 97                    73                     13 #> 98                    73                      7 #> 99                    73                     17 #> 100                   73                      8 #> 101                   72                     25 #> 102                   72                     12 #> 103                   72                     20 #> 104                   72                      6 #> 105                   72                     19 #> 106                   72                      7 #> 107                   72                      3 #> 108                   72                      8 #> 109                   72                      9 #> 110                   72                     13 #> 111                   72                      1 #> 112                   72                     10 #> 113                   72                      7 #> 114                   71                     31 #> 115                   71                     25 #> 116                   71                     11 #> 117                   71                      8 #> 118                   71                     17 #> 119                   71                      7 #> 120                   70                     28 #> 121                   70                      8 #> 122                   70                     12 #> 123                   70                     15 #> 124                   70                     29 #> 125                   70                     15 #> 126                   70                     16 #> 127                   69                     15 #> 128                   69                     21 #> 129                   69                     24 #> 130                   69                     29 #> 131                   68                     16 #> 132                   68                     22 #> 133                   68                      9 #> 134                   68                     29 #> 135                   68                     10 #> 136                   67                     18 #> 137                   67                      5 #> 138                   67                     22 #> 139                   67                     18 #> 140                   67                     14 #> 141                   66                     23 #> 142                   66                     23 #> 143                   66                     19 #> 144                   66                     13 #> 145                   66                     29 #> 146                   65                     15 #> 147                   65                     13 #> 148                   65                     18 #> 149                   64                     27 #> 150                   64                     18 #> 151                   64                     13 #> 152                   64                     15 #> 153                   64                     18 #> 154                   64                     25 #> 155                   64                     24 #> 156                   64                     18 #> 157                   64                     11 #> 158                   64                     14 #> 159                   63                     10 #> 160                   63                     14 #> 161                   62                     24 #> 162                   62                     26 #> 163                   61                     20 #> 164                   61                     19 #> 165                   61                     22 #> 166                   61                     17 #> 167                   61                     24 #> 168                   61                     14 #> 169                   61                      4 #> 170                   60                     16 #> 171                   60                     19 #> 172                   59                     12 #> 173                   59                     11 #> 174                   59                     27 #> 175                   58                     18 #> 176                   58                     17 #> 177                   58                     22 #> 178                   57                     13 #> 179                   57                     16 #> 180                   54                     13 #> 181                   54                      3 #> 182                   54                     13 #> 183                   54                     18 #> 184                   53                     11 #> 185                   NA                     NA #> 186                   NA                     NA #> 187                   NA                     NA #> 188                   NA                     NA #> 189                   NA                     NA #> 190                   NA                     NA #> 191                   NA                     NA #> 192                   NA                     NA #> 193                   NA                     NA #> 194                   NA                     NA #> 195                   NA                     NA #> 196                   NA                     NA #> 197                   NA                     NA #> 198                   NA                     NA #> 199                   NA                     NA #> 200                   NA                     NA #> 201                   NA                     NA #> 202                   NA                     NA  # List countries and areas' migration rate and population, ordered by rank of migration rate sowc_demographics |>   mutate(rank = round(rank(migration_rate))) |>   mutate(population_millions = total_pop_2018 / 1000) |>   select(countries_and_areas, rank, migration_rate, population_millions) |>   arrange(rank) #>                       countries_and_areas rank migration_rate #> 1                    Syrian Arab Republic    1          -24.1 #> 2      Venezuela (Bolivarian Republic of)    2          -22.3 #> 3                             South Sudan    3          -15.9 #> 4                                   Samoa    4          -14.3 #> 5                                 Eritrea    6          -11.6 #> 6                               Lithuania    6          -11.6 #> 7                Central African Republic    7           -8.6 #> 8                                Zimbabwe    8           -8.2 #> 9                   Sao Tome and Principe    9           -8.0 #> 10                                 Guyana   10           -7.7 #> 11                                  Tonga   10           -7.7 #> 12                                 Latvia   12           -7.6 #> 13                               Eswatini   13           -7.4 #> 14                                   Fiji   14           -7.0 #> 15                               Kiribati   15           -6.9 #> 16                 Bosnia and Herzegovina   16           -6.4 #> 17                            El Salvador   17           -6.3 #> 18       Micronesia (Federated States of)   18           -5.4 #> 19                                Albania   19           -4.9 #> 20                                Lesotho   20           -4.8 #> 21                              Sri Lanka   21           -4.6 #> 22                                Lebanon   22           -4.5 #> 23                            Timor-Leste   23           -4.3 #> 24                                Jamaica   24           -3.9 #> 25                                Romania   25           -3.8 #> 26                              Nicaragua   26           -3.3 #> 27                                  Haiti   27           -3.2 #> 28                                Myanmar   28           -3.1 #> 29                     Dominican Republic   29           -2.8 #> 30                                Somalia   30           -2.7 #> 31                             Cabo Verde   32           -2.5 #> 32                                Georgia   32           -2.5 #> 33                        Solomon Islands   32           -2.5 #> 34                                Comoros   34           -2.4 #> 35                               Paraguay   34           -2.4 #> 36                             Bangladesh   36           -2.3 #> 37                     State of Palestine   38           -2.2 #> 38                             Tajikistan   38           -2.2 #> 39       Lao People's Democratic Republic   40           -2.1 #> 40                                   Mali   40           -2.1 #> 41                             Seychelles   40           -2.1 #> 42                                Namibia   42           -2.0 #> 43                               Cambodia   44           -1.9 #> 44                                Croatia   44           -1.9 #> 45                                Grenada   46           -1.8 #> 46       Saint Vincent and the Grenadines   46           -1.8 #> 47                            Afghanistan   48           -1.7 #> 48                                Armenia   48           -1.7 #> 49                               Suriname   48           -1.7 #> 50                                 Greece   50           -1.5 #> 51                                 Gambia   52           -1.4 #> 52                                Morocco   52           -1.4 #> 53                           Burkina Faso   54           -1.3 #> 54                                   Cuba   54           -1.3 #> 55                                Senegal   54           -1.3 #> 56                                  Sudan   56           -1.2 #> 57                               Pakistan   58           -1.1 #> 58                                  Yemen   58           -1.1 #> 59                             Kazakhstan   60           -1.0 #> 60                                Liberia   60           -1.0 #> 61                                 Malawi   62           -0.9 #> 62                           Turkmenistan   62           -0.9 #> 63                                Uruguay   62           -0.9 #> 64       Bolivia (Plurinational State of)   66           -0.8 #> 65                                  Congo   66           -0.8 #> 66                          Guinea-Bissau   66           -0.8 #> 67                             Montenegro   66           -0.8 #> 68                                 Poland   66           -0.8 #> 69                               Viet Nam   66           -0.8 #> 70                               Bulgaria   72           -0.7 #> 71                               Honduras   72           -0.7 #> 72             Iran (Islamic Republic of)   72           -0.7 #> 73                                 Rwanda   72           -0.7 #> 74            United Republic of Tanzania   72           -0.7 #> 75                             Kyrgyzstan   77           -0.6 #> 76                            Philippines   77           -0.6 #> 77                               Portugal   77           -0.6 #> 78                           Sierra Leone   77           -0.6 #> 79                    Trinidad and Tobago   77           -0.6 #> 80                              Guatemala   82           -0.5 #> 81                                 Mexico   82           -0.5 #> 82                        North Macedonia   82           -0.5 #> 83                                 Zambia   82           -0.5 #> 84                                  Egypt   85           -0.4 #> 85                                  India   85           -0.4 #> 86                              Indonesia   85           -0.4 #> 87                               Barbados   92           -0.3 #> 88                          Cote d'Ivoire   92           -0.3 #> 89                                  Ghana   92           -0.3 #> 90                                 Guinea   92           -0.3 #> 91                                  Libya   92           -0.3 #> 92                               Mongolia   92           -0.3 #> 93                                Nigeria   92           -0.3 #> 94                    Republic of Moldova   92           -0.3 #> 95                                   Togo   92           -0.3 #> 96                                Tunisia   92           -0.3 #> 97                             Uzbekistan   92           -0.3 #> 98                                Algeria  101           -0.2 #> 99                                  Benin  101           -0.2 #> 100                              Cameroon  101           -0.2 #> 101                                 China  101           -0.2 #> 102 Democratic People's Republic of Korea  101           -0.2 #> 103                                 Kenya  101           -0.2 #> 104                            Mozambique  101           -0.2 #> 105                            Madagascar  106           -0.1 #> 106                      Papua New Guinea  106           -0.1 #> 107                   Antigua and Barbuda  108            0.0 #> 108                     Brunei Darussalam  108            0.0 #> 109                             Mauritius  108            0.0 #> 110                           Saint Lucia  108            0.0 #> 111                             Argentina  112            0.1 #> 112                            Azerbaijan  112            0.1 #> 113                                Brazil  112            0.1 #> 114                                  Chad  112            0.1 #> 115                                Angola  118            0.2 #> 116                               Burundi  118            0.2 #> 117                                  Iraq  118            0.2 #> 118                                 Niger  118            0.2 #> 119                     Republic of Korea  118            0.2 #> 120                               Ukraine  118            0.2 #> 121      Democratic Republic of the Congo  122            0.3 #> 122                              Ethiopia  122            0.3 #> 123                              Slovakia  122            0.3 #> 124                              Thailand  122            0.3 #> 125                                Bhutan  126            0.4 #> 126                               Vanuatu  126            0.4 #> 127                                Serbia  127            0.5 #> 128                                France  129            0.6 #> 129                               Hungary  129            0.6 #> 130                                 Japan  129            0.6 #> 131                            Costa Rica  131            0.8 #> 132                               Belarus  134            0.9 #> 133                              Djibouti  134            0.9 #> 134                           Netherlands  134            0.9 #> 135                                 Spain  134            0.9 #> 136                              Slovenia  136            1.0 #> 137                               Iceland  138            1.1 #> 138                                Jordan  138            1.1 #> 139                                Israel  140            1.2 #> 140                            Mauritania  140            1.2 #> 141                              Botswana  142            1.3 #> 142                    Russian Federation  142            1.3 #> 143                                 Nepal  143            1.5 #> 144                                 Gabon  144            1.6 #> 145                              Malaysia  144            1.6 #> 146                               Czechia  146            2.1 #> 147                                 Malta  146            2.1 #> 148                               Ecuador  148            2.2 #> 149                               Finland  150            2.5 #> 150                                 Italy  150            2.5 #> 151                          South Africa  150            2.5 #> 152                               Bahamas  152            2.6 #> 153                               Denmark  152            2.6 #> 154                                Panama  154            2.7 #> 155                         United States  155            2.9 #> 156                               Estonia  156            3.0 #> 157                                  Peru  157            3.1 #> 158                                Belize  158            3.2 #> 159                           New Zealand  158            3.2 #> 160                                Turkey  160            3.5 #> 161                        United Kingdom  161            3.9 #> 162                                Sweden  162            4.0 #> 163                                Uganda  162            4.0 #> 164                          Saudi Arabia  164            4.1 #> 165                               Belgium  166            4.2 #> 166                              Colombia  166            4.2 #> 167                                Cyprus  166            4.2 #> 168                  United Arab Emirates  166            4.2 #> 169                             Singapore  169            4.7 #> 170                               Ireland  170            4.9 #> 171                                Norway  171            5.3 #> 172                                 Chile  172            6.0 #> 173                           Switzerland  173            6.1 #> 174                             Australia  174            6.4 #> 175                                Canada  176            6.6 #> 176                               Germany  176            6.6 #> 177                               Austria  177            7.4 #> 178                                Kuwait  178            9.8 #> 179                     Equatorial Guinea  179           12.4 #> 180                                 Qatar  180           14.7 #> 181                            Luxembourg  181           16.3 #> 182                                  Oman  182           18.6 #> 183                              Maldives  183           22.8 #> 184                               Bahrain  184           31.1 #> 185                               Andorra  185             NA #> 186                              Anguilla  186             NA #> 187                British Virgin Islands  187             NA #> 188                          Cook Islands  188             NA #> 189                              Dominica  189             NA #> 190                              Holy See  190             NA #> 191                         Liechtenstein  191             NA #> 192                      Marshall Islands  192             NA #> 193                                Monaco  193             NA #> 194                            Montserrat  194             NA #> 195                                 Nauru  195             NA #> 196                                  Niue  196             NA #> 197                                 Palau  197             NA #> 198                 Saint Kitts and Nevis  198             NA #> 199                            San Marino  199             NA #> 200                               Tokelau  200             NA #> 201              Turks and Caicos Islands  201             NA #> 202                                Tuvalu  202             NA #>     population_millions #> 1                16.945 #> 2                28.887 #> 3                10.976 #> 4                 0.196 #> 5                 3.453 #> 6                 2.801 #> 7                 4.666 #> 8                14.439 #> 9                 0.211 #> 10                0.779 #> 11                0.103 #> 12                1.928 #> 13                1.136 #> 14                0.883 #> 15                0.116 #> 16                3.324 #> 17                6.421 #> 18                0.113 #> 19                2.883 #> 20                2.108 #> 21               21.229 #> 22                6.859 #> 23                1.268 #> 24                2.935 #> 25               19.506 #> 26                6.466 #> 27               11.123 #> 28               53.708 #> 29               10.627 #> 30               15.008 #> 31                0.544 #> 32                4.003 #> 33                0.653 #> 34                0.832 #> 35                6.956 #> 36              161.377 #> 37                4.863 #> 38                9.101 #> 39                7.061 #> 40               19.078 #> 41                0.097 #> 42                2.448 #> 43               16.250 #> 44                4.156 #> 45                0.111 #> 46                0.110 #> 47               37.172 #> 48                2.952 #> 49                0.576 #> 50               10.522 #> 51                2.280 #> 52               36.029 #> 53               19.751 #> 54               11.338 #> 55               15.854 #> 56               41.802 #> 57              212.228 #> 58               28.499 #> 59               18.320 #> 60                4.819 #> 61               18.143 #> 62                5.851 #> 63                3.449 #> 64               11.353 #> 65                5.244 #> 66                1.874 #> 67                0.628 #> 68               37.922 #> 69               95.546 #> 70                7.052 #> 71                9.588 #> 72               81.800 #> 73               12.302 #> 74               56.313 #> 75                6.304 #> 76              106.651 #> 77               10.256 #> 78                7.650 #> 79                1.390 #> 80               17.248 #> 81              126.191 #> 82                2.083 #> 83               17.352 #> 84               98.424 #> 85             1352.642 #> 86              267.671 #> 87                0.287 #> 88               25.069 #> 89               29.767 #> 90               12.414 #> 91                6.679 #> 92                3.170 #> 93              195.875 #> 94                4.052 #> 95                7.889 #> 96               11.565 #> 97               32.476 #> 98               42.228 #> 99               11.485 #> 100              25.216 #> 101            1427.648 #> 102              25.550 #> 103              51.393 #> 104              29.496 #> 105              26.262 #> 106               8.606 #> 107               0.096 #> 108               0.429 #> 109               1.267 #> 110               0.182 #> 111              44.361 #> 112               9.950 #> 113             209.469 #> 114              15.478 #> 115              30.810 #> 116              11.175 #> 117              38.434 #> 118              22.443 #> 119              51.172 #> 120              44.246 #> 121              84.068 #> 122             109.224 #> 123               5.453 #> 124              69.428 #> 125               0.754 #> 126               0.293 #> 127               8.803 #> 128              64.991 #> 129               9.708 #> 130             127.202 #> 131               4.999 #> 132               9.453 #> 133               0.959 #> 134              17.060 #> 135              46.693 #> 136               2.078 #> 137               0.337 #> 138               9.965 #> 139               8.382 #> 140               4.403 #> 141               2.254 #> 142             145.734 #> 143              28.096 #> 144               2.119 #> 145              31.528 #> 146              10.666 #> 147               0.439 #> 148              17.084 #> 149               5.523 #> 150              60.627 #> 151              57.793 #> 152               0.386 #> 153               5.752 #> 154               4.177 #> 155             327.096 #> 156               1.323 #> 157              31.989 #> 158               0.383 #> 159               4.743 #> 160              82.340 #> 161              67.142 #> 162               9.972 #> 163              42.729 #> 164              33.703 #> 165              11.482 #> 166              49.661 #> 167               1.189 #> 168               9.631 #> 169               5.758 #> 170               4.819 #> 171               5.338 #> 172              18.729 #> 173               8.526 #> 174              24.898 #> 175              37.075 #> 176              83.124 #> 177               8.891 #> 178               4.137 #> 179               1.309 #> 180               2.782 #> 181               0.604 #> 182               4.829 #> 183               0.516 #> 184               1.569 #> 185               0.077 #> 186               0.015 #> 187               0.030 #> 188               0.018 #> 189               0.072 #> 190               0.001 #> 191               0.038 #> 192               0.058 #> 193               0.039 #> 194               0.005 #> 195               0.011 #> 196               0.002 #> 197               0.018 #> 198               0.052 #> 199               0.034 #> 200               0.001 #> 201               0.038 #> 202               0.012  # Scatterplot of life expectancy v population in 2018 ggplot(sowc_demographics, aes(life_expectancy_1970, life_expectancy_2018, size = total_pop_2018)) +   geom_point(alpha = 0.5) +   labs(     title = \"Life Expectancy\",     subtitle = \"1970 v. 2018\",     x = \"Life Expectancy in 1970\",     y = \"Life Expectancy in 2018\",     size = \"2018 Total Population\"   ) #> Warning: Removed 18 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/openintro/reference/sowc_maternal_newborn.html","id":null,"dir":"Reference","previous_headings":"","what":"SOWC Maternal and Newborn Health Data. — sowc_maternal_newborn","title":"SOWC Maternal and Newborn Health Data. — sowc_maternal_newborn","text":"Data UNICEF's State World's Children 2019 Statistical Tables.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_maternal_newborn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOWC Maternal and Newborn Health Data. — sowc_maternal_newborn","text":"","code":"sowc_maternal_newborn"},{"path":"https://openintrostat.github.io/openintro/reference/sowc_maternal_newborn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SOWC Maternal and Newborn Health Data. — sowc_maternal_newborn","text":"data frame 202 rows 18 variables. countries_and_areas Country area name. life_expectancy_female Life expectancy: female 2018. family_planning_1549 Demand family planning satisfied modern methods (%) 2013–2018 Women aged 15 49. family_planning_1519 Demand family planning satisfied modern methods (%) 2013–2018 Women aged 15 19. adolescent_birth_rate Adolescent birth rate 2013 2018. births_age_18 Births age 18 (%) 2013 2018. antenatal_care_1 Antenatal care (%) 2013 2018 least one visit. antenatal_care_4_1549 Antenatal care (%) 2013 2018 least four visits Women aged 15 49. antenatal_care_4_1519 Antenatal care (%) 2013 2018 least four visits Women aged 15 19. delivery_care_attendant_1549 Delivery care (%) 2013 2018 Skilled birth attendant Women aged 15 49. delivery_care_attendant_1519 Delivery care (%) 2013 2018 Skilled birth attendant Women aged 15 19. delivery_care_institutional Delivery care (%) 2013 2018 Institutional delivery. c_section Delivery care (%) 2013–2018 C-section. postnatal_health_newborns Postnatal health check(%) 2013 2018 newborns. postnatal_health_mothers Postnatal health check(%) 2013 2018 mothers. maternal_deaths_2017 Maternal mortality 2017 Number maternal deaths. maternal_mortality_ratio_2017 Maternal mortality 2017 Maternal Mortality Ratio. risk_maternal_death_2017 Maternal mortality 2017 Lifetime risk maternal death (1 X).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_maternal_newborn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SOWC Maternal and Newborn Health Data. — sowc_maternal_newborn","text":"United Nations Children's Emergency Fund (UNICEF)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sowc_maternal_newborn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SOWC Maternal and Newborn Health Data. — sowc_maternal_newborn","text":"","code":"library(dplyr) library(ggplot2)  # List countries and lifetime risk of maternal death (1 in X), ranked sowc_maternal_newborn |>   mutate(rank = round(rank(risk_maternal_death_2017), 0)) |>   select(countries_and_areas, rank, risk_maternal_death_2017) |>   arrange(rank) #>                       countries_and_areas rank risk_maternal_death_2017 #> 1                                    Chad    1                       15 #> 2                             South Sudan    2                       18 #> 3                            Sierra Leone    4                       20 #> 4                                 Somalia    4                       20 #> 5                                 Nigeria    5                       21 #> 6                Central African Republic    6                       25 #> 7                                   Niger    7                       27 #> 8                              Mauritania    8                       28 #> 9                                    Mali    9                       29 #> 10                                 Gambia   10                       31 #> 11                          Guinea-Bissau   12                       32 #> 12                                Liberia   12                       32 #> 13                            Afghanistan   14                       33 #> 14                                Burundi   14                       33 #> 15                          Cote d'Ivoire   16                       34 #> 16       Democratic Republic of the Congo   16                       34 #> 17                                 Guinea   17                       35 #> 18            United Republic of Tanzania   18                       36 #> 19                               Cameroon   19                       40 #> 20                                Eritrea   20                       46 #> 21                                  Benin   22                       49 #> 22                                 Uganda   22                       49 #> 23                               Ethiopia   24                       55 #> 24                               Zimbabwe   24                       55 #> 25                                   Togo   25                       56 #> 26                           Burkina Faso   26                       57 #> 27                                  Congo   28                       58 #> 28                                Lesotho   28                       58 #> 29                                 Malawi   29                       60 #> 30                                Senegal   30                       65 #> 31                             Madagascar   31                       66 #> 32                      Equatorial Guinea   33                       67 #> 33                                  Haiti   33                       67 #> 34                             Mozambique   33                       67 #> 35                                 Angola   35                       69 #> 36                               Eswatini   36                       72 #> 37                                  Sudan   37                       75 #> 38                                  Kenya   38                       76 #> 39                                  Ghana   39                       82 #> 40                                Comoros   40                       83 #> 41                                  Gabon   42                       93 #> 42                                 Zambia   42                       93 #> 43                                 Rwanda   43                       94 #> 44                               Djibouti   44                      140 #> 45                                Namibia   44                      140 #> 46                                  Yemen   46                      150 #> 47                  Sao Tome and Principe   48                      170 #> 48                            Timor-Leste   48                      170 #> 49       Lao People's Democratic Republic   50                      180 #> 50                               Pakistan   50                      180 #> 51                                Myanmar   52                      190 #> 52                       Papua New Guinea   52                      190 #> 53                        Solomon Islands   53                      200 #> 54       Bolivia (Plurinational State of)   56                      220 #> 55                               Botswana   56                      220 #> 56                               Cambodia   56                      220 #> 57                                 Guyana   56                      220 #> 58                                  Nepal   58                      230 #> 59                              Indonesia   59                      240 #> 60                             Bangladesh   60                      250 #> 61                                 Bhutan   60                      250 #> 62                                Algeria   62                      270 #> 63                                  India   64                      290 #> 64                               Kiribati   64                      290 #> 65                               Paraguay   64                      290 #> 66                            Philippines   66                      300 #> 67                                   Iraq   67                      320 #> 68                              Guatemala   70                      330 #> 69                           South Africa   70                      330 #> 70                               Suriname   70                      330 #> 71                                Vanuatu   70                      330 #> 72     Venezuela (Bolivarian Republic of)   70                      330 #> 73       Micronesia (Federated States of)   73                      370 #> 74                              Nicaragua   74                      380 #> 75                     Dominican Republic   75                      410 #> 76                             Kyrgyzstan   76                      480 #> 77                                   Peru   76                      480 #> 78                                  Tonga   78                      540 #> 79                               Honduras   80                      560 #> 80                                Morocco   80                      560 #> 81                            Saint Lucia   81                      580 #> 82                                  Libya   82                      590 #> 83                                  Samoa   82                      590 #> 84                                Jamaica   84                      600 #> 85  Democratic People's Republic of Korea   85                      620 #> 86                               Colombia   86                      630 #> 87                                Ecuador   87                      640 #> 88                             Cabo Verde   88                      670 #> 89                               Mongolia   89                      710 #> 90                                  Egypt   90                      730 #> 91                                 Jordan   90                      730 #> 92                                 Panama   92                      750 #> 93       Saint Vincent and the Grenadines   92                      750 #> 94                             Seychelles   94                      790 #> 95                                Bahamas   95                      820 #> 96                               Maldives   96                      840 #> 97                    Trinidad and Tobago   96                      840 #> 98                     State of Palestine   98                      880 #> 99                                 Brazil   99                      940 #> 100                           El Salvador  100                      960 #> 101                               Tunisia  101                      970 #> 102                                  Fiji  102                     1000 #> 103                  Syrian Arab Republic  102                     1000 #> 104                             Argentina  105                     1100 #> 105                                Belize  105                     1100 #> 106                              Viet Nam  105                     1100 #> 107                   Antigua and Barbuda  108                     1200 #> 108                             Mauritius  108                     1200 #> 109                            Uzbekistan  108                     1200 #> 110                                Mexico  110                     1300 #> 111                             Sri Lanka  110                     1300 #> 112                            Tajikistan  112                     1400 #> 113                               Lebanon  114                     1600 #> 114                              Malaysia  114                     1600 #> 115                                  Oman  114                     1600 #> 116                            Azerbaijan  117                     1700 #> 117                     Brunei Darussalam  117                     1700 #> 118                               Grenada  117                     1700 #> 119                                  Cuba  119                     1800 #> 120                            Costa Rica  121                     1900 #> 121                               Georgia  121                     1900 #> 122                              Thailand  121                     1900 #> 123                               Armenia  123                     2000 #> 124                                 China  124                     2100 #> 125                          Saudi Arabia  125                     2300 #> 126                              Barbados  126                     2400 #> 127            Iran (Islamic Republic of)  127                     2600 #> 128                                Turkey  128                     2800 #> 129                               Uruguay  129                     2900 #> 130                               Bahrain  130                     3000 #> 131                         United States  130                     3000 #> 132                                Latvia  132                     3100 #> 133                    Russian Federation  132                     3100 #> 134                            Kazakhstan  134                     3500 #> 135                               Romania  135                     3600 #> 136                               Ukraine  136                     3700 #> 137                               Albania  137                     3800 #> 138                   Republic of Moldova  138                     3900 #> 139                                Kuwait  139                     4200 #> 140                          Turkmenistan  140                     4400 #> 141                                 Chile  141                     4600 #> 142                                 Qatar  142                     5000 #> 143                                Serbia  143                     5800 #> 144                                Canada  144                     6100 #> 145                           New Zealand  144                     6100 #> 146                               Hungary  146                     6200 #> 147                               Estonia  147                     6900 #> 148                              Bulgaria  148                     7000 #> 149                                France  149                     7200 #> 150                             Lithuania  150                     7500 #> 151                             Australia  152                     8200 #> 152                Bosnia and Herzegovina  152                     8200 #> 153                     Republic of Korea  153                     8300 #> 154                        United Kingdom  154                     8400 #> 155                       North Macedonia  155                     9000 #> 156                               Croatia  156                     9100 #> 157                              Slovenia  157                     9300 #> 158                               Germany  158                     9400 #> 159                            Montenegro  160                     9900 #> 160                             Singapore  160                     9900 #> 161                                 Malta  161                    10200 #> 162                              Portugal  162                    10700 #> 163                                Israel  163                    10800 #> 164                                Cyprus  164                    11000 #> 165                               Belgium  165                    11200 #> 166                               Ireland  166                    11300 #> 167                           Netherlands  167                    11900 #> 168                              Slovakia  168                    12600 #> 169                                Sweden  168                    12600 #> 170                               Austria  170                    13500 #> 171                           Switzerland  171                    13900 #> 172                            Luxembourg  172                    14300 #> 173                               Iceland  173                    14400 #> 174                               Denmark  174                    16200 #> 175                                 Japan  175                    16700 #> 176                               Czechia  176                    17900 #> 177                  United Arab Emirates  176                    17900 #> 178                               Finland  178                    20900 #> 179                                 Spain  179                    21500 #> 180                               Belarus  180                    23800 #> 181                                Norway  181                    25700 #> 182                                Greece  182                    26900 #> 183                                Poland  183                    30300 #> 184                                 Italy  184                    51300 #> 185                               Andorra  185                       NA #> 186                              Anguilla  186                       NA #> 187                British Virgin Islands  187                       NA #> 188                          Cook Islands  188                       NA #> 189                              Dominica  189                       NA #> 190                              Holy See  190                       NA #> 191                         Liechtenstein  191                       NA #> 192                      Marshall Islands  192                       NA #> 193                                Monaco  193                       NA #> 194                            Montserrat  194                       NA #> 195                                 Nauru  195                       NA #> 196                                  Niue  196                       NA #> 197                                 Palau  197                       NA #> 198                 Saint Kitts and Nevis  198                       NA #> 199                            San Marino  199                       NA #> 200                               Tokelau  200                       NA #> 201              Turks and Caicos Islands  201                       NA #> 202                                Tuvalu  202                       NA  # Graph scatterplot of Maternal Mortality Ratio 2017 and Antenatal Care 4+ Visits % sowc_maternal_newborn |>   select(antenatal_care_4_1549, maternal_mortality_ratio_2017) |>   remove_missing(na.rm = TRUE) |>   ggplot(aes(antenatal_care_4_1549, maternal_mortality_ratio_2017)) +   geom_point(alpha = 0.5) +   labs(     title = \"Antenatal Care and Mortality\",     x = \"Antenatal Care 4+ visits %\",     y = \"Maternal Mortality Ratio\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/sp500.html","id":null,"dir":"Reference","previous_headings":"","what":"Financial information for 50 S&P 500 companies — sp500","title":"Financial information for 50 S&P 500 companies — sp500","text":"Fifty companies randomly sampled 500 companies S&P 500, financial information collected March 8, 2012.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Financial information for 50 S&P 500 companies — sp500","text":"","code":"sp500"},{"path":"https://openintrostat.github.io/openintro/reference/sp500.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Financial information for 50 S&P 500 companies — sp500","text":"data frame 50 observations following 12 variables. market_cap Total value company shares, millions dollars. stock name stock (e.g. AAPL Apple). ent_value Enterprise value, alternative market cap also accounts things like cash debt, millions dollars. trail_pe market cap divided earnings (profits) last year. forward_pe market cap divided forecasted earnings (profits) next year. ev_over_rev Enterprise value divided company's revenue. profit_margin Percent earnings profits. revenue Revenue, millions dollars. growth Quartly revenue growth (year year), millions dollars. earn_before Earnings interest, taxes, depreciation, amortization, millions dollars. cash Total cash, millions dollars. debt Total debt, millions dollars.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Financial information for 50 S&P 500 companies — sp500","text":"Yahoo! Finance, retrieved 2012-03-08.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Financial information for 50 S&P 500 companies — sp500","text":"","code":"library(ggplot2)  ggplot(sp500, aes(x = ent_value, y = earn_before)) +   geom_point() +   labs(x = \"Enterprise value\", y = \"Earnings\") #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).   ggplot(sp500, aes(x = ev_over_rev, y = forward_pe)) +   geom_point() +   labs(     x = \"Enterprise value / revenue, logged\",     y = \"Market cap / forecasted earnings, logged\"   )   ggplot(sp500, aes(x = ent_value, y = earn_before)) +   geom_point() +   scale_x_log10() +   scale_y_log10() +   labs(x = \"Enterprise value\", y = \"Earnings\") #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`).   ggplot(sp500, aes(x = ev_over_rev, y = forward_pe)) +   geom_point() +   scale_x_log10() +   scale_y_log10() +   labs(     x = \"Enterprise value / revenue, logged\",     y = \"Market cap / forecasted earnings, logged\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/sp500_1950_2018.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily observations for the S&P 500 — sp500_1950_2018","title":"Daily observations for the S&P 500 — sp500_1950_2018","text":"Data runs 1950 near end 2018.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500_1950_2018.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily observations for the S&P 500 — sp500_1950_2018","text":"","code":"sp500_1950_2018"},{"path":"https://openintrostat.github.io/openintro/reference/sp500_1950_2018.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily observations for the S&P 500 — sp500_1950_2018","text":"data frame 17346 observations following 7 variables. Date Date form \"YYYY-MM-DD\". Open Opening price. High Highest price day. Low Lowest price day. Close Closing price day. Adj.Close Adjusted price close accounting dividends paid . Volume Trading volume.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500_1950_2018.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily observations for the S&P 500 — sp500_1950_2018","text":"Yahoo! Finance","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500_1950_2018.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily observations for the S&P 500 — sp500_1950_2018","text":"","code":"data(sp500_1950_2018) sp500.ten.years <- subset(   sp500_1950_2018,   \"2009-01-01\" <= as.Date(Date) & as.Date(Date) <= \"2018-12-31\" ) d <- diff(sp500.ten.years$Adj.Close) mean(d > 0) #> [1] 0.5452"},{"path":"https://openintrostat.github.io/openintro/reference/sp500_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"S&P 500 stock data — sp500_seq","title":"S&P 500 stock data — sp500_seq","text":"Daily stock returns S&P500 1990-2011 can used assess whether stock activity day independent stock's behavior previous days. label day (D) depending whether market day. example, consider following changes price, new labels , number days must observed day.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S&P 500 stock data — sp500_seq","text":"","code":"sp500_seq"},{"path":"https://openintrostat.github.io/openintro/reference/sp500_seq.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S&P 500 stock data — sp500_seq","text":"data frame 2948 observations following variable. race factor levels 1, 2, 3, 4, 5, 6, 7+","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500_seq.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"S&P 500 stock data — sp500_seq","text":"Google Finance.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sp500_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S&P 500 stock data — sp500_seq","text":"","code":"sp500_seq #> # A tibble: 2,948 × 1 #>    race  #>    <fct> #>  1 1     #>  2 1     #>  3 1     #>  4 1     #>  5 1     #>  6 1     #>  7 1     #>  8 1     #>  9 1     #> 10 1     #> # ℹ 2,938 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/speed_gender_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Speed, gender, and height of 1325 students — speed_gender_height","title":"Speed, gender, and height of 1325 students — speed_gender_height","text":"1,325 UCLA students asked fill survey asked height, fastest speed ever driven, gender.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/speed_gender_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speed, gender, and height of 1325 students — speed_gender_height","text":"","code":"speed_gender_height"},{"path":"https://openintrostat.github.io/openintro/reference/speed_gender_height.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Speed, gender, and height of 1325 students — speed_gender_height","text":"data frame 1325 observations following 3 variables. speed numeric vector gender factor levels female male height numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/speed_gender_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Speed, gender, and height of 1325 students — speed_gender_height","text":"","code":"speed_gender_height #> # A tibble: 1,325 × 3 #>    speed gender height #>    <int> <fct>   <dbl> #>  1    85 female     69 #>  2    40 male       71 #>  3    87 female     64 #>  4   110 female     60 #>  5   110 male       70 #>  6   120 female     61 #>  7    90 female     65 #>  8    90 female     65 #>  9    80 female     61 #> 10    95 male       69 #> # ℹ 1,315 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/ssd_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"SSD read and write speeds — ssd_speed","title":"SSD read and write speeds — ssd_speed","text":"User submitted data 1TB solid state drives (SSD).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ssd_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SSD read and write speeds — ssd_speed","text":"","code":"ssd_speed"},{"path":"https://openintrostat.github.io/openintro/reference/ssd_speed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SSD read and write speeds — ssd_speed","text":"data frame 54 rows 7 variables. brand Brand name drive. model Model name drive. samples Number user submitted benchmarks. form_factor Physical form drive levels 2.5, m.2, mSATA. nvme drive uses nvme protocol value 1, 0 . read Average read speed user benchmarks MB/s. write Average write speed user benchmarks MB/s.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ssd_speed.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SSD read and write speeds — ssd_speed","text":"UserBenchmark, retrieved September 1, 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ssd_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SSD read and write speeds — ssd_speed","text":"","code":"library(ggplot2) library(dplyr)  ssd_speed |>   count(form_factor) #> # A tibble: 3 × 2 #>   form_factor     n #>   <chr>       <int> #> 1 2.5            21 #> 2 m.2            32 #> 3 mSATA           1  ssd_speed |>   filter(form_factor != \"mSATA\") |>   ggplot(aes(x = read, y = write, color = form_factor)) +   geom_point() +   labs(     title = \"Average read vs. write speed of SSDs\",     x = \"Read speed (MB/s)\",     y = \"Write speed (MB/s)\"   ) +   facet_wrap(~form_factor, ncol = 1, scales = \"free\") +   guides(color = FALSE) #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as #> of ggplot2 3.3.4."},{"path":"https://openintrostat.github.io/openintro/reference/starbucks.html","id":null,"dir":"Reference","previous_headings":"","what":"Starbucks nutrition — starbucks","title":"Starbucks nutrition — starbucks","text":"Nutrition facts several Starbucks food items","code":""},{"path":"https://openintrostat.github.io/openintro/reference/starbucks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Starbucks nutrition — starbucks","text":"","code":"starbucks"},{"path":"https://openintrostat.github.io/openintro/reference/starbucks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Starbucks nutrition — starbucks","text":"data frame 77 observations following 7 variables. item Food item. calories Calories. fat numeric vector carb numeric vector fiber numeric vector protein numeric vector type factor levels bakery, bistro box, hot breakfast, parfait, petite, salad, sandwich","code":""},{"path":"https://openintrostat.github.io/openintro/reference/starbucks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Starbucks nutrition — starbucks","text":"https://www.starbucks.com/menu, retrieved 2011-03-10.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/starbucks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Starbucks nutrition — starbucks","text":"","code":"starbucks #> # A tibble: 77 × 7 #>    item                          calories   fat  carb fiber protein type   #>    <chr>                            <int> <dbl> <int> <int>   <int> <fct>  #>  1 \"8-Grain Roll\"                     350     8    67     5      10 bakery #>  2 \"Apple Bran Muffin\"                350     9    64     7       6 bakery #>  3 \"Apple Fritter\"                    420    20    59     0       5 bakery #>  4 \"Banana Nut Loaf\"                  490    19    75     4       7 bakery #>  5 \"Birthday Cake Mini Doughnut\"      130     6    17     0       0 bakery #>  6 \"Blueberry Oat Bar\"                370    14    47     5       6 bakery #>  7 \"Blueberry Scone\"                  460    22    61     2       7 bakery #>  8 \"Bountiful Blueberry Muffin\"       370    14    55     0       6 bakery #>  9 \"Butter Croissant \"                310    18    32     0       5 bakery #> 10 \"Cheese Danish\"                    420    25    39     0       7 bakery #> # ℹ 67 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/stats_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Final exam scores for twenty students — stats_scores","title":"Final exam scores for twenty students — stats_scores","text":"Scores range 57 94.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stats_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final exam scores for twenty students — stats_scores","text":"","code":"stats_scores"},{"path":"https://openintrostat.github.io/openintro/reference/stats_scores.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Final exam scores for twenty students — stats_scores","text":"data frame 20 observations following variable. scores numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stats_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Final exam scores for twenty students — stats_scores","text":"","code":"stats_scores #> # A tibble: 20 × 1 #>    scores #>     <int> #>  1     79 #>  2     83 #>  3     57 #>  4     82 #>  5     94 #>  6     83 #>  7     72 #>  8     74 #>  9     73 #> 10     71 #> 11     66 #> 12     89 #> 13     78 #> 14     81 #> 15     78 #> 16     81 #> 17     88 #> 18     69 #> 19     77 #> 20     79"},{"path":"https://openintrostat.github.io/openintro/reference/stem_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Embryonic stem cells to treat heart attack (in sheep) — stem_cell","title":"Embryonic stem cells to treat heart attack (in sheep) — stem_cell","text":"treatment using embryonic stem cells (ESCs) help improve heart function following heart attack? sheep study randomly assigned ESC control group, change hearts' pumping capacity measured study. positive value corresponds increased pumping capacity, generally suggests stronger recovery.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stem_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embryonic stem cells to treat heart attack (in sheep) — stem_cell","text":"","code":"stem_cell"},{"path":"https://openintrostat.github.io/openintro/reference/stem_cell.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Embryonic stem cells to treat heart attack (in sheep) — stem_cell","text":"data frame 18 observations following 3 variables. trmt factor levels ctrl esc numeric vector numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stem_cell.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Embryonic stem cells to treat heart attack (in sheep) — stem_cell","text":"doi:10.1016/S0140-6736(05)67380-1","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stem_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embryonic stem cells to treat heart attack (in sheep) — stem_cell","text":"","code":"stem_cell #> # A tibble: 18 × 3 #>    trmt  before after #>    <fct>  <dbl> <dbl> #>  1 ctrl    35.2  29.5 #>  2 ctrl    36.5  29.5 #>  3 ctrl    39.8  36.2 #>  4 ctrl    39.8  38   #>  5 ctrl    41.8  37.5 #>  6 ctrl    45    42.8 #>  7 ctrl    47    39   #>  8 ctrl    52    45.2 #>  9 ctrl    52    52.2 #> 10 esc     29    31   #> 11 esc     29.5  43.8 #> 12 esc     34    36   #> 13 esc     35    41.5 #> 14 esc     35.2  39.5 #> 15 esc     42.5  40   #> 16 esc     44    45.8 #> 17 esc     49.2  55.2 #> 18 esc     53.8  51"},{"path":"https://openintrostat.github.io/openintro/reference/stent30.html","id":null,"dir":"Reference","previous_headings":"","what":"Stents for the treatment of stroke — stent30","title":"Stents for the treatment of stroke — stent30","text":"experiment studies effectiveness stents treating patients risk stroke unexpected results. stent30 represents results 30 days stroke stent365 represents results 365 days stroke.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stent30.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stents for the treatment of stroke — stent30","text":"","code":"stent30"},{"path":"https://openintrostat.github.io/openintro/reference/stent30.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stents for the treatment of stroke — stent30","text":"data frame 451 observations following 2 variables. group factor levels control treatment outcome factor levels event stroke","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stent30.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stents for the treatment of stroke — stent30","text":"Chimowitz MI, Lynn MJ, Derdeyn CP, et al. 2011. Stenting versus Aggressive Med- ical Therapy Intracranial Arterial Stenosis. New England Journal Medicine 365:993- 1003. doi:10.1056/NEJMoa1105335 . NY Times article reporting study: https://www.nytimes.com/2011/09/08/health/research/08stent.html.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stent30.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stents for the treatment of stroke — stent30","text":"","code":"# 30-day results table(stent30) #>            outcome #> group       no event stroke #>   control        214     13 #>   treatment      191     33  # 365-day results table(stent365) #>            outcome #> group       no event stroke #>   control        199     28 #>   treatment      179     45"},{"path":"https://openintrostat.github.io/openintro/reference/stocks_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly Returns for a few stocks — stocks_18","title":"Monthly Returns for a few stocks — stocks_18","text":"Monthly return data stocks, covers stock prices November 2015 October 2018.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stocks_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly Returns for a few stocks — stocks_18","text":"","code":"stocks_18"},{"path":"https://openintrostat.github.io/openintro/reference/stocks_18.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly Returns for a few stocks — stocks_18","text":"data frame 36 observations following 3 variables. date First day month corresponding returns. goog Google stock price change. cat Caterpillar stock price change. xom Exxon Mobil stock price change.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stocks_18.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly Returns for a few stocks — stocks_18","text":"Yahoo! Finance, direct download.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/stocks_18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monthly Returns for a few stocks — stocks_18","text":"","code":"d <- stocks_18 dim(d) #> [1] 36  4 apply(d[, 2:3], 2, mean) #>        cat       goog  #> 0.02037753 0.01042289  apply(d[, 2:3], 2, sd) #>        cat       goog  #> 0.07571634 0.05409915"},{"path":"https://openintrostat.github.io/openintro/reference/student_housing.html","id":null,"dir":"Reference","previous_headings":"","what":"Community college housing (simulated data, 2015) — student_housing","title":"Community college housing (simulated data, 2015) — student_housing","text":"simulated data intended represent housing prices students college.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/student_housing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community college housing (simulated data, 2015) — student_housing","text":"","code":"student_housing"},{"path":"https://openintrostat.github.io/openintro/reference/student_housing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Community college housing (simulated data, 2015) — student_housing","text":"data frame 175 observations following variable. price Monthly housing price, simulated.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/student_housing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Community college housing (simulated data, 2015) — student_housing","text":"","code":"set.seed(5) generate_student_housing <- data.frame(   price = round(rnorm(175, 515, 65) + exp(rnorm(175, 4.2, 1))) ) hist(student_housing$price, 20)  t.test(student_housing$price) #>  #> \tOne Sample t-test #>  #> data:  student_housing$price #> t = 63.433, df = 174, p-value < 0.00000000000000022 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  597.7138 636.1034 #> sample estimates: #> mean of x  #>  616.9086  #>  mean(student_housing$price) #> [1] 616.9086 sd(student_housing$price) #> [1] 128.6541 identical(student_housing, generate_student_housing) #> [1] FALSE"},{"path":"https://openintrostat.github.io/openintro/reference/student_sleep.html","id":null,"dir":"Reference","previous_headings":"","what":"Sleep for 110 students (simulated) — student_sleep","title":"Sleep for 110 students (simulated) — student_sleep","text":"simulated dataset much 110 college students slept single night.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/student_sleep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sleep for 110 students (simulated) — student_sleep","text":"","code":"student_sleep"},{"path":"https://openintrostat.github.io/openintro/reference/student_sleep.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sleep for 110 students (simulated) — student_sleep","text":"data frame 110 observations following variable. hours Number hours slept student (simulated).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/student_sleep.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sleep for 110 students (simulated) — student_sleep","text":"Simulated data.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/student_sleep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sleep for 110 students (simulated) — student_sleep","text":"","code":"set.seed(2) x <- exp(c(   rnorm(100, log(7.5), 0.15),   rnorm(10, log(10), 0.196) )) x <- round(x - mean(x) + 7.42, 2)  identical(x, student_sleep$hours) #> [1] TRUE"},{"path":"https://openintrostat.github.io/openintro/reference/sulphinpyrazone.html","id":null,"dir":"Reference","previous_headings":"","what":"Treating heart attacks — sulphinpyrazone","title":"Treating heart attacks — sulphinpyrazone","text":"Experiment data studying efficacy treating patients heart attack Sulphinpyrazone.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sulphinpyrazone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treating heart attacks — sulphinpyrazone","text":"","code":"sulphinpyrazone"},{"path":"https://openintrostat.github.io/openintro/reference/sulphinpyrazone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Treating heart attacks — sulphinpyrazone","text":"data frame 1475 observations following 2 variables. group factor levels control treatment outcome factor levels died lived","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sulphinpyrazone.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Treating heart attacks — sulphinpyrazone","text":"Anturane Reinfarction Trial Research Group. 1980. Sulfinpyrazone prevention sudden death myocardial infarction. New England Journal Medicine 302(5):250-256.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/sulphinpyrazone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treating heart attacks — sulphinpyrazone","text":"","code":"sulphinpyrazone #> # A tibble: 1,475 × 2 #>    group   outcome #>    <fct>   <fct>   #>  1 control died    #>  2 control died    #>  3 control died    #>  4 control died    #>  5 control died    #>  6 control died    #>  7 control died    #>  8 control died    #>  9 control died    #> 10 control died    #> # ℹ 1,465 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/supreme_court.html","id":null,"dir":"Reference","previous_headings":"","what":"Supreme Court approval rating — supreme_court","title":"Supreme Court approval rating — supreme_court","text":"Summary random survey 976 people.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/supreme_court.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supreme Court approval rating — supreme_court","text":"","code":"supreme_court"},{"path":"https://openintrostat.github.io/openintro/reference/supreme_court.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supreme Court approval rating — supreme_court","text":"data frame 976 observations following variable. answer factor levels approve ","code":""},{"path":"https://openintrostat.github.io/openintro/reference/supreme_court.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Supreme Court approval rating — supreme_court","text":"https://www.nytimes.com/2012/06/08/us/politics/44-percent--americans-approve--supreme-court--new-poll.html","code":""},{"path":"https://openintrostat.github.io/openintro/reference/supreme_court.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supreme Court approval rating — supreme_court","text":"","code":"supreme_court #> # A tibble: 976 × 1 #>    answer  #>    <fct>   #>  1 approve #>  2 approve #>  3 approve #>  4 approve #>  5 approve #>  6 approve #>  7 approve #>  8 approve #>  9 approve #> 10 approve #> # ℹ 966 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/teacher.html","id":null,"dir":"Reference","previous_headings":"","what":"Teacher Salaries in St. Louis, Michigan — teacher","title":"Teacher Salaries in St. Louis, Michigan — teacher","text":"dataset contains teacher salaries 2009-2010 71 teachers employed St. Louis Public School Michigan, well several covariates.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/teacher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teacher Salaries in St. Louis, Michigan — teacher","text":"","code":"teacher"},{"path":"https://openintrostat.github.io/openintro/reference/teacher.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Teacher Salaries in St. Louis, Michigan — teacher","text":"data frame 71 observations following 8 variables. id Identification code teacher, assigned randomly. degree Highest educational degree attained: BA (bachelor's degree) MA (master's degree). fte Full-time enrollment status: full-time 1 part-time 0.5. years Number years employed school district. base Base annual salary, dollars. fica Amount paid Social Security Medicare per year Federal Insurance Contribution Act (FICA), dollars. retirement Amount paid retirement fund teacher per year, dollars. total Total annual salary teacher, resulting sum base salary + fica + retirement, dollars.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/teacher.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Teacher Salaries in St. Louis, Michigan — teacher","text":"Originally posted SODA Developers (dev.socrata.com/data), removed 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/teacher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teacher Salaries in St. Louis, Michigan — teacher","text":"","code":"library(ggplot2)  # Salary and education level ggplot(teacher, aes(x = degree, y = base)) +   geom_boxplot() +   labs(     x = \"Highest educational degree attained\",     y = \"Base annual salary, in $\",     color = \"Degree\",     title = \"Salary and education level\"   )   # Salary and years of employment ggplot(teacher, aes(x = years, y = base, color = degree)) +   geom_point() +   labs(     x = \"Number of years employed by the school district\",     y = \"Base annual salary, in $\",     color = \"Degree\",     title = \"Salary and years of employment\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/textbooks.html","id":null,"dir":"Reference","previous_headings":"","what":"Textbook data for UCLA Bookstore and Amazon — textbooks","title":"Textbook data for UCLA Bookstore and Amazon — textbooks","text":"random sample taken nearly 10\\ textbook course identified, new price UCLA Bookstore Amazon.com recorded.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/textbooks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Textbook data for UCLA Bookstore and Amazon — textbooks","text":"","code":"textbooks"},{"path":"https://openintrostat.github.io/openintro/reference/textbooks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Textbook data for UCLA Bookstore and Amazon — textbooks","text":"data frame 73 observations following 7 variables. dept_abbr Course department (abbreviated). course Course number. isbn Book ISBN. ucla_new New price UCLA Bookstore. amaz_new New price Amazon.com. Whether additional books required course (Y means \"yes, additional books required\"). diff UCLA Bookstore price minus Amazon.com price book.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/textbooks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Textbook data for UCLA Bookstore and Amazon — textbooks","text":"Collected David Diez.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/textbooks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Textbook data for UCLA Bookstore and Amazon — textbooks","text":"sample represents courses textbooks listed online UCLA Bookstore's website. expensive textbook selected based UCLA Bookstore price, may insert bias data; reason, may beneficial analyze data \"N\".","code":""},{"path":"https://openintrostat.github.io/openintro/reference/textbooks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Textbook data for UCLA Bookstore and Amazon — textbooks","text":"","code":"library(ggplot2)  ggplot(textbooks, aes(x = diff)) +   geom_histogram(binwidth = 5)   t.test(textbooks$diff) #>  #> \tOne Sample t-test #>  #> data:  textbooks$diff #> t = 7.6488, df = 72, p-value = 0.00000000006928 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>   9.435636 16.087652 #> sample estimates: #> mean of x  #>  12.76164  #>"},{"path":"https://openintrostat.github.io/openintro/reference/thanksgiving_spend.html","id":null,"dir":"Reference","previous_headings":"","what":"Thanksgiving spending, simulated based on Gallup poll. — thanksgiving_spend","title":"Thanksgiving spending, simulated based on Gallup poll. — thanksgiving_spend","text":"entry gives simulated spending data Americans Thanksgiving 2009 based findings Gallup poll.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/thanksgiving_spend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thanksgiving spending, simulated based on Gallup poll. — thanksgiving_spend","text":"","code":"thanksgiving_spend"},{"path":"https://openintrostat.github.io/openintro/reference/thanksgiving_spend.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Thanksgiving spending, simulated based on Gallup poll. — thanksgiving_spend","text":"data frame 436 observations following 1 variable. spending Amount spending, US dollars.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/thanksgiving_spend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thanksgiving spending, simulated based on Gallup poll. — thanksgiving_spend","text":"","code":"library(ggplot2)  ggplot(thanksgiving_spend, aes(x = spending)) +   geom_histogram(binwidth = 20)"},{"path":"https://openintrostat.github.io/openintro/reference/tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Tip data — tips","title":"Tip data — tips","text":"simulated dataset tips weeks couple days per week. tip associated single group, may include several bills tables (.e. groups paid one lump sum simulations).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tip data — tips","text":"","code":"tips"},{"path":"https://openintrostat.github.io/openintro/reference/tips.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tip data — tips","text":"data frame 95 observations following 5 variables. week Week number. day Day, either Friday Tuesday. n_peop Number people associated group. bill Total bill group. tip Total tip group.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tips.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tip data — tips","text":"Simulated dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tip data — tips","text":"dataset built using simulations tables, bills, tips based bills. Large groups assumed pay gratuity, evident data. Tips set plausible round values; often (always) rounded dollars, quarters, etc.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tip data — tips","text":"","code":"library(ggplot2)  ggplot(tips, aes(x = day, y = tip)) +   geom_boxplot()   ggplot(tips, aes(x = tip, fill = factor(week))) +   geom_density(alpha = 0.5) +   labs(x = \"Tip\", y = \"Density\", fill = \"Week\")   ggplot(tips, aes(x = tip)) +   geom_dotplot() #> Bin width defaults to 1/30 of the range of the data. Pick better value with #> `binwidth`.   ggplot(tips, aes(x = tip, fill = factor(day))) +   geom_density(alpha = 0.5) +   labs(x = \"Tip\", y = \"Density\", fill = \"Day\")"},{"path":"https://openintrostat.github.io/openintro/reference/toohey.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated polling dataset — toohey","title":"Simulated polling dataset — toohey","text":"Simulated data fake political candidate.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/toohey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated polling dataset — toohey","text":"","code":"toohey"},{"path":"https://openintrostat.github.io/openintro/reference/toohey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated polling dataset — toohey","text":"data frame 500 observations following variable. vote_for factor levels yes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/toohey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated polling dataset — toohey","text":"","code":"toohey #> # A tibble: 500 × 1 #>    vote_for #>    <fct>    #>  1 yes      #>  2 yes      #>  3 yes      #>  4 yes      #>  5 yes      #>  6 yes      #>  7 yes      #>  8 yes      #>  9 yes      #> 10 yes      #> # ℹ 490 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/tourism.html","id":null,"dir":"Reference","previous_headings":"","what":"Turkey tourism — tourism","title":"Turkey tourism — tourism","text":"Summary tourism Turkey.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tourism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turkey tourism — tourism","text":"","code":"tourism"},{"path":"https://openintrostat.github.io/openintro/reference/tourism.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Turkey tourism — tourism","text":"data frame 47 observations following 3 variables. year numeric vector visitor_count_tho numeric vector tourist_spending numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tourism.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Turkey tourism — tourism","text":"Association Turkish Travel Agencies, Foreign Visitors Figure & Tourist Spendings Years. http://www.tursab.org.tr/en/statistics/foreign-visitors-figure-tourist-spendings--years_1083.html","code":""},{"path":"https://openintrostat.github.io/openintro/reference/tourism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turkey tourism — tourism","text":"","code":"tourism #> # A tibble: 47 × 3 #>     year visitor_count_tho tourist_spending #>    <int>             <int>            <int> #>  1  1963               198                7 #>  2  1964               229                8 #>  3  1965               361               13 #>  4  1966               449               12 #>  5  1967               574               13 #>  6  1968               602               24 #>  7  1969               694               36 #>  8  1970               724               51 #>  9  1971               926               62 #> 10  1972              1034              103 #> # ℹ 37 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/toy_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset for ANOVA — toy_anova","title":"Simulated dataset for ANOVA — toy_anova","text":"Simulated dataset getting better understanding intuition ANOVA based .","code":""},{"path":"https://openintrostat.github.io/openintro/reference/toy_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset for ANOVA — toy_anova","text":"","code":"toy_anova"},{"path":"https://openintrostat.github.io/openintro/reference/toy_anova.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset for ANOVA — toy_anova","text":"data frame 70 observations following 3 variables. group factor levels II III outcome numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/toy_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated dataset for ANOVA — toy_anova","text":"","code":"toy_anova #> # A tibble: 140 × 2 #>    group outcome #>    <chr>   <dbl> #>  1 I      3.99   #>  2 I     -1.24   #>  3 I     -0.485  #>  4 I     -0.0617 #>  5 I     -0.899  #>  6 I     -0.864  #>  7 I      1.68   #>  8 I      0.381  #>  9 I      0.786  #> 10 I      3.84   #> # ℹ 130 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/transplant.html","id":null,"dir":"Reference","previous_headings":"","what":"Transplant consultant success rate (fake data) — transplant","title":"Transplant consultant success rate (fake data) — transplant","text":"Summarizing whether complication 62 patients used particular medical consultant.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/transplant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transplant consultant success rate (fake data) — transplant","text":"","code":"transplant"},{"path":"https://openintrostat.github.io/openintro/reference/transplant.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Transplant consultant success rate (fake data) — transplant","text":"data frame 62 observations following variable. outcome factor levels complications okay","code":""},{"path":"https://openintrostat.github.io/openintro/reference/transplant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transplant consultant success rate (fake data) — transplant","text":"","code":"transplant #> # A tibble: 62 × 1 #>    outcome       #>    <fct>         #>  1 complications #>  2 complications #>  3 complications #>  4 okay          #>  5 okay          #>  6 okay          #>  7 okay          #>  8 okay          #>  9 okay          #> 10 okay          #> # ℹ 52 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/treeDiag.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct tree diagrams — treeDiag","title":"Construct tree diagrams — treeDiag","text":"Construct beautiful tree diagrams","code":""},{"path":"https://openintrostat.github.io/openintro/reference/treeDiag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct tree diagrams — treeDiag","text":"","code":"treeDiag(   main,   p1,   p2,   out1 = c(\"Yes\", \"No\"),   out2 = c(\"Yes\", \"No\"),   textwd = 0.15,   solwd = 0.2,   SBS = c(TRUE, TRUE),   showSol = TRUE,   solSub = NULL,   digits = 4,   textadj = 0.015,   cex.main = 1.3,   col.main = \"#999999\",   showWork = FALSE )"},{"path":"https://openintrostat.github.io/openintro/reference/treeDiag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct tree diagrams — treeDiag","text":"main Character vector two variable names, descriptions, questions p1 Vector probabilities primary branches p2 List secondary branches, list item numerical vector probabilities corresponding primary branches p1 out1 Character vector outcomes corresponding primary branches out2 Character vector outcomes corresponding secondary branches textwd width provided text default 0.15 solwd provided solution default 0.2 SBS boolean vector indicating whether place text probability side--side primary secondary branches showSol Boolean indicating whether show solution tree diagram solSub optional list vectors corresponding p2 list alternative text solutions digits number digits show solution textadj Vertical adjustment text cex.main Size main plot col.main Color main plot showWork Whether work shown solutions","code":""},{"path":"https://openintrostat.github.io/openintro/reference/treeDiag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct tree diagrams — treeDiag","text":"David Diez, Christopher Barr","code":""},{"path":"https://openintrostat.github.io/openintro/reference/treeDiag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct tree diagrams — treeDiag","text":"","code":"treeDiag(   c(\"Flight on time?\", \"Luggage on time?\"),   c(0.8, 0.2), list(c(0.97, 0.03), c(0.15, 0.85)) )  treeDiag(c(\"Breakfast?\", \"Go to class\"), c(.4, .6),   list(c(0.4, 0.36, 0.34), c(0.6, 0.3, 0.1)), c(\"Yes\", \"No\"),   c(\"Statistics\", \"English\", \"Sociology\"),   showWork = TRUE )  treeDiag(   c(\"Breakfast?\", \"Go to class\"), c(0.4, 0.11, 0.49),   list(c(0.4, 0.36, 0.24), c(0.6, 0.3, 0.1), c(0.1, 0.4, 0.5)),   c(\"one\", \"two\", \"three\"), c(\"Statistics\", \"English\", \"Sociology\") )  treeDiag(c(\"Dow Jones rise?\", \"NASDAQ rise?\"),   c(0.53, 0.47), list(c(0.75, 0.25), c(0.72, 0.28)),   solSub = list(c(\"(a)\", \"(b)\"), c(\"(c)\", \"(d)\")), solwd = 0.08 )"},{"path":"https://openintrostat.github.io/openintro/reference/twins.html","id":null,"dir":"Reference","previous_headings":"","what":"twins — twins","title":"twins — twins","text":"data frame containing data collected mid 20th century Cyril Burt study tracked identical twins separated birth: one child raised home biological parents foster home. attempt answer question whether intelligence result nature nurture, children given IQ tests.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/twins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"twins — twins","text":"","code":"twins"},{"path":"https://openintrostat.github.io/openintro/reference/twins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"twins — twins","text":"data frame 27 observations following 2 variables. foster IQ score twin raised Foster parents. biological IQ score twin raised Biological parents.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/twins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"twins — twins","text":"","code":"library(ggplot2) library(dplyr) library(tidyr)  plot_data <- twins |>   pivot_longer(cols = c(foster, biological), names_to = \"twin\", values_to = \"iq\")  ggplot(plot_data, aes(iq, fill = twin)) +   geom_histogram(color = \"white\", binwidth = 5) +   facet_wrap(~twin) +   theme_minimal() +   labs(     title = \"IQ of identical twins\",     subtitle = \"Separated at birth\",     x = \"IQ\",     y = \"Count\",     fill = \"\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/ucla_f18.html","id":null,"dir":"Reference","previous_headings":"","what":"UCLA courses in Fall 2018 — ucla_f18","title":"UCLA courses in Fall 2018 — ucla_f18","text":"List courses UCLA Fall 2018.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ucla_f18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UCLA courses in Fall 2018 — ucla_f18","text":"","code":"ucla_f18"},{"path":"https://openintrostat.github.io/openintro/reference/ucla_f18.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UCLA courses in Fall 2018 — ucla_f18","text":"data frame 3950 observations following 14 variables. year Year course offered term Term course offered subject Subject subject_abbr Subject abbreviation, course Course name course_num Course number, complete course_numeric Course number, numeric seminar Boolean seminar course ind_study Boolean form independent  study apprenticeship Boolean apprenticeship internship Boolean internship honors_contracts Boolean honors contracts course laboratory Boolean lab special_topic Boolean special types courses listed","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ucla_f18.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UCLA courses in Fall 2018 — ucla_f18","text":"https://sa.ucla.edu/ro/public/soc, retrieved 2018-11-22.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ucla_f18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UCLA courses in Fall 2018 — ucla_f18","text":"","code":"nrow(ucla_f18) #> [1] 3950 table(ucla_f18$special_topic) #>  #> FALSE  TRUE  #>  2768  1182  subset(ucla_f18, is.na(course_numeric)) #> # A tibble: 3 × 14 #>    year term  subject      subject_abbr course course_num course_numeric seminar #>   <dbl> <chr> <chr>        <chr>        <chr>  <chr>               <dbl> <lgl>   #> 1  2018 Fall  Aerospace S… AERO ST      Leade… A                      NA FALSE   #> 2  2018 Fall  Military Sc… MIL SCI      Leade… Z                      NA FALSE   #> 3  2018 Fall  Naval Scien… NAV SCI      Naval… Z                      NA FALSE   #> # ℹ 6 more variables: ind_study <lgl>, apprenticeship <lgl>, internship <lgl>, #> #   honors_contracts <lgl>, laboratory <lgl>, special_topic <lgl> table(subset(ucla_f18, !special_topic)$course_numeric < 100) #>  #> FALSE  TRUE  #>  2225   543  elig_courses <-   subset(ucla_f18, !special_topic & course_numeric < 100) set.seed(1) ucla_textbooks_f18 <-   elig_courses[sample(nrow(elig_courses), 100), ] tmp <- order(   ucla_textbooks_f18$subject,   ucla_textbooks_f18$course_numeric ) ucla_textbooks_f18 <- ucla_textbooks_f18[tmp, ] rownames(ucla_textbooks_f18) <- NULL head(ucla_textbooks_f18) #> # A tibble: 6 × 14 #>    year term  subject      subject_abbr course course_num course_numeric seminar #>   <dbl> <chr> <chr>        <chr>        <chr>  <chr>               <dbl> <lgl>   #> 1  2018 Fall  Anthropology ANTHRO       Cultu… 3                       3 FALSE   #> 2  2018 Fall  Anthropology ANTHRO       Cultu… 4                       4 FALSE   #> 3  2018 Fall  Architectur… ARCH&UD      Intro… 30                     30 FALSE   #> 4  2018 Fall  Art          NA           Produ… 21B                    21 FALSE   #> 5  2018 Fall  Arts and Ar… ART&ARC      Arts … 10                     10 FALSE   #> 6  2018 Fall  Asian Ameri… ASIA AM      UCLA … 19                     19 FALSE   #> # ℹ 6 more variables: ind_study <lgl>, apprenticeship <lgl>, internship <lgl>, #> #   honors_contracts <lgl>, laboratory <lgl>, special_topic <lgl>"},{"path":"https://openintrostat.github.io/openintro/reference/ucla_textbooks_f18.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","title":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","text":"sample courses collected UCLA Fall 2018, corresponding textbook prices collected UCLA bookstore also Amazon.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ucla_textbooks_f18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","text":"","code":"ucla_textbooks_f18"},{"path":"https://openintrostat.github.io/openintro/reference/ucla_textbooks_f18.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","text":"data frame 201 observations following 20 variables. year Year course offered term Term course offered subject Subject subject_abbr Subject abbreviation, course Course name course_num Course number, complete course_numeric Course number, numeric seminar Boolean seminar course. ind_study Boolean form independent study apprenticeship Boolean apprenticeship internship Boolean internship honors_contracts Boolean honors contracts course laboratory Boolean lab special_topic Boolean special types courses listed textbook_isbn Textbook ISBN bookstore_new New price UCLA bookstore bookstore_used Used price UCLA bookstore amazon_new New price sold Amazon amazon_used Used price sold Amazon notes relevant notes","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ucla_textbooks_f18.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","text":"https://sa.ucla.edu/ro/public/soc https://ucla.verbacompare.com https://www.amazon.com","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ucla_textbooks_f18.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","text":"past dataset collected UCLA courses Spring 2010, Amazon time found almost uniformly lower UCLA bookstore's.  Now 2018, UCLA bookstore even Amazon vast majority titles, statistical difference sample data. expensive book required course generally used. reason advocate using raw amount differences instead percent differences 20\\ 20\\ price difference low-priced books balance numerically (practical sense) moderate important price difference expensive books.  tends result bit less sensitivity detecting effect, believe absolute difference compares prices meaningful way. Used prices contain shipping cost contain tax.  used prices nuanced comparison, since 3rd party sellers. Amazon often marketplace retail site point, many people buy 3rd party sellers Amazon now without realizing . relationship Amazon 3rd party sellers also challenging. Given frequently changing dynamics space, think analysis reliable long term insights since products sellers changes frequently quantity price.  reason, focus new books sold directly Amazon comparison.  future round data collection, may interesting explore whether dynamics changed used market.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/openintro/reference/ucla_textbooks_f18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of UCLA course textbooks for Fall 2018 — ucla_textbooks_f18","text":"","code":"library(ggplot2) library(dplyr)  ggplot(ucla_textbooks_f18, aes(x = bookstore_new, y = amazon_new)) +   geom_point() +   geom_abline(slope = 1, intercept = 0, color = \"orange\") +   labs(     x = \"UCLA Bookstore price\", y = \"Amazon price\",     title = \"Amazon vs. UCLA Bookstore prices of new textbooks\",     subtitle = \"Orange line represents y = x\"   ) #> Warning: Removed 133 rows containing missing values or values outside the scale range #> (`geom_point()`).   # The following outliers were double checked for accuracy ucla_textbooks_f18_with_diff <- ucla_textbooks_f18 |>   mutate(diff = bookstore_new - amazon_new)  ucla_textbooks_f18_with_diff |>   filter(diff > 20 | diff < -20) #> # A tibble: 6 × 21 #>    year term  subject      subject_abbr course course_num course_numeric seminar #>   <dbl> <fct> <fct>        <fct>        <fct>  <fct>               <int> <lgl>   #> 1  2018 Fall  Film and Te… FILM TV      Intro… 4                       4 FALSE   #> 2  2018 Fall  Nursing      NA           Intro… 10                     10 FALSE   #> 3  2018 Fall  English Com… ENGCOMP      Intro… 1                       1 FALSE   #> 4  2018 Fall  Life Scienc… LIFESCI      Life:… 15                     15 FALSE   #> 5  2018 Fall  Nursing      NA           Patho… 54B                    54 FALSE   #> 6  2018 Fall  Earth, Plan… EPS SCI      Intro… 1                       1 FALSE   #> # ℹ 13 more variables: ind_study <lgl>, apprenticeship <lgl>, internship <lgl>, #> #   honors_contracts <lgl>, laboratory <lgl>, special_topic <lgl>, #> #   textbook_isbn <chr>, bookstore_new <dbl>, bookstore_used <dbl>, #> #   amazon_new <dbl>, amazon_used <dbl>, notes <fct>, diff <dbl>  # Distribution of price differences ggplot(ucla_textbooks_f18_with_diff, aes(x = diff)) +   geom_histogram(binwidth = 5) #> Warning: Removed 133 rows containing non-finite outside the scale range (`stat_bin()`).   # t-test of price differences t.test(ucla_textbooks_f18_with_diff$diff) #>  #> \tOne Sample t-test #>  #> data:  ucla_textbooks_f18_with_diff$diff #> t = 2.2012, df = 67, p-value = 0.03117 #> alternative hypothesis: true mean is not equal to 0 #> 95 percent confidence interval: #>  0.3340641 6.8324064 #> sample estimates: #> mean of x  #>  3.583235  #>"},{"path":"https://openintrostat.github.io/openintro/reference/ukdemo.html","id":null,"dir":"Reference","previous_headings":"","what":"United Kingdom Demographic Data — ukdemo","title":"United Kingdom Demographic Data — ukdemo","text":"dataset comes Guardian's Data Blog includes five financial demographic variables.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ukdemo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United Kingdom Demographic Data — ukdemo","text":"","code":"ukdemo"},{"path":"https://openintrostat.github.io/openintro/reference/ukdemo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United Kingdom Demographic Data — ukdemo","text":"data frame 12 observations following 6 variables. region Region United Kingdom debt Average regional debt, including mortgages, pounds unemployment Percent unemployment house Average house price, pounds pay Average hourly pay, pounds rpi Retail price index, standardized 100 entire UK, lower index scores correspond lower prices","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ukdemo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United Kingdom Demographic Data — ukdemo","text":"data described Guardian Data Blog: https://www.theguardian.com/news/datablog/interactive/2011/oct/27/debt-money-expert-facts, retrieved 2011-11-01.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ukdemo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"United Kingdom Demographic Data — ukdemo","text":"Guardian Data Blog","code":""},{"path":"https://openintrostat.github.io/openintro/reference/ukdemo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United Kingdom Demographic Data — ukdemo","text":"","code":"library(ggplot2)  ggplot(ukdemo, aes(x = pay, y = rpi)) +   geom_point() +   labs(x = \"Average hourly pay\", y = \"Retail price index\")"},{"path":"https://openintrostat.github.io/openintro/reference/unempl.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual unemployment since 1890 — unempl","title":"Annual unemployment since 1890 — unempl","text":"compilation two datasets provides estimate unemployment 1890 2010.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/unempl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual unemployment since 1890 — unempl","text":"","code":"unempl"},{"path":"https://openintrostat.github.io/openintro/reference/unempl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual unemployment since 1890 — unempl","text":"data frame 121 observations following 3 variables. year Year unemp Unemployment rate, percent us_data 1 Bureau Labor Statistics, 0 otherwise","code":""},{"path":"https://openintrostat.github.io/openintro/reference/unempl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual unemployment since 1890 — unempl","text":"data Wikipedia following URL accessed November 1st, 2010: https://en.wikipedia.org/wiki/File:US_Unemployment_1890-2009.gif direct quote Wikipedia describing sources data: work Peace01234 Complete raw data Peace01234. 1930-2009 data Bureau Labor Statistics (BLS), Employment status civilian noninstitutional population, 1940 date retrieved March 6, 2009 February 12, 2010 BLS' FTP server. Data prior 1948 persons age 14 . Data beginning 1948 persons age 16 . See also \"Historical Comparability\" Household Data section Explanatory Notes https://www.bls.gov/cps/eetech_methods.pdf. 1890-1930 data Christina Romer (1986). \"Spurious Volatility Historical Unemployment Data\", Journal Political Economy, 94(1): 1-37. 1930-1940 data Robert M. Coen (1973). \"Labor Force Unemployment 1920's 1930's: Re-Examination Based Postwar Experience\", Review Economics Statistics, 55(1): 46-55. Unemployment data surveyed decade 1940 yearly surveys begun. yearly data estimates 1940 based decade surveys combined relevant surveys collected years. methods described detail Coen Romer.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/unempl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annual unemployment since 1890 — unempl","text":"","code":"# =====> Time Series Plot of Data <=====# COL <- c(\"#DDEEBB\", \"#EEDDBB\", \"#BBDDEE\", \"#FFD5DD\", \"#FFC5CC\") plot(unempl$year, unempl$unemp, type = \"n\") rect(0, -50, 3000, 100, col = \"#E2E2E2\") rect(1914.5, -1000, 1918.9, 1000, col = COL[1], border = \"#E2E2E2\") rect(1929, -1000, 1939, 1000, col = COL[2], border = \"#E2E2E2\") rect(1939.7, -1000, 1945.6, 1000, col = COL[3], border = \"#E2E2E2\") rect(1955.8, -1000, 1965.3, 1000, col = COL[4], border = \"#E2E2E2\") rect(1965.3, -1000, 1975.4, 1000, col = COL[5], border = \"#E2E2E2\") abline(h = seq(0, 50, 5), col = \"#F8F8F8\", lwd = 2) abline(v = seq(1900, 2000, 20), col = \"#FFFFFF\", lwd = 1.3) lines(unempl$year, unempl$unemp) points(unempl$year, unempl$unemp, pch = 20) legend(\"topright\",   fill = COL,   c(     \"World War I\", \"Great Depression\", \"World War II\",     \"Vietnam War Start\", \"Vietnam War Escalated\"   ),   bg = \"#FFFFFF\", border = \"#FFFFFF\" )"},{"path":"https://openintrostat.github.io/openintro/reference/unemploy_pres.html","id":null,"dir":"Reference","previous_headings":"","what":"President's party performance and unemployment rate — unemploy_pres","title":"President's party performance and unemployment rate — unemploy_pres","text":"Covers midterm elections.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/unemploy_pres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"President's party performance and unemployment rate — unemploy_pres","text":"","code":"unemploy_pres"},{"path":"https://openintrostat.github.io/openintro/reference/unemploy_pres.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"President's party performance and unemployment rate — unemploy_pres","text":"data frame 29 observations following 5 variables. year Year. potus president office. party President's party. unemp Unemployment rate. change Change House seats president's party.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/unemploy_pres.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"President's party performance and unemployment rate — unemploy_pres","text":"Wikipedia.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/unemploy_pres.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"President's party performance and unemployment rate — unemploy_pres","text":"","code":"unemploy_pres #> # A tibble: 29 × 5 #>     year potus                     party      unemp change #>    <int> <fct>                     <fct>      <dbl>  <dbl> #>  1  1899 William McKinley          Republican 11.6   -9.22 #>  2  1903 Theodore Roosevelt        Republican  4.3   -4.28 #>  3  1907 Theodore Roosevelt        Republican  3.29 -12.3  #>  4  1911 William Howard Taft       Republican  5.86 -26.6  #>  5  1915 Woodrow Wilson            Republican  6.63 -21.0  #>  6  1919 Woodrow Wilson            Republican  3.38 -10.3  #>  7  1923 Calvin Coolidge           Republican  6.93 -25.5  #>  8  1927 Calvin Coolidge           Republican  4.02  -3.64 #>  9  1931 Herbert Clark Hoover      Republican  8.94 -19.3  #> 10  1935 Franklin Delano Roosevelt Republican 21.3    2.88 #> # ℹ 19 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/us_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"US temperatures in 1950 and 2022 — us_temperature","title":"US temperatures in 1950 and 2022 — us_temperature","text":"representative set monitoring locations taken NOAA data 1950 2022 locations sampled roughly geographically across continental US (observations represent random sample geographical locations).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/us_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US temperatures in 1950 and 2022 — us_temperature","text":"","code":"us_temperature"},{"path":"https://openintrostat.github.io/openintro/reference/us_temperature.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US temperatures in 1950 and 2022 — us_temperature","text":"data frame 18759 observations following 9 variables. location Location NOAA weather station. station Formal ID NOAA weather station. latitude Latitude NOAA weather station. longitude Longitude NOAA weather station. elevation Elevation NOAA weather station. date Date measurement taken (Y-m-d). tmax Maximum daily temperature (Farenheit). tmin Minimum daily temperature (Farenheit). year Year measurement.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/us_temperature.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US temperatures in 1950 and 2022 — us_temperature","text":"NOAA Climate Data Online. Retrieved 23 September, 2023.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/us_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"US temperatures in 1950 and 2022 — us_temperature","text":"Please keep mind data represent two annual snapshots, complete analysis consider two years data random complete sampling weather stations across US.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/us_temperature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US temperatures in 1950 and 2022 — us_temperature","text":"","code":"library(dplyr) library(ggplot2) library(maps)  summarized_temp <- us_temperature |>   group_by(station, year, latitude, longitude) |>   summarize(tmax_med = median(tmax, na.rm = TRUE)) |>   mutate(plot_shift = ifelse(year == \"1950\", 0, 1)) |>   mutate(year = as.factor(year)) #> `summarise()` has grouped output by 'station', 'year', 'latitude'. You can #> override using the `.groups` argument.  usa <- map_data(\"state\")  ggplot(data = usa, aes(x = long, y = lat)) +   geom_polygon(aes(group = group), color = \"black\", fill = \"white\") +   geom_point(     data = summarized_temp,     aes(       x = longitude + plot_shift, y = latitude,       color = tmax_med, shape = year     )   ) +   scale_color_gradient(high = IMSCOL[\"red\", 1], low = IMSCOL[\"yellow\", 1]) +   ggtitle(\"Median of the daily high temp, 1950 & 2022\") +   labs(     x = \"longitude\",     color = \"median high temp\"   ) +   guides(shape = guide_legend(override.aes = list(color = \"black\")))"},{"path":"https://openintrostat.github.io/openintro/reference/usb_admit.html","id":null,"dir":"Reference","previous_headings":"","what":"ucb_admit — usb_admit","title":"ucb_admit — usb_admit","text":"Data study carried graduate Division University California, Berkeley early 1970's evaluate whether sex bias graduate admissions.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/usb_admit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ucb_admit — usb_admit","text":"","code":"ucb_admit"},{"path":"https://openintrostat.github.io/openintro/reference/usb_admit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ucb_admit — usb_admit","text":"data frame 4526 observations following 3 variables. admit applicant admitted university? gender Whether applicant identified male female. department department applicant apply , noted F confidentiality.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/usb_admit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ucb_admit — usb_admit","text":"","code":"library(ggplot2) library(dplyr)  plot_data <- ucb_admit |>   count(dept, gender, admit)  ggplot(plot_data, aes(dept, n, fill = gender)) +   geom_col(position = \"dodge\") +   facet_wrap(~admit) +   theme_minimal() +   labs(     title = \"Does gender discrimination play a role in college admittance?\",     x = \"Department\",     y = \"Number of Students\",     fill = \"Gender\",     caption = \"Source: UC Berkeley, 1970's\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/winery_cars.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Between Gondola Cars at Sterling Winery — winery_cars","title":"Time Between Gondola Cars at Sterling Winery — winery_cars","text":"times represent times gondolas Sterling Winery. main take-away: 7 cars, evidenced somewhat regular increases splits every 7 cars. reason times slightly non-constant gondolas come tracks, times change little period.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/winery_cars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Between Gondola Cars at Sterling Winery — winery_cars","text":"","code":"winery_cars"},{"path":"https://openintrostat.github.io/openintro/reference/winery_cars.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time Between Gondola Cars at Sterling Winery — winery_cars","text":"data frame 52 observations following 2 variables. obs_number observation number, e.g. observation 3 immediately preceded observation 2. time_until_next Time gondola car arrived since last car left.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/winery_cars.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time Between Gondola Cars at Sterling Winery — winery_cars","text":"-person data collection David Diez (OpenIntro) 2013-07-04.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/winery_cars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time Between Gondola Cars at Sterling Winery — winery_cars","text":"Important context: sufficient line people leaving winery. data valuable? indicates winery add one car since lot time wasted every 7th car. adding another car, fewer visitors likely turned away, resulting increased revenue.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/winery_cars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time Between Gondola Cars at Sterling Winery — winery_cars","text":"","code":"winery_cars$car_number <- rep(1:7, 10)[1:nrow(winery_cars)] col <- COL[ifelse(winery_cars$car_number == 3, 4, 1)] plot(winery_cars[, c(\"obs_number\", \"time_until_next\")],   col = col, pch = 19 )  plot(winery_cars$car_number, winery_cars$time_until_next,   col = fadeColor(col, \"88\"), pch = 19 )"},{"path":"https://openintrostat.github.io/openintro/reference/world_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"World Population Data. — world_pop","title":"World Population Data. — world_pop","text":"World Bank, population 1960-2020","code":""},{"path":"https://openintrostat.github.io/openintro/reference/world_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World Population Data. — world_pop","text":"","code":"world_pop"},{"path":"https://openintrostat.github.io/openintro/reference/world_pop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World Population Data. — world_pop","text":"data frame 216 rows 62 variables. country Name country. year_1960 population 1960. year_1961 population 1961. year_1962 population 1962. year_1963 population 1963. year_1964 population 1964. year_1965 population 1965. year_1966 population 1966. year_1967 population 1967. year_1968 population 1968. year_1969 population 1969. year_1970 population 1970. year_1971 population 1971. year_1972 population 1972. year_1973 population 1973. year_1974 population 1974. year_1975 population 1975. year_1976 population 1976. year_1977 population 1977. year_1978 population 1978. year_1979 population 1979. year_1980 population 1980. year_1981 population 1981. year_1982 population 1982. year_1983 population 1983. year_1984 population 1984. year_1985 population 1985. year_1986 population 1986. year_1987 population 1987. year_1988 population 1988. year_1989 population 1989. year_1990 population 1990. year_1991 population 1991. year_1992 population 1992. year_1993 population 1993. year_1994 population 1994. year_1995 population 1995. year_1996 population 1996. year_1997 population 1997. year_1998 population 1998. year_1999 population 1999. year_2000 population 2000. year_2001 population 2001. year_2002 population 2002. year_2003 population 2003. year_2004 population 2004. year_2005 population 2005. year_2006 population 2006. year_2007 population 2007. year_2008 population 2008. year_2009 population 2009. year_2010 population 2010. year_2011 population 2011. year_2012 population 2012. year_2013 population 2013. year_2014 population 2014. year_2015 population 2015. year_2016 population 2016. year_2017 population 2017. year_2018 population 2018. year_2019 population 2019. year_2020 population 2020.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/world_pop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World Population Data. — world_pop","text":"World Bank","code":""},{"path":"https://openintrostat.github.io/openintro/reference/world_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World Population Data. — world_pop","text":"","code":"library(dplyr) library(ggplot2) library(tidyr)  # List percentage of population change from 1960 to 2020 world_pop |>   mutate(percent_change = round((year_2020 - year_1960) / year_2020 * 100, 2)) |>   mutate(rank_pop_change = round(rank(-percent_change)), 0) |>   select(rank_pop_change, country, percent_change) |>   arrange(rank_pop_change) #>     rank_pop_change                        country percent_change #> 1                 1           United Arab Emirates          99.07 #> 2                 2                          Qatar          98.36 #> 3                 3                         Kuwait          93.70 #> 4                 4      Sint Maarten (Dutch part)          93.06 #> 5                 5                       Djibouti          91.54 #> 6                 6                         Jordan          90.85 #> 7                 7                        Bahrain          90.45 #> 8                 8       St. Martin (French part)          89.92 #> 9                 9                           Oman          89.20 #> 10               10                   Saudi Arabia          88.26 #> 11               11                 Cayman Islands          88.02 #> 12               12                  Cote d'Ivoire          86.72 #> 13               13                          Niger          86.00 #> 14               14                         Uganda          85.21 #> 15               15       Turks and Caicos Islands          84.96 #> 16               16                          Kenya          84.90 #> 17               17                    Gambia, The          84.89 #> 18               18                         Angola          83.40 #> 19               19                       Maldives          83.37 #> 20               20                         Zambia          83.30 #> 21               21                       Tanzania          83.17 #> 22               22               Congo, Dem. Rep.          82.97 #> 23               23                Solomon Islands          82.84 #> 24               24                          Sudan          82.79 #> 25               26       Northern Mariana Islands          82.66 #> 26               26                        Somalia          82.66 #> 27               27                        Andorra          82.64 #> 28               28                    Yemen, Rep.          82.18 #> 29               29                           Iraq          81.88 #> 30               30              Equatorial Guinea          81.80 #> 31               31                           Chad          81.73 #> 32               32                     Mauritania          81.71 #> 33               33                     Madagascar          81.58 #> 34               34                    Congo, Rep.          81.55 #> 35               35              Brunei Darussalam          81.32 #> 36               36                           Togo          80.91 #> 37               37                         Malawi          80.87 #> 38               38                        Senegal          80.85 #> 39               39                       Ethiopia          80.73 #> 40               40                       Cameroon          80.50 #> 41               41                          Benin          79.94 #> 42               42                       Pakistan          79.63 #> 43               43                       Honduras          79.42 #> 44               44                        Vanuatu          79.26 #> 45               45                          Libya          78.92 #> 46               46                          Ghana          78.65 #> 47               47                       Botswana          78.62 #> 48               48                     Tajikistan          78.12 #> 49               49                        Nigeria          78.10 #> 50               50                        Comoros          78.02 #> 51               51                        Liberia          77.88 #> 52               52                          Gabon          77.49 #> 53               53                         Rwanda          77.34 #> 54               54                         Israel          77.06 #> 55               55                     Mozambique          77.01 #> 56               56                   Burkina Faso          76.90 #> 57               57                    Afghanistan          76.89 #> 58               58                         Belize          76.85 #> 59               59                        Burundi          76.47 #> 60               60                    Philippines          76.03 #> 61               61                      Guatemala          75.51 #> 62               62               Marshall Islands          75.21 #> 63               63                     Uzbekistan          75.09 #> 64               64                        Namibia          75.04 #> 65               65                       Malaysia          74.80 #> 66               66               Papua New Guinea          74.79 #> 67               67                        Algeria          74.78 #> 68               68                    South Sudan          74.60 #> 69               69                       Zimbabwe          74.59 #> 70               70                        Ecuador          74.25 #> 71               71               Macao SAR, China          74.16 #> 72               72                           Mali          74.01 #> 73               73               Egypt, Arab Rep.          73.97 #> 74               74             Iran, Islamic Rep.          73.92 #> 75               75                     Costa Rica          73.88 #> 76               76           Syrian Arab Republic          73.87 #> 77               77                         Panama          73.74 #> 78               78                        Lebanon          73.56 #> 79               79                   Turkmenistan          73.42 #> 80               80                         Guinea          73.39 #> 81               81         British Virgin Islands          73.37 #> 82               82                       Paraguay          73.31 #> 83               83                      Nicaragua          73.23 #> 84               84               French Polynesia          72.20 #> 85               85                   Bahamas, The          72.15 #> 86               86                  Venezuela, RB          71.37 #> 87               87                   South Africa          71.17 #> 88               88                         Bhutan          71.06 #> 89               89                      Singapore          71.04 #> 90               90                       Eswatini          70.99 #> 91               92                  New Caledonia          70.95 #> 92               92                   Sierra Leone          70.95 #> 93               94                     Bangladesh          70.85 #> 94               94                        Lao PDR          70.85 #> 95               94                       Mongolia          70.85 #> 96               96                         Mexico          70.70 #> 97               97          Sao Tome and Principe          70.66 #> 98               98             Dominican Republic          69.63 #> 99               99          Virgin Islands (U.S.)          69.42 #> 100             100                           Peru          69.20 #> 101             101       Central African Republic          68.91 #> 102             102                  Guinea-Bissau          68.69 #> 103             103                        Bolivia          68.67 #> 104             104                       Colombia          68.44 #> 105             105                      Indonesia          67.92 #> 106             106                         Turkey          67.43 #> 107             107                          India          67.35 #> 108             108                Kyrgyz Republic          67.04 #> 109             109                        Morocco          66.60 #> 110             110                        Vietnam          66.44 #> 111             111                          Haiti          66.09 #> 112             112                         Brazil          66.04 #> 113             113                       Cambodia          65.77 #> 114             114                       Kiribati          65.51 #> 115             115                          Nepal          65.32 #> 116             116                        Tunisia          64.65 #> 117             117                    Timor-Leste          64.01 #> 118             118                     Cabo Verde          63.71 #> 119             119                 American Samoa          63.54 #> 120             120                     Azerbaijan          61.47 #> 121             121          Micronesia, Fed. Sts.          61.30 #> 122             122                        Lesotho          60.92 #> 123             123                       Thailand          60.75 #> 124             124                           Guam          60.46 #> 125             125                        Myanmar          60.05 #> 126             126                      Australia          59.99 #> 127             127                          Nauru          59.60 #> 128             128           Hong Kong SAR, China          58.89 #> 129             129                     Seychelles          57.65 #> 130             130                          Chile          57.46 #> 131             131                    El Salvador          57.35 #> 132             132                  Liechtenstein          56.73 #> 133             133                           Fiji          56.11 #> 134             134      Korea, Dem. People's Rep.          55.68 #> 135             135                      Sri Lanka          54.95 #> 136             136                         Tuvalu          54.88 #> 137             137                      Argentina          54.86 #> 138             138                     San Marino          54.51 #> 139             139                    New Zealand          53.35 #> 140             140                         Canada          52.88 #> 141             141                         Cyprus          52.55 #> 142             142                          China          52.42 #> 143             143                        Iceland          52.08 #> 144             144                    Korea, Rep.          51.70 #> 145             145                      St. Lucia          51.15 #> 146             146                       Suriname          50.93 #> 147             147                     Luxembourg          50.34 #> 148             148                          Aruba          49.23 #> 149             149                      Mauritius          47.91 #> 150             150                     Kazakhstan          47.03 #> 151             151                         Kosovo          46.66 #> 152             152                          Palau          46.00 #> 153             153                          Samoa          45.25 #> 154             154                  United States          45.17 #> 155             155                        Jamaica          45.00 #> 156             156            Antigua and Barbuda          44.72 #> 157             157                        Ireland          43.37 #> 158             158                        Albania          43.31 #> 159             159                    Isle of Man          43.03 #> 160             160                         Monaco          42.77 #> 161             161                      Greenland          42.34 #> 162             162                          Tonga          41.74 #> 163             163            Trinidad and Tobago          39.41 #> 164             164                    Switzerland          38.31 #> 165             165                          Malta          37.83 #> 166             166                           Cuba          36.95 #> 167             167                        Armenia          36.75 #> 168             168                          Spain          35.68 #> 169             169                    Netherlands          34.14 #> 170             170                         Norway          33.43 #> 171             171                         France          30.82 #> 172             172                        Bermuda          30.52 #> 173             173                      Gibraltar          30.49 #> 174             174                  Faroe Islands          29.14 #> 175             175                North Macedonia          28.55 #> 176             176                         Sweden          27.71 #> 177             177                         Guyana          27.30 #> 178             178 St. Vincent and the Grenadines          27.02 #> 179             179                        Uruguay          26.92 #> 180             180                    Puerto Rico          26.17 #> 181             181                          Japan          25.92 #> 182             182                Slovak Republic          25.48 #> 183             183                       Slovenia          24.54 #> 184             184                     Montenegro          22.70 #> 185             185                         Greece          22.25 #> 186             186                 United Kingdom          22.04 #> 187             187                        Moldova          21.93 #> 188             188                         Poland          21.91 #> 189             189                        Denmark          21.47 #> 190             190                        Austria          20.97 #> 191             191                        Belgium          20.79 #> 192             192                        Grenada          20.08 #> 193             193                        Finland          19.91 #> 194             194                       Barbados          19.62 #> 195             195                        Curacao          19.47 #> 196             196             Russian Federation          16.80 #> 197             197                       Dominica          16.63 #> 198             198                          Italy          15.71 #> 199             199                       Portugal          14.05 #> 200             200                        Belarus          12.78 #> 201             201                        Germany          12.52 #> 202             202                 Czech Republic          10.25 #> 203             203                        Estonia           8.98 #> 204             204                        Romania           4.56 #> 205             205                         Serbia           4.35 #> 206             206            St. Kitts and Nevis           3.75 #> 207             207                        Ukraine           3.33 #> 208             208                        Georgia           1.84 #> 209             209         Bosnia and Herzegovina           1.68 #> 210             210                      Lithuania           0.58 #> 211             211                        Croatia          -2.30 #> 212             212                        Hungary          -2.40 #> 213             213                         Latvia         -11.54 #> 214             214                       Bulgaria         -13.57 #> 215             215                        Eritrea             NA #> 216             216             West Bank and Gaza             NA  # Graph population in millions by decade for specified countries world_pop |>   select(     country, year_1960, year_1970, year_1980, year_1990,     year_2000, year_2010, year_2020   ) |>   filter(country %in% c(\"China\", \"India\", \"United States\")) |>   pivot_longer(     cols = c(year_1960, year_1970, year_1980, year_1990, year_2000, year_2010, year_2020),     names_to = \"year\",     values_to = \"population\"   ) |>   mutate(year = as.numeric(gsub(\"year_\", \"\", year))) |>   ggplot(aes(year, population, color = country)) +   geom_point() +   geom_smooth(method = \"loess\", formula = \"y ~ x\") +   labs(     title = \"Population\",     subtitle = \"by Decade\",     x = \"Year\",     y = \"Population (in millions)\",     color = \"Country\"   )"},{"path":"https://openintrostat.github.io/openintro/reference/write_pkg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a CSV variant of .rda files — write_pkg_data","title":"Create a CSV variant of .rda files — write_pkg_data","text":"function run path package directory. look data directory package, datasets data frames, create CSV variants data-csv directory.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/write_pkg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a CSV variant of .rda files — write_pkg_data","text":"","code":"write_pkg_data(   pkg,   dir = paste0(\"data-\", out_type),   overwrite = FALSE,   out_type = c(\"csv\", \"tab\", \"R\") )"},{"path":"https://openintrostat.github.io/openintro/reference/write_pkg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a CSV variant of .rda files — write_pkg_data","text":"pkg R package like generate CSVs data frames. dir character string representing path folder. CSV files written. directory exists, one created (recursively). overwrite Boolean indicate overwrite existing files conflicting names directory specified. out_type Format type output CSV (\"csv\"), tab-delimited text file (\"tab\"), R code generate object (\"R\").","code":""},{"path":"https://openintrostat.github.io/openintro/reference/write_pkg_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a CSV variant of .rda files — write_pkg_data","text":"","code":"if (FALSE) { write_pkg_data(\"openintro\") list.files(\"data-csv\") }"},{"path":"https://openintrostat.github.io/openintro/reference/xom.html","id":null,"dir":"Reference","previous_headings":"","what":"Exxon Mobile stock data — xom","title":"Exxon Mobile stock data — xom","text":"Monthly data covering 2006 early 2014.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/xom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exxon Mobile stock data — xom","text":"","code":"xom"},{"path":"https://openintrostat.github.io/openintro/reference/xom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exxon Mobile stock data — xom","text":"data frame 98 observations following 7 variables. date Date. open numeric vector high numeric vector low numeric vector close numeric vector volume numeric vector adj_close numeric vector","code":""},{"path":"https://openintrostat.github.io/openintro/reference/xom.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Exxon Mobile stock data — xom","text":"Yahoo! Finance.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/xom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exxon Mobile stock data — xom","text":"","code":"xom #> # A tibble: 98 × 7 #>    date        open  high   low close   volume adj_close #>    <fct>      <dbl> <dbl> <dbl> <dbl>    <int>     <dbl> #>  1 2014-02-03  91.9  95.8  89.2  95.0 14789300      95.0 #>  2 2014-01-02 101.  101.   91.7  92.2 13058500      91.5 #>  3 2013-12-02  93.3 102.   92.9 101.  13228500     100.  #>  4 2013-11-01  89.7  96    88.3  93.5 12856000      92.8 #>  5 2013-10-01  86.0  91.0  84.8  89.6 13341600      88.4 #>  6 2013-09-03  87.7  89.9  85.6  86.0 12800900      84.9 #>  7 2013-08-01  92.7  93.1  86.4  87.2 12914100      86.0 #>  8 2013-07-01  90.4  95.5  90.0  93.8 11462900      91.8 #>  9 2013-06-03  90.5  92.3  88.0  90.4 15737500      88.5 #> 10 2013-05-01  88.5  93.5  87.5  90.5 13364200      88.6 #> # ℹ 88 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/yawn.html","id":null,"dir":"Reference","previous_headings":"","what":"Contagiousness of yawning — yawn","title":"Contagiousness of yawning — yawn","text":"experiment conducted MythBusters, science entertainment TV program Discovery Channel, tested person can subconsciously influenced yawning another person near yawns. 50 people randomly assigned two groups: 34 group person near yawned (treatment) 16 group person yawning near (control).","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yawn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contagiousness of yawning — yawn","text":"","code":"yawn"},{"path":"https://openintrostat.github.io/openintro/reference/yawn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Contagiousness of yawning — yawn","text":"data frame 50 observations following 2 variables. result factor levels yawn yawn group factor levels ctrl trmt","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yawn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Contagiousness of yawning — yawn","text":"MythBusters, Season 3, Episode 28.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yawn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contagiousness of yawning — yawn","text":"","code":"yawn #> # A tibble: 50 × 2 #>    result group #>    <fct>  <fct> #>  1 yawn   trmt  #>  2 yawn   trmt  #>  3 yawn   trmt  #>  4 yawn   trmt  #>  5 yawn   trmt  #>  6 yawn   trmt  #>  7 yawn   trmt  #>  8 yawn   trmt  #>  9 yawn   trmt  #> 10 yawn   trmt  #> # ℹ 40 more rows"},{"path":"https://openintrostat.github.io/openintro/reference/yrbss.html","id":null,"dir":"Reference","previous_headings":"","what":"Youth Risk Behavior Surveillance System (YRBSS) — yrbss","title":"Youth Risk Behavior Surveillance System (YRBSS) — yrbss","text":"Select variables YRBSS.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yrbss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Youth Risk Behavior Surveillance System (YRBSS) — yrbss","text":"","code":"yrbss"},{"path":"https://openintrostat.github.io/openintro/reference/yrbss.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Youth Risk Behavior Surveillance System (YRBSS) — yrbss","text":"data frame 13583 observations following 13 variables. age Age, years. gender Gender. grade School grade. hispanic Hispanic . race Race / ethnicity. height Height, meters (3.28 feet per meter). weight Weight, kilograms (2.2 pounds per kilogram). helmet_12m often wear helmet biking last 12 months? text_while_driving_30d many days text driving last 30 days? physically_active_7d many days physically active 60+ minutes last 7 days? hours_tv_per_school_day many hours TV typically watch school night? strength_training_7d many days strength training (e.g. lift weights) last 7 days? school_night_hours_sleep many hours sleep typically get school night?","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yrbss.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Youth Risk Behavior Surveillance System (YRBSS) — yrbss","text":"CDC's Youth Risk Behavior Surveillance System (YRBSS)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yrbss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Youth Risk Behavior Surveillance System (YRBSS) — yrbss","text":"","code":"table(yrbss$physically_active_7d) #>  #>    0    1    2    3    4    5    6    7  #> 2172  962 1270 1451 1265 1728  840 3622"},{"path":"https://openintrostat.github.io/openintro/reference/yrbss_samp.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of Youth Risk Behavior Surveillance System (YRBSS) — yrbss_samp","title":"Sample of Youth Risk Behavior Surveillance System (YRBSS) — yrbss_samp","text":"sample yrbss dataset.","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yrbss_samp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of Youth Risk Behavior Surveillance System (YRBSS) — yrbss_samp","text":"","code":"yrbss_samp"},{"path":"https://openintrostat.github.io/openintro/reference/yrbss_samp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of Youth Risk Behavior Surveillance System (YRBSS) — yrbss_samp","text":"data frame 100 observations following 13 variables. age Age, years. gender Gender. grade School grade. hispanic Hispanic . race Race / ethnicity. height Height, meters (3.28 feet per meter). weight Weight, kilograms (2.2 pounds per kilogram). helmet_12m often wear helmet biking last 12 months? text_while_driving_30d many days text driving last 30 days? physically_active_7d many days physically active 60+ minutes last 7 days? hours_tv_per_school_day many hours TV typically watch school night? strength_training_7d many days strength training (e.g. lift weights) last 7 days? school_night_hours_sleep many hours sleep typically get school night?","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yrbss_samp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample of Youth Risk Behavior Surveillance System (YRBSS) — yrbss_samp","text":"CDC's Youth Risk Behavior Surveillance System (YRBSS)","code":""},{"path":"https://openintrostat.github.io/openintro/reference/yrbss_samp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample of Youth Risk Behavior Surveillance System (YRBSS) — yrbss_samp","text":"","code":"table(yrbss_samp$physically_active_7d) #>  #>  0  1  2  3  4  5  6  7  #> 17  8 10  9 16 10  4 26"},{"path":"https://openintrostat.github.io/openintro/news/index.html","id":"openintro-250","dir":"Changelog","previous_headings":"","what":"openintro 2.5.0","title":"openintro 2.5.0","text":"fish_age, nba_finals nba_finals_teams @npaterno lego_population lego_sample @mmeece lecture_learning @jonathanaakin cars04, life_exp, comics, nyc, gss_wordsum_class, manhattan, iran, iowa, twins, LAhomes, movies, ucb_admit, soda ported IMS Tutorials @npaterno nyc_marathon, paralympic_1500, pm25_2011_durham, pm25_2022_durham, us_temperature, @hardin47 Fix HTML version manual Remove URLs longer work Updated docs use base pipe Enhance contTable allow user-supplied caption label, @sjvrensburg","code":""},{"path":"https://openintrostat.github.io/openintro/news/index.html","id":"openintro-240","dir":"Changelog","previous_headings":"","what":"openintro 2.4.0","title":"openintro 2.4.0","text":"CRAN release: 2022-09-01 Fix HTML version manual Remove URLs longer work","code":""},{"path":"https://openintrostat.github.io/openintro/news/index.html","id":"openintro-230","dir":"Changelog","previous_headings":"","what":"openintro 2.3.0","title":"openintro 2.3.0","text":"CRAN release: 2022-02-23 reddit_finance, blizzard_salary, climber_drugs simpsons_paradox_covid @npaterno mlb_teams, world_pop, sowc_demographics, sowc_maternal_newborn, sowc_child_mortality, gdp_countries mn_police_use_of_force @karenjh2 sa_gdp_elec @mmeece labor_market_discrimination @thiagoscarelli Fixed level names variables cle_sac","code":""},{"path":"https://openintrostat.github.io/openintro/news/index.html","id":"openintro-220","dir":"Changelog","previous_headings":"","what":"openintro 2.2.0","title":"openintro 2.2.0","text":"CRAN release: 2021-06-22 lizard_run lizard_habitat (thanks Stephen Adolph!) daycare_fines, biontech_adolescents, nyc_marathon, epa2021, duke_forest Add tests new datasets Better terminology: sex_discrimination","code":""},{"path":"https://openintrostat.github.io/openintro/news/index.html","id":"openintro-210","dir":"Changelog","previous_headings":"","what":"openintro 2.1.0","title":"openintro 2.1.0","text":"CRAN release: 2021-04-19 Added LazyDataCompression: xz DESCRIPTION per CRAN. earthquakes, mcu_films, salinity, snowfall, ssd_speed, fact_opinion, flow_rates, race_justice @npaterno exam_grades, opportunity_cost births14 @AmeliaMN Removed redundant prof_evals dataset Updated email email50 datasets make indicator variables factors, remove variables don’t exist data documentation, update documentation email50 match randomly sampled data Updated orings data require much less manipulation glm Updated epa2012 NAs empty levels updated documentation describe variables better Updated documentation births, ncbirths, babies, murders data provenance issues Updated midterms_house party levels “Democrat” “Republican” (“Democratic”) Added two new objects colors: openintro_colors openintro_palettes write_pkg_data() creating downloadable datasets OpenIntro site scale_color_openintro() scale_fill_openintro() constructing OpenIntro color scales ggplot2 (less likely directly used openintro_pal() (unexported) openintro_cols())","code":""},{"path":"https://openintrostat.github.io/openintro/news/index.html","id":"openintro-200","dir":"Changelog","previous_headings":"","what":"openintro 2.0.0","title":"openintro 2.0.0","text":"CRAN release: 2020-07-03 Added NEWS.md file track changes package. Consolidated openintro, oilabs, oidata packages. Updated dataframe variable names use snake_case. Turned data.frames tibbles. Simplified code examples make accessible student audience package. Added new datasets used OpenIntro Statistics, 4th Edition. Added new datasets used new OpenIntro labs. Removed package startup message. Added dependency following packages: airports, cherryblossom, usdata. Moved run09, run12, run19 datasets cherryblossom package. Moved usairports airports packages. Moved county_complete, county, govrace10, houserace10, prrace08, senaterace10, state_stats, urban_owner, urban_rural_pop, vote_nsa datasets state2abbr abbr2state functions usdata package.","code":""}]
